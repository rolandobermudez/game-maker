class __2{constructor(_03){this._13=0;this._23=0;this.feedback=0;this._33=0;this.buffer=new Float32Array(_03);this._43=0;}process(_53){const out=this.buffer[this._43];this._33=(this._33*this._13)+(out*this._23);this.buffer[this._43]=_53+(this._33*this.feedback);++this._43;this._43%=this.buffer.length;return out;}_63(_73){this.feedback=Math.min(Math.max(0,_73),1);}_83(_93){this._13=Math.min(Math.max(0,_93),1);this._23=1-this._13;}}class _a3{constructor(_03){this.feedback=0;this.buffer=new Float32Array(_03);
this._43=0;}process(_53){const out=this.buffer[this._43];this.buffer[this._43]=_53+(out*this.feedback);++this._43;this._43%=this.buffer.length;return(out-_53);}_63(_73){this.feedback=Math.min(Math.max(0,_73),1);}}class _b3 extends AudioWorkletProcessor{static _c3=8;static _d3=4;static _e3=0.015;static _f3=0.4;static _g3=0.28;static _h3=0.7;static _i3=[1116,1188,1277,1356,1422,1491,1557,1617];static _j3=[1139,1211,1300,1379,1445,1514,1580,1640];static _k3=[556,441,341,225];static _l3=[579,464,364,248];static get parameterDescriptors(){
return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"size",automationRate:"a-rate",defaultValue:0.7,minValue:0.0,maxValue:1.0},{name:"damp",automationRate:"a-rate",defaultValue:0.1,minValue:0.0,maxValue:1.0},{name:"mix",automationRate:"a-rate",defaultValue:0.35,minValue:0.0,maxValue:1.0}];}constructor(_m3){super();this._n3();const _o3=_m3.outputChannelCount[0];this._p3=-1;this._q3=-1;this._r3=new Array(_o3);this._s3=new Array(_o3);const _t3=[_b3._i3,_b3._j3];const _u3=[_b3._k3,
_b3._l3];for(let _v3=0;_v3<_o3;++_v3){this._r3[_v3]=new Array(_b3._c3);this._s3[_v3]=new Array(_b3._d3);for(let _w3=0;_w3<_b3._c3;++_w3)this._r3[_v3][_w3]=new __2(_t3[_v3%_t3.length][_w3]);for(let _w3=0;_w3<_b3._d3;++_w3)this._s3[_v3][_w3]=new _a3(_u3[_v3%_u3.length][_w3]);}this._x3(0.5);this._83(0.5);for(let _v3=0;_v3<_o3;++_v3)for(let _w3=0;_w3<_b3._d3;++_w3)this._s3[_v3][_w3]._63(0.5);}process(_y3,_z3,parameters){const input=_y3[0];const output=_z3[0];const bypass=parameters.bypass;const size=parameters.size;
const damp=parameters.damp;const mix=parameters.mix;for(let _v3=0;_v3<input.length;++_v3){const _A3=input[_v3];const _B3=output[_v3];for(let _C3=0;_C3<_A3.length;++_C3){const _C3=(size[_C3]!==undefined)?size[_C3]:size[0];const _D3=(damp[_C3]!==undefined)?damp[_C3]:damp[0];this._x3(_C3);this._83(_D3);_B3[_C3]=_A3[_C3];let out=0;const _E3=_A3[_C3]*_b3._e3;for(let _w3=0;_w3<_b3._c3;++_w3)out+=this._r3[_v3][_w3].process(_E3);for(let _w3=0;_w3<_b3._d3;++_w3)out=this._s3[_v3][_w3].process(out);const _F3=(bypass[_C3]!==undefined)?bypass[_C3]:bypass[0];
if(_F3>0.0){continue;}const _G3=(mix[_C3]!==undefined)?mix[_C3]:mix[0];_B3[_C3]*=(1-_G3);_B3[_C3]+=(out*_G3);}}return this._H3;}_x3(_03){if(_03===this._p3)return;const size=(_03*_b3._g3)+_b3._h3;for(let _v3=0;_v3<this._r3.length;++_v3)for(let _w3=0;_w3<_b3._c3;++_w3)this._r3[_v3][_w3]._63(size);this._p3=_03;}_83(_93){if(_93===this._q3)return;const damp=_93*_b3._f3;for(let _v3=0;_v3<this._r3.length;++_v3)for(let _w3=0;_w3<_b3._c3;++_w3)this._r3[_v3][_w3]._83(damp);this._q3=_93;}}registerProcessor("reverb1-processor",
_b3);class _I3 extends AudioWorkletProcessor{static get parameterDescriptors(){return [];}constructor(){super();this._n3();}process(_J3,_K3,_L3){const input=_J3[0];const _M3=_K3[0];const _N3=_K3[1];for(let _v3=0;_v3<input.length;++_v3){const _A3=input[_v3];const _O3=_M3[_v3];const _P3=_N3[_v3];for(let _C3=0;_C3<_A3.length;++_C3){_O3[_C3]=_A3[_C3];_P3[_C3]=_A3[_C3];}}return this._H3;}}class _Q3 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,
minValue:0,maxValue:1}];}constructor(){super();this._n3();}process(_J3,_K3,_L3){const _R3=_J3[0];const _S3=_J3[1];const output=_K3[0];const bypass=_L3.bypass;for(let _v3=0;_v3<_S3.length;++_v3){const _T3=_R3[_v3];const _U3=_S3[_v3];const _B3=output[_v3];for(let _C3=0;_C3<_T3.length;++_C3){const _F3=(bypass[_C3]!==undefined)?bypass[_C3]:bypass[0];if(_F3>0){_B3[_C3]=_U3[_C3];}else {_B3[_C3]=_T3[_C3];}}}return this._H3;}}registerProcessor("eq-input",_I3);registerProcessor("eq-output",_Q3);class _V3 extends AudioWorkletProcessor{
static get parameterDescriptors(){const _W3=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"cutoff",automationRate:"a-rate",defaultValue:Math.min(500.0,_W3),minValue:10.0,maxValue:_W3},{name:"q",automationRate:"a-rate",defaultValue:1.5,minValue:1.0,maxValue:100.0}];}constructor(_m3){super();this._n3();const _o3=_m3.outputChannelCount[0];this._X3=0;this._Y3=0;this._Z3=0;this.__3=0;this._04=0;this._14=new Float32Array(_o3);this._24=new Float32Array(_o3);
this._34=new Float32Array(_o3);this._44=new Float32Array(_o3);this._54=-1;this._64=-1;}process(_y3,_z3,parameters){const input=_y3[0];const output=_z3[0];const bypass=parameters.bypass;const cutoff=parameters.cutoff;const q=parameters.q;const _74=(cutoff.length===1&&q.length===1);if(_74)this._84(cutoff[0],q[0]);for(let _v3=0;_v3<input.length;++_v3){const _A3=input[_v3];const _B3=output[_v3];for(let _C3=0;_C3<_A3.length;++_C3){if(_74===!1){const _v3=(cutoff[_C3]!==undefined)?cutoff[_C3]:cutoff[0];const _94=(q[_C3]!==undefined)?q[_C3]:q[0];
this._84(_v3,_94);}const _a4=this._Z3*_A3[_C3]+this.__3*this._14[_v3]+this._04*this._24[_v3]-this._X3*this._34[_v3]-this._Y3*this._44[_v3];this._24[_v3]=this._14[_v3];this._14[_v3]=_A3[_C3];this._44[_v3]=this._34[_v3];this._34[_v3]=_a4;const _F3=(bypass[_C3]!==undefined)?bypass[_C3]:bypass[0];_B3[_C3]=(_F3>0)?_A3[_C3]:_a4;}}return this._H3;}_84(_b4,_c4){if(_b4===this._54&&_c4===this._64)return;const _d4=2*Math.PI*_b4/sampleRate;const alpha=Math.sin(_d4)/(2*_c4);const _e4=Math.cos(_d4);const _f4=1+alpha;
const _X3=-2*_e4;const _Y3=1-alpha;const _Z3=(1-_e4)/2;const __3=1-_e4;const _04=(1-_e4)/2;this._X3=_X3/_f4;this._Y3=_Y3/_f4;this._Z3=_Z3/_f4;this.__3=__3/_f4;this._04=_04/_f4;this._54=_b4;this._64=_c4;}}registerProcessor("lpf2-processor",_V3);class _g4 extends AudioWorkletProcessor{static get parameterDescriptors(){const _h4=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"freq",automationRate:"a-rate",defaultValue:Math.min(1500.0,
_h4),minValue:10.0,maxValue:_h4},{name:"q",automationRate:"a-rate",defaultValue:1.0,minValue:1.0,maxValue:100.0},{name:"gain",automationRate:"a-rate",defaultValue:1e-2,minValue:1e-6}];}constructor(_m3){super();this._n3();const _o3=_m3.outputChannelCount[0];this._X3=0;this._Y3=0;this._Z3=0;this.__3=0;this._04=0;this._14=new Float32Array(_o3);this._24=new Float32Array(_o3);this._34=new Float32Array(_o3);this._44=new Float32Array(_o3);this._i4=-1;this._64=-1;this._j4=-1;}process(_y3,_z3,parameters){const input=_y3[0];
const output=_z3[0];const bypass=parameters.bypass;const freq=parameters.freq;const q=parameters.q;const gain=parameters.gain;const _74=(freq.length===1&&q.length===1&&gain.length===1);if(_74)this._84(freq[0],q[0],gain[0]);for(let _v3=0;_v3<input.length;++_v3){const _A3=input[_v3];const _B3=output[_v3];for(let _C3=0;_C3<_A3.length;++_C3){if(_74===!1){const _k4=(freq[_C3]!==undefined)?freq[_C3]:freq[0];const _94=(q[_C3]!==undefined)?q[_C3]:q[0];const _l4=(gain[_C3]!==undefined)?gain[_C3]:gain[0];this._84(_k4,
_94,_l4);}const _a4=this._Z3*_A3[_C3]+this.__3*this._14[_v3]+this._04*this._24[_v3]-this._X3*this._34[_v3]-this._Y3*this._44[_v3];this._24[_v3]=this._14[_v3];this._14[_v3]=_A3[_C3];this._44[_v3]=this._34[_v3];this._34[_v3]=_a4;const _F3=(bypass[_C3]!==undefined)?bypass[_C3]:bypass[0];_B3[_C3]=(_F3>0)?_A3[_C3]:_a4;}}return this._H3;}_84(_m4,_c4,_n4){if(_m4===this._i4&&_c4===this._64&&_n4===this._j4)return;const _d4=2*Math.PI*_m4/sampleRate;const _e4=Math.cos(_d4);const _o4=Math.sqrt(_n4);const alpha=Math.sin(_d4)/(2*_c4);
const _p4=alpha/_o4;const _q4=alpha*_o4;const _f4=1+_p4;const _X3=-2*_e4;const _Y3=1-_p4;const _Z3=1+_q4;const __3=_X3;const _04=1-_q4;this._X3=_X3/_f4;this._Y3=_Y3/_f4;this._Z3=_Z3/_f4;this.__3=__3/_f4;this._04=_04/_f4;this._i4=_m4;this._64=_c4;this._j4=_n4;}}registerProcessor("peak-eq-processor",_g4);class _r4 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"gain",automationRate:"a-rate",defaultValue:0.5,
minValue:0.0}];}constructor(){super();this._n3();}process(_y3,_z3,parameters){const input=_y3[0];const output=_z3[0];const bypass=parameters.bypass;const gain=parameters.gain;for(let _v3=0;_v3<input.length;++_v3){const _A3=input[_v3];const _B3=output[_v3];for(let _C3=0;_C3<_A3.length;++_C3){_B3[_C3]=_A3[_C3];const _F3=(bypass[_C3]!==undefined)?bypass[_C3]:bypass[0];if(_F3>0.0){continue;}const _l4=(gain[_C3]!==undefined)?gain[_C3]:gain[0];_B3[_C3]*=_l4;}}return this._H3;}}registerProcessor("gain-processor",
_r4);class _s4 extends AudioWorkletProcessor{static get parameterDescriptors(){const _W3=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"cutoff",automationRate:"a-rate",defaultValue:Math.min(1500.0,_W3),minValue:10.0,maxValue:_W3},{name:"q",automationRate:"a-rate",defaultValue:1.5,minValue:1.0,maxValue:100.0}];}constructor(_m3){super();this._n3();const _o3=_m3.outputChannelCount[0];this._X3=0;this._Y3=0;this._Z3=0;this.__3=0;this._04=0;
this._14=new Float32Array(_o3);this._24=new Float32Array(_o3);this._34=new Float32Array(_o3);this._44=new Float32Array(_o3);this._54=-1;this._64=-1;}process(_y3,_z3,parameters){const input=_y3[0];const output=_z3[0];const bypass=parameters.bypass;const cutoff=parameters.cutoff;const q=parameters.q;const _74=(cutoff.length===1&&q.length===1);if(_74)this._84(cutoff[0],q[0]);for(let _v3=0;_v3<input.length;++_v3){const _A3=input[_v3];const _B3=output[_v3];for(let _C3=0;_C3<_A3.length;++_C3){if(_74===!1){const _v3=(cutoff[_C3]!==undefined)?cutoff[_C3]:cutoff[0];
const _94=(q[_C3]!==undefined)?q[_C3]:q[0];this._84(_v3,_94);}const _a4=this._Z3*_A3[_C3]+this.__3*this._14[_v3]+this._04*this._24[_v3]-this._X3*this._34[_v3]-this._Y3*this._44[_v3];this._24[_v3]=this._14[_v3];this._14[_v3]=_A3[_C3];this._44[_v3]=this._34[_v3];this._34[_v3]=_a4;const _F3=(bypass[_C3]!==undefined)?bypass[_C3]:bypass[0];_B3[_C3]=(_F3>0)?_A3[_C3]:_a4;}}return this._H3;}_84(_b4,_c4){if(_b4===this._54&&_c4===this._64)return;const _d4=2*Math.PI*_b4/sampleRate;const alpha=Math.sin(_d4)/(2*_c4);
const _e4=Math.cos(_d4);const _f4=1+alpha;const _X3=-2*_e4;const _Y3=1-alpha;const _Z3=(1+_e4)/2;const __3=-1-_e4;const _04=(1+_e4)/2;this._X3=_X3/_f4;this._Y3=_Y3/_f4;this._Z3=_Z3/_f4;this.__3=__3/_f4;this._04=_04/_f4;this._54=_b4;this._64=_c4;}}registerProcessor("hpf2-processor",_s4);class _t4 extends AudioWorkletProcessor{static get parameterDescriptors(){const _h4=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"freq",automationRate:"a-rate",
defaultValue:Math.min(5000.0,_h4),minValue:10.0,maxValue:_h4},{name:"q",automationRate:"a-rate",defaultValue:1.0,minValue:1.0,maxValue:100.0},{name:"gain",automationRate:"a-rate",defaultValue:1e-2,minValue:1e-6}];}constructor(_m3){super();this._n3();const _o3=_m3.outputChannelCount[0];this._X3=0;this._Y3=0;this._Z3=0;this.__3=0;this._04=0;this._14=new Float32Array(_o3);this._24=new Float32Array(_o3);this._34=new Float32Array(_o3);this._44=new Float32Array(_o3);this._i4=-1;this._64=-1;this._j4=-1;}process(_y3,
_z3,parameters){const input=_y3[0];const output=_z3[0];const bypass=parameters.bypass;const freq=parameters.freq;const q=parameters.q;const gain=parameters.gain;const _74=(freq.length===1&&q.length===1&&gain.length===1);if(_74)this._84(freq[0],q[0],gain[0]);for(let _v3=0;_v3<input.length;++_v3){const _A3=input[_v3];const _B3=output[_v3];for(let _C3=0;_C3<_A3.length;++_C3){if(_74===!1){const _k4=(freq[_C3]!==undefined)?freq[_C3]:freq[0];const _94=(q[_C3]!==undefined)?q[_C3]:q[0];const _l4=(gain[_C3]!==undefined)?gain[_C3]:gain[0];
this._84(_k4,_94,_l4);}const _a4=this._Z3*_A3[_C3]+this.__3*this._14[_v3]+this._04*this._24[_v3]-this._X3*this._34[_v3]-this._Y3*this._44[_v3];this._24[_v3]=this._14[_v3];this._14[_v3]=_A3[_C3];this._44[_v3]=this._34[_v3];this._34[_v3]=_a4;const _F3=(bypass[_C3]!==undefined)?bypass[_C3]:bypass[0];_B3[_C3]=(_F3>0)?_A3[_C3]:_a4;}}return this._H3;}_84(_m4,_c4,_n4){if(_m4===this._i4&&_c4===this._64&&_n4===this._j4)return;const _d4=2*Math.PI*_m4/sampleRate;const _e4=Math.cos(_d4);const _o4=Math.sqrt(_n4);const _u4=_o4+1;
const _v4=_o4-1;const _w4=_u4*_e4;const _x4=_v4*_e4;const _y4=_u4-_x4;const _z4=_u4+_x4;const alpha=Math.sin(_d4)/(2*_c4);const _A4=(2*Math.sqrt(_o4)*alpha);const _f4=_y4+_A4;const _X3=2*(_v4-_w4);const _Y3=_y4-_A4;const _Z3=_o4*(_z4+_A4);const __3=-2*_o4*(_v4+_w4);const _04=_o4*(_z4-_A4);this._X3=_X3/_f4;this._Y3=_Y3/_f4;this._Z3=_Z3/_f4;this.__3=__3/_f4;this._04=_04/_f4;this._i4=_m4;this._64=_c4;this._j4=_n4;}}registerProcessor("hi-shelf-processor",_t4);function _B4(){}_B4._C4={_D4:0,_E4:1,_F4:2,_G4:3,_H4:4,
_I4:5};_B4._J4=function(_K4){return 1.0-_K4;};_B4._L4=function(_K4){return _K4;};_B4._M4=function(_K4){return 0.5*(Math.sin((_K4*2.0*Math.PI)-(Math.PI/2.0))+1.0);};_B4._N4=function(_K4){if(_K4<0.5){return 0.0;}return 1.0;};_B4._O4=function(_K4){if(_K4<0.5){return 2.0*_K4;}return 2.0-(2.0*_K4);};_B4._P4=[_B4._J4,_B4._L4,_B4._M4,_B4._N4,_B4._O4];_Q4._R4=512;_Q4._S4=1.0/_Q4._R4;function _Q4(_T4){this.data=new Float32Array(_Q4._R4);for(let _w3=0;_w3<_Q4._R4;++_w3){this.data[_w3]=_T4(_w3*_Q4._S4);}}_Q4.prototype._U4=function(_K4){
_K4=Math.max(0.0,_K4);_K4=Math.min(_K4,1.0);const _V4=_K4*_Q4._R4;const _W4=~~_V4;const _X4=_V4-_W4;let _Y4=_W4;let _Z4=_Y4+1;if(_Y4>=_Q4._R4){_Y4-=_Q4._R4;}if(_Z4>=_Q4._R4){_Z4-=_Q4._R4;}const __4=this.data[_Y4];const _05=this.data[_Z4];return __4+(_05-__4)*_X4;};;_15._25=[];_15._35=!1;_15._45=0.0;_15._h4=20.0;function _15(){this._55=48000;this.shape=_B4._C4._F4;this.freq=1.0;this._65=0.0;this._S4=0.0;this._75=0.0;if(_15._35==true){return;}for(let _w3=0;_w3<_B4._C4._I4;++_w3){_15._25[_w3]=new _Q4(_B4._P4[_w3]);
}_15._35=true;}_15._85=function(){return(_15._35==!0);};_15.prototype._95=function(_a5){this._55=_a5;this._b5();};;_15.prototype._c5=function(_m4){_m4=Math.max(_15._45,_m4);_m4=Math.min(_m4,_15._h4);this.freq=_m4;this._b5();};;_15.prototype._d5=function(_e5){_e5=Math.max(0.0,_e5);_e5=Math.min(_e5,1.0);const _f5=_e5-this._75;this._75=_e5;this._65+=_f5;while(this._65>=1.0){this._65-=1.0;}while(this._65<0.0){this._65+=1.0;}};;_15.prototype._g5=function(_h5){_h5=Math.max(0,_h5);_h5=Math.min(_h5,_B4._C4._I4-1);
this.shape=_h5;};;_15.prototype._U4=function(){const _i5=_15._25[this.shape]._U4(this._65);this._65+=this._S4;while(this._65>=1.0){this._65-=1.0;}return _i5;};;_15.prototype._b5=function(){this._S4=this.freq/this._55;};;class _j5 extends AudioWorkletProcessor{static _k5=5.0;static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"time",automationRate:"a-rate",defaultValue:0.2,minValue:0.0,maxValue:_j5._k5},{name:"feedback",automationRate:"a-rate",
defaultValue:0.5,minValue:0.0,maxValue:1.0},{name:"mix",automationRate:"a-rate",defaultValue:0.35,minValue:0.0,maxValue:1.0}];}constructor(_m3){super();this._n3();const _o3=_m3.outputChannelCount[0];const _l5=(_j5._k5*sampleRate)+1;this.buffer=new Array(_o3);this._m5=new Uint32Array(_o3);for(let _v3=0;_v3<_o3;++_v3)this.buffer[_v3]=new Float32Array(_l5);}process(_y3,_z3,parameters){const input=_y3[0];const output=_z3[0];const bypass=parameters.bypass;const time=parameters.time;const feedback=parameters.feedback;
const mix=parameters.mix;for(let _v3=0;_v3<input.length;++_v3){const _A3=input[_v3];const _B3=output[_v3];for(let _C3=0;_C3<_A3.length;++_C3){_B3[_C3]=_A3[_C3];const _n5=(time[_C3]!==undefined)?time[_C3]:time[0];const _o5=this._U4(_v3,_n5);const _k4=(feedback[_C3]!==undefined)?feedback[_C3]:feedback[0];const _p5=_A3[_C3]+(_o5*_k4);this.write(_v3,_p5);const _F3=(bypass[_C3]!==undefined)?bypass[_C3]:bypass[0];if(_F3>0.0){continue;}const _G3=(mix[_C3]!==undefined)?mix[_C3]:mix[0];_B3[_C3]*=(1-_G3);_B3[_C3]+=(_o5*_G3);
}}return this._H3;}_U4(_q5,_r5){const _s5=_r5*sampleRate;let _Y4=(this._m5[_q5]-~~_s5);let _Z4=(_Y4-1);while(_Y4<0)_Y4+=this.buffer[_q5].length;while(_Z4<0)_Z4+=this.buffer[_q5].length;const _t5=_s5-~~_s5;const __4=this.buffer[_q5][_Y4];const _05=this.buffer[_q5][_Z4];return __4+(_05-__4)*_t5;}write(_q5,_53){++this._m5[_q5];this._m5[_q5]%=this.buffer[_q5].length;this.buffer[_q5][this._m5[_q5]]=_53;}}registerProcessor("delay-processor",_j5);AudioWorkletProcessor.prototype._n3=function(){this._H3=true;this.port.onmessage=(_u5)=>{
if(_u5.data==="kill")this._H3=false;};};;class _v5 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1}];}constructor(){super();this._n3();}process(_y3,_z3,parameters){const input=_y3[0];const bypass=parameters.bypass;for(let _v3=0;_v3<input.length;++_v3){const _A3=input[_v3];for(let _C3=0;_C3<_A3.length;++_C3){const _F3=(bypass[_C3]!==undefined)?bypass[_C3]:bypass[0];_z3[_F3][_v3][_C3]=_A3[_C3];}}return this._H3;
}}class _w5 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"gain",automationRate:"a-rate",defaultValue:1,minValue:0}];}constructor(){super();this._n3();}process(_y3,_z3,parameters){const _R3=_y3[0];const _S3=_y3[1];const output=_z3[0];const gain=parameters.gain;for(let _v3=0;_v3<_S3.length;++_v3){const _A3=_S3[_v3];const _B3=output[_v3];for(let _C3=0;_C3<_A3.length;++_C3)_B3[_C3]=_A3[_C3];}for(let _v3=0;_v3<_R3.length;++_v3){const _A3=_R3[_v3];const _B3=output[_v3];for(let _C3=0;_C3<_A3.length;
++_C3){const _l4=(gain[_C3]!==undefined)?gain[_C3]:gain[0];_B3[_C3]+=_A3[_C3]*_l4;}}return this._H3;}}registerProcessor("audio-bus-input",_v5);registerProcessor("audio-bus-output",_w5);class _x5 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"gain",automationRate:"a-rate",defaultValue:1.0,minValue:0.0},{name:"factor",automationRate:"a-rate",defaultValue:20,minValue:1,maxValue:100},{name:"resolution",
automationRate:"a-rate",defaultValue:8,minValue:2,maxValue:16},{name:"mix",automationRate:"a-rate",defaultValue:0.8,minValue:0.0,maxValue:1.0}];}static _y5=[undefined,undefined,2,4,8,16,32,64,128,256,512,1024,2048,4096,8192,16384,32768];constructor(_m3){super();this._n3();const _o3=_m3.outputChannelCount[0];this._z5=new Float32Array(_o3);this._A5=new Uint32Array(_o3);}process(_y3,_z3,parameters){const input=_y3[0];const output=_z3[0];const bypass=parameters.bypass;const gain=parameters.gain;const factor=parameters.factor;
const resolution=parameters.resolution;const mix=parameters.mix;for(let _v3=0;_v3<input.length;++_v3){const _A3=input[_v3];const _B3=output[_v3];for(let _C3=0;_C3<_A3.length;++_C3){_B3[_C3]=_A3[_C3];if(this._A5[_v3]===0)this._z5[_v3]=_A3[_C3];const _k4=(factor[_C3]!==undefined)?factor[_C3]:factor[0];++this._A5[_v3];this._A5[_v3]%=_k4;const _F3=(bypass[_C3]!==undefined)?bypass[_C3]:bypass[0];if(_F3>0.0){continue;}let _E3=this._z5[_v3];const _l4=(gain[_C3]!==undefined)?gain[_C3]:gain[0];_E3*=_l4;_E3=Math.max(Math.min(_E3,
1.0),-1.0);const _B5=(resolution[_C3]!==undefined)?resolution[_C3]:resolution[0];const max=(_E3>0.0)?_x5._y5[_B5]-1:_x5._y5[_B5];_E3=Math.round(_E3*max)/max;const _G3=(mix[_C3]!==undefined)?mix[_C3]:mix[0];_B3[_C3]*=(1.0-_G3);_B3[_C3]+=(_E3*_G3);}}return this._H3;}}registerProcessor("bitcrusher-processor",_x5);class _C5 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"rate",automationRate:"a-rate",defaultValue:5.0,
minValue:0.0,maxValue:20.0},{name:"intensity",automationRate:"a-rate",defaultValue:1.0,minValue:0.0,maxValue:1.0},{name:"offset",automationRate:"a-rate",defaultValue:0.0,minValue:0.0,maxValue:1.0},{name:"shape",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:4}];}constructor(_m3){super();this._n3();const _o3=_m3.outputChannelCount[0];this._D5=new Array(_o3).fill(1.0);this._E5=new Array(_o3).fill(0.0);this._F5=new Array(_o3).fill(_B4._C4._D4);this._G5=new Array(_o3);for(let _v3=0;_v3<_o3;++_v3){
this._G5[_v3]=new _15();this._G5[_v3]._95(sampleRate);this._G5[_v3]._c5(this._D5[_v3]);this._G5[_v3]._g5(this._F5[_v3]);if(_v3%2===1){this._G5[_v3]._d5(this._E5[_v3]);}}}process(_y3,_z3,parameters){const input=_y3[0];const output=_z3[0];const bypass=parameters.bypass;const rate=parameters.rate;const intensity=parameters.intensity;const offset=parameters.offset;const shape=parameters.shape;for(let _v3=0;_v3<input.length;++_v3){const _A3=input[_v3];const _B3=output[_v3];for(let _C3=0;_C3<_A3.length;++_C3){_B3[_C3]=_A3[_C3];
const _B5=(rate[_C3]!==undefined)?rate[_C3]:rate[0];const _H5=(offset[_C3]!==undefined)?offset[_C3]:offset[0];const _I5=(shape[_C3]!==undefined)?shape[_C3]:shape[0];this._J5(_v3,_B5,_H5,_I5);const _K5=this._G5[_v3]._U4();const _F3=(bypass[_C3]!==undefined)?bypass[_C3]:bypass[0];if(_F3>0.0){continue;}const _w3=(intensity[_C3]!==undefined)?intensity[_C3]:intensity[0];const out=_A3[_C3]*_K5*_w3;_B3[_C3]*=(1.0-_w3);_B3[_C3]+=out;}}return this._H3;}_J5(_q5,_L5,_e5,_h5){if(_L5!==this._D5[_q5]){this._G5[_q5]._c5(_L5);
this._D5[_q5]=_L5;}if(_e5!==this._E5[_q5]){if(_q5%2===1){this._G5[_q5]._d5(_e5);}this._E5[_q5]=_e5;}if(_h5!==this._F5[_q5]){this._G5[_q5]._g5(_h5);this._F5[_q5]=_h5;}}}registerProcessor("tremolo-processor",_C5);class _M5{constructor(_r5=1e-3){this.setTime(_r5);}setTime(_r5){this._N5=Math.exp(-1/(_r5*sampleRate));}process(_O5,_P5){return _O5+this._N5*(_P5-_O5);}}class _Q5{constructor(_R5,_S5){this._T5=new _M5(_R5);this._U5=new _M5(_S5);this._V5=_R5;this._W5=_S5;}_X5(_r5){if(_r5===this._V5)return;this._T5.setTime(_r5);
this._V5=_r5;}_Y5(_r5){if(_r5===this._W5)return;this._U5.setTime(_r5);this._W5=_r5;}process(_O5,_P5){if(_O5>_P5)return this._T5.process(_O5,_P5);else return this._U5.process(_O5,_P5);}}class _Z5 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"ingain",automationRate:"a-rate",defaultValue:1,minValue:0},{name:"threshold",automationRate:"a-rate",defaultValue:0.125,minValue:1e-3,maxValue:1},{name:"ratio",
automationRate:"a-rate",defaultValue:4,minValue:1},{name:"attack",automationRate:"a-rate",defaultValue:0.05,minValue:1e-3,maxValue:1e-1},{name:"release",automationRate:"a-rate",defaultValue:0.25,minValue:1e-2,maxValue:1},{name:"outgain",automationRate:"a-rate",defaultValue:1,minValue:0}];}constructor(__5){super();this._n3();const _T5=_Z5.parameterDescriptors.find(_06=>_06.name==="attack");const _U5=_Z5.parameterDescriptors.find(_06=>_06.name==="release");this._16=new _Q5(_T5.defaultValue,_U5.defaultValue);
this._26=0;}process(_36,_46,_56){const input=_36[0];const output=_46[0];const bypass=_56.bypass;const ingain=_56.ingain;const outgain=_56.outgain;const threshold=_56.threshold;const ratio=_56.ratio;const attack=_56.attack;const release=_56.release;if(input.length===0)return this._H3;for(let _C3=0;_C3<input[0].length;++_C3){let _66=input.map(_76=>_76[_C3]);output.forEach((_76,_86)=>{_76[_C3]=_66[_86];});const _96=(ingain[_C3]!==undefined)?ingain[_C3]:ingain[0];_66=_66.map(_a6=>_a6*=_96);const rect=_66.map(_a6=>Math.abs(_a6));
const max=Math.max(...rect);const _b6=_c6(max);const _n5=(threshold[_C3]!==undefined)?threshold[_C3]:threshold[0];const _d6=_c6(_n5);const _e6=Math.max(0,_b6-_d6);const _T5=(attack[_C3]!==undefined)?attack[_C3]:attack[0];const _U5=(release[_C3]!==undefined)?release[_C3]:release[0];this._16._X5(_T5);this._16._Y5(_U5);this._26=this._16.process(_e6,this._26);const _F3=(bypass[_C3]!==undefined)?bypass[_C3]:bypass[0];if(_F3>0)continue;const _B5=(ratio[_C3]!==undefined)?ratio[_C3]:ratio[0];const _f6=(this._26/_B5)-this._26;
const _l4=_g6(_f6);_66=_66.map(_a6=>_a6*=_l4);const _h6=(outgain[_C3]!==undefined)?outgain[_C3]:outgain[0];_66=_66.map(_a6=>_a6*=_h6);output.forEach((_76,_86)=>{_76[_C3]=_66[_86];});}return this._H3;}}function _c6(_i6){return 20*Math.log10(_i6);}function _g6(_i6){return Math.pow(10,_i6/20);}registerProcessor("compressor-processor",_Z5);class _j6 extends AudioWorkletProcessor{static get parameterDescriptors(){const _h4=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,
minValue:0,maxValue:1},{name:"freq",automationRate:"a-rate",defaultValue:Math.min(500.0,_h4),minValue:10.0,maxValue:_h4},{name:"q",automationRate:"a-rate",defaultValue:1.0,minValue:1.0,maxValue:100.0},{name:"gain",automationRate:"a-rate",defaultValue:1e-2,minValue:1e-6}];}constructor(_m3){super();this._n3();const _o3=_m3.outputChannelCount[0];this._X3=0;this._Y3=0;this._Z3=0;this.__3=0;this._04=0;this._14=new Float32Array(_o3);this._24=new Float32Array(_o3);this._34=new Float32Array(_o3);this._44=new Float32Array(_o3);
this._i4=-1;this._64=-1;this._j4=-1;}process(_y3,_z3,parameters){const input=_y3[0];const output=_z3[0];const bypass=parameters.bypass;const freq=parameters.freq;const q=parameters.q;const gain=parameters.gain;const _74=(freq.length===1&&q.length===1&&gain.length===1);if(_74)this._84(freq[0],q[0],gain[0]);for(let _v3=0;_v3<input.length;++_v3){const _A3=input[_v3];const _B3=output[_v3];for(let _C3=0;_C3<_A3.length;++_C3){if(_74===!1){const _k4=(freq[_C3]!==undefined)?freq[_C3]:freq[0];const _94=(q[_C3]!==undefined)?q[_C3]:q[0];
const _l4=(gain[_C3]!==undefined)?gain[_C3]:gain[0];this._84(_k4,_94,_l4);}const _a4=this._Z3*_A3[_C3]+this.__3*this._14[_v3]+this._04*this._24[_v3]-this._X3*this._34[_v3]-this._Y3*this._44[_v3];this._24[_v3]=this._14[_v3];this._14[_v3]=_A3[_C3];this._44[_v3]=this._34[_v3];this._34[_v3]=_a4;const _F3=(bypass[_C3]!==undefined)?bypass[_C3]:bypass[0];_B3[_C3]=(_F3>0)?_A3[_C3]:_a4;}}return this._H3;}_84(_m4,_c4,_n4){if(_m4===this._i4&&_c4===this._64&&_n4===this._j4)return;const _d4=2*Math.PI*_m4/sampleRate;
const _e4=Math.cos(_d4);const _o4=Math.sqrt(_n4);const _u4=_o4+1;const _v4=_o4-1;const _w4=_u4*_e4;const _x4=_v4*_e4;const _y4=_u4-_x4;const _z4=_u4+_x4;const alpha=Math.sin(_d4)/(2*_c4);const _A4=(2*Math.sqrt(_o4)*alpha);const _f4=_z4+_A4;const _X3=-2*(_v4+_w4);const _Y3=_z4-_A4;const _Z3=_o4*(_y4+_A4);const __3=2*_o4*(_v4-_w4);const _04=_o4*(_y4-_A4);this._X3=_X3/_f4;this._Y3=_Y3/_f4;this._Z3=_Z3/_f4;this.__3=__3/_f4;this._04=_04/_f4;this._i4=_m4;this._64=_c4;this._j4=_n4;}}registerProcessor("lo-shelf-processor",
_j6);