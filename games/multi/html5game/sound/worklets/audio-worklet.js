class _L3{constructor(_M3){this._N3=0;this._O3=0;this.feedback=0;this._P3=0;this.buffer=new Float32Array(_M3);this._Q3=0;}process(_R3){const out=this.buffer[this._Q3];this._P3=(this._P3*this._N3)+(out*this._O3);this.buffer[this._Q3]=_R3+(this._P3*this.feedback);++this._Q3;this._Q3%=this.buffer.length;return out;}_S3(_T3){this.feedback=Math.min(Math.max(0,_T3),1);}_U3(_V3){this._N3=Math.min(Math.max(0,_V3),1);this._O3=1-this._N3;}}class _W3{constructor(_M3){this.feedback=0;this.buffer=new Float32Array(_M3);
this._Q3=0;}process(_R3){const out=this.buffer[this._Q3];this.buffer[this._Q3]=_R3+(out*this.feedback);++this._Q3;this._Q3%=this.buffer.length;return(out-_R3);}_S3(_T3){this.feedback=Math.min(Math.max(0,_T3),1);}}class _X3 extends AudioWorkletProcessor{static _Y3=8;static _Z3=4;static __3=0.015;static _04=0.4;static _14=0.28;static _24=0.7;static _34=[1116,1188,1277,1356,1422,1491,1557,1617];static _44=[1139,1211,1300,1379,1445,1514,1580,1640];static _54=[556,441,341,225];static _64=[579,464,364,248];static get parameterDescriptors(){
return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"size",automationRate:"a-rate",defaultValue:0.7,minValue:0.0,maxValue:1.0},{name:"damp",automationRate:"a-rate",defaultValue:0.1,minValue:0.0,maxValue:1.0},{name:"mix",automationRate:"a-rate",defaultValue:0.35,minValue:0.0,maxValue:1.0}];}constructor(_74){super();this._84();const _94=_74.outputChannelCount[0];this._a4=-1;this._b4=-1;this._c4=new Array(_94);this._d4=new Array(_94);const _e4=[_X3._34,_X3._44];const _f4=[_X3._54,
_X3._64];for(let _g4=0;_g4<_94;++_g4){this._c4[_g4]=new Array(_X3._Y3);this._d4[_g4]=new Array(_X3._Z3);for(let _h4=0;_h4<_X3._Y3;++_h4)this._c4[_g4][_h4]=new _L3(_e4[_g4%_e4.length][_h4]);for(let _h4=0;_h4<_X3._Z3;++_h4)this._d4[_g4][_h4]=new _W3(_f4[_g4%_f4.length][_h4]);}this._i4(0.5);this._U3(0.5);for(let _g4=0;_g4<_94;++_g4)for(let _h4=0;_h4<_X3._Z3;++_h4)this._d4[_g4][_h4]._S3(0.5);}process(_j4,_k4,parameters){const input=_j4[0];const output=_k4[0];const bypass=parameters.bypass;const size=parameters.size;
const damp=parameters.damp;const mix=parameters.mix;for(let _g4=0;_g4<input.length;++_g4){const _l4=input[_g4];const _m4=output[_g4];for(let _n4=0;_n4<_l4.length;++_n4){const _n4=(size[_n4]!==undefined)?size[_n4]:size[0];const _o4=(damp[_n4]!==undefined)?damp[_n4]:damp[0];this._i4(_n4);this._U3(_o4);_m4[_n4]=_l4[_n4];let out=0;const _p4=_l4[_n4]*_X3.__3;for(let _h4=0;_h4<_X3._Y3;++_h4)out+=this._c4[_g4][_h4].process(_p4);for(let _h4=0;_h4<_X3._Z3;++_h4)out=this._d4[_g4][_h4].process(out);const _q4=(bypass[_n4]!==undefined)?bypass[_n4]:bypass[0];
if(_q4>0.0){continue;}const _r4=(mix[_n4]!==undefined)?mix[_n4]:mix[0];_m4[_n4]*=(1-_r4);_m4[_n4]+=(out*_r4);}}return this._s4;}_i4(_M3){if(_M3===this._a4)return;const size=(_M3*_X3._14)+_X3._24;for(let _g4=0;_g4<this._c4.length;++_g4)for(let _h4=0;_h4<_X3._Y3;++_h4)this._c4[_g4][_h4]._S3(size);this._a4=_M3;}_U3(_V3){if(_V3===this._b4)return;const damp=_V3*_X3._04;for(let _g4=0;_g4<this._c4.length;++_g4)for(let _h4=0;_h4<_X3._Y3;++_h4)this._c4[_g4][_h4]._U3(damp);this._b4=_V3;}}registerProcessor("reverb1-processor",
_X3);class _t4 extends AudioWorkletProcessor{static get parameterDescriptors(){return [];}constructor(){super();this._84();}process(_u4,_v4,_w4){const input=_u4[0];const _x4=_v4[0];const _y4=_v4[1];for(let _g4=0;_g4<input.length;++_g4){const _l4=input[_g4];const _z4=_x4[_g4];const _A4=_y4[_g4];for(let _n4=0;_n4<_l4.length;++_n4){_z4[_n4]=_l4[_n4];_A4[_n4]=_l4[_n4];}}return this._s4;}}class _B4 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,
minValue:0,maxValue:1}];}constructor(){super();this._84();}process(_u4,_v4,_w4){const _C4=_u4[0];const _D4=_u4[1];const output=_v4[0];const bypass=_w4.bypass;for(let _g4=0;_g4<_D4.length;++_g4){const _E4=_C4[_g4];const _F4=_D4[_g4];const _m4=output[_g4];for(let _n4=0;_n4<_E4.length;++_n4){const _q4=(bypass[_n4]!==undefined)?bypass[_n4]:bypass[0];if(_q4>0){_m4[_n4]=_F4[_n4];}else {_m4[_n4]=_E4[_n4];}}}return this._s4;}}registerProcessor("eq-input",_t4);registerProcessor("eq-output",_B4);class _G4 extends AudioWorkletProcessor{
static get parameterDescriptors(){const _H4=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"cutoff",automationRate:"a-rate",defaultValue:Math.min(500.0,_H4),minValue:10.0,maxValue:_H4},{name:"q",automationRate:"a-rate",defaultValue:1.5,minValue:1.0,maxValue:100.0}];}constructor(_74){super();this._84();const _94=_74.outputChannelCount[0];this._I4=0;this._J4=0;this._K4=0;this._L4=0;this._M4=0;this._N4=new Float32Array(_94);this._O4=new Float32Array(_94);
this._P4=new Float32Array(_94);this._Q4=new Float32Array(_94);this._R4=-1;this._S4=-1;}process(_j4,_k4,parameters){const input=_j4[0];const output=_k4[0];const bypass=parameters.bypass;const cutoff=parameters.cutoff;const q=parameters.q;const _T4=(cutoff.length===1&&q.length===1);if(_T4)this._U4(cutoff[0],q[0]);for(let _g4=0;_g4<input.length;++_g4){const _l4=input[_g4];const _m4=output[_g4];for(let _n4=0;_n4<_l4.length;++_n4){if(_T4===!1){const _g4=(cutoff[_n4]!==undefined)?cutoff[_n4]:cutoff[0];const _V4=(q[_n4]!==undefined)?q[_n4]:q[0];
this._U4(_g4,_V4);}const _W4=this._K4*_l4[_n4]+this._L4*this._N4[_g4]+this._M4*this._O4[_g4]-this._I4*this._P4[_g4]-this._J4*this._Q4[_g4];this._O4[_g4]=this._N4[_g4];this._N4[_g4]=_l4[_n4];this._Q4[_g4]=this._P4[_g4];this._P4[_g4]=_W4;const _q4=(bypass[_n4]!==undefined)?bypass[_n4]:bypass[0];_m4[_n4]=(_q4>0)?_l4[_n4]:_W4;}}return this._s4;}_U4(_X4,_Y4){if(_X4===this._R4&&_Y4===this._S4)return;const _Z4=2*Math.PI*_X4/sampleRate;const alpha=Math.sin(_Z4)/(2*_Y4);const __4=Math.cos(_Z4);const _05=1+alpha;
const _I4=-2*__4;const _J4=1-alpha;const _K4=(1-__4)/2;const _L4=1-__4;const _M4=(1-__4)/2;this._I4=_I4/_05;this._J4=_J4/_05;this._K4=_K4/_05;this._L4=_L4/_05;this._M4=_M4/_05;this._R4=_X4;this._S4=_Y4;}}registerProcessor("lpf2-processor",_G4);class _15 extends AudioWorkletProcessor{static get parameterDescriptors(){const _25=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"freq",automationRate:"a-rate",defaultValue:Math.min(1500.0,
_25),minValue:10.0,maxValue:_25},{name:"q",automationRate:"a-rate",defaultValue:1.0,minValue:1.0,maxValue:100.0},{name:"gain",automationRate:"a-rate",defaultValue:1e-2,minValue:1e-6}];}constructor(_74){super();this._84();const _94=_74.outputChannelCount[0];this._I4=0;this._J4=0;this._K4=0;this._L4=0;this._M4=0;this._N4=new Float32Array(_94);this._O4=new Float32Array(_94);this._P4=new Float32Array(_94);this._Q4=new Float32Array(_94);this._35=-1;this._S4=-1;this._45=-1;}process(_j4,_k4,parameters){const input=_j4[0];
const output=_k4[0];const bypass=parameters.bypass;const freq=parameters.freq;const q=parameters.q;const gain=parameters.gain;const _T4=(freq.length===1&&q.length===1&&gain.length===1);if(_T4)this._U4(freq[0],q[0],gain[0]);for(let _g4=0;_g4<input.length;++_g4){const _l4=input[_g4];const _m4=output[_g4];for(let _n4=0;_n4<_l4.length;++_n4){if(_T4===!1){const _55=(freq[_n4]!==undefined)?freq[_n4]:freq[0];const _V4=(q[_n4]!==undefined)?q[_n4]:q[0];const _65=(gain[_n4]!==undefined)?gain[_n4]:gain[0];this._U4(_55,
_V4,_65);}const _W4=this._K4*_l4[_n4]+this._L4*this._N4[_g4]+this._M4*this._O4[_g4]-this._I4*this._P4[_g4]-this._J4*this._Q4[_g4];this._O4[_g4]=this._N4[_g4];this._N4[_g4]=_l4[_n4];this._Q4[_g4]=this._P4[_g4];this._P4[_g4]=_W4;const _q4=(bypass[_n4]!==undefined)?bypass[_n4]:bypass[0];_m4[_n4]=(_q4>0)?_l4[_n4]:_W4;}}return this._s4;}_U4(_75,_Y4,_85){if(_75===this._35&&_Y4===this._S4&&_85===this._45)return;const _Z4=2*Math.PI*_75/sampleRate;const __4=Math.cos(_Z4);const _95=Math.sqrt(_85);const alpha=Math.sin(_Z4)/(2*_Y4);
const _a5=alpha/_95;const _b5=alpha*_95;const _05=1+_a5;const _I4=-2*__4;const _J4=1-_a5;const _K4=1+_b5;const _L4=_I4;const _M4=1-_b5;this._I4=_I4/_05;this._J4=_J4/_05;this._K4=_K4/_05;this._L4=_L4/_05;this._M4=_M4/_05;this._35=_75;this._S4=_Y4;this._45=_85;}}registerProcessor("peak-eq-processor",_15);class _c5 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"gain",automationRate:"a-rate",defaultValue:0.5,
minValue:0.0}];}constructor(){super();this._84();}process(_j4,_k4,parameters){const input=_j4[0];const output=_k4[0];const bypass=parameters.bypass;const gain=parameters.gain;for(let _g4=0;_g4<input.length;++_g4){const _l4=input[_g4];const _m4=output[_g4];for(let _n4=0;_n4<_l4.length;++_n4){_m4[_n4]=_l4[_n4];const _q4=(bypass[_n4]!==undefined)?bypass[_n4]:bypass[0];if(_q4>0.0){continue;}const _65=(gain[_n4]!==undefined)?gain[_n4]:gain[0];_m4[_n4]*=_65;}}return this._s4;}}registerProcessor("gain-processor",
_c5);class _d5 extends AudioWorkletProcessor{static get parameterDescriptors(){const _H4=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"cutoff",automationRate:"a-rate",defaultValue:Math.min(1500.0,_H4),minValue:10.0,maxValue:_H4},{name:"q",automationRate:"a-rate",defaultValue:1.5,minValue:1.0,maxValue:100.0}];}constructor(_74){super();this._84();const _94=_74.outputChannelCount[0];this._I4=0;this._J4=0;this._K4=0;this._L4=0;this._M4=0;
this._N4=new Float32Array(_94);this._O4=new Float32Array(_94);this._P4=new Float32Array(_94);this._Q4=new Float32Array(_94);this._R4=-1;this._S4=-1;}process(_j4,_k4,parameters){const input=_j4[0];const output=_k4[0];const bypass=parameters.bypass;const cutoff=parameters.cutoff;const q=parameters.q;const _T4=(cutoff.length===1&&q.length===1);if(_T4)this._U4(cutoff[0],q[0]);for(let _g4=0;_g4<input.length;++_g4){const _l4=input[_g4];const _m4=output[_g4];for(let _n4=0;_n4<_l4.length;++_n4){if(_T4===!1){const _g4=(cutoff[_n4]!==undefined)?cutoff[_n4]:cutoff[0];
const _V4=(q[_n4]!==undefined)?q[_n4]:q[0];this._U4(_g4,_V4);}const _W4=this._K4*_l4[_n4]+this._L4*this._N4[_g4]+this._M4*this._O4[_g4]-this._I4*this._P4[_g4]-this._J4*this._Q4[_g4];this._O4[_g4]=this._N4[_g4];this._N4[_g4]=_l4[_n4];this._Q4[_g4]=this._P4[_g4];this._P4[_g4]=_W4;const _q4=(bypass[_n4]!==undefined)?bypass[_n4]:bypass[0];_m4[_n4]=(_q4>0)?_l4[_n4]:_W4;}}return this._s4;}_U4(_X4,_Y4){if(_X4===this._R4&&_Y4===this._S4)return;const _Z4=2*Math.PI*_X4/sampleRate;const alpha=Math.sin(_Z4)/(2*_Y4);
const __4=Math.cos(_Z4);const _05=1+alpha;const _I4=-2*__4;const _J4=1-alpha;const _K4=(1+__4)/2;const _L4=-1-__4;const _M4=(1+__4)/2;this._I4=_I4/_05;this._J4=_J4/_05;this._K4=_K4/_05;this._L4=_L4/_05;this._M4=_M4/_05;this._R4=_X4;this._S4=_Y4;}}registerProcessor("hpf2-processor",_d5);class _e5 extends AudioWorkletProcessor{static get parameterDescriptors(){const _25=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"freq",automationRate:"a-rate",
defaultValue:Math.min(5000.0,_25),minValue:10.0,maxValue:_25},{name:"q",automationRate:"a-rate",defaultValue:1.0,minValue:1.0,maxValue:100.0},{name:"gain",automationRate:"a-rate",defaultValue:1e-2,minValue:1e-6}];}constructor(_74){super();this._84();const _94=_74.outputChannelCount[0];this._I4=0;this._J4=0;this._K4=0;this._L4=0;this._M4=0;this._N4=new Float32Array(_94);this._O4=new Float32Array(_94);this._P4=new Float32Array(_94);this._Q4=new Float32Array(_94);this._35=-1;this._S4=-1;this._45=-1;}process(_j4,
_k4,parameters){const input=_j4[0];const output=_k4[0];const bypass=parameters.bypass;const freq=parameters.freq;const q=parameters.q;const gain=parameters.gain;const _T4=(freq.length===1&&q.length===1&&gain.length===1);if(_T4)this._U4(freq[0],q[0],gain[0]);for(let _g4=0;_g4<input.length;++_g4){const _l4=input[_g4];const _m4=output[_g4];for(let _n4=0;_n4<_l4.length;++_n4){if(_T4===!1){const _55=(freq[_n4]!==undefined)?freq[_n4]:freq[0];const _V4=(q[_n4]!==undefined)?q[_n4]:q[0];const _65=(gain[_n4]!==undefined)?gain[_n4]:gain[0];
this._U4(_55,_V4,_65);}const _W4=this._K4*_l4[_n4]+this._L4*this._N4[_g4]+this._M4*this._O4[_g4]-this._I4*this._P4[_g4]-this._J4*this._Q4[_g4];this._O4[_g4]=this._N4[_g4];this._N4[_g4]=_l4[_n4];this._Q4[_g4]=this._P4[_g4];this._P4[_g4]=_W4;const _q4=(bypass[_n4]!==undefined)?bypass[_n4]:bypass[0];_m4[_n4]=(_q4>0)?_l4[_n4]:_W4;}}return this._s4;}_U4(_75,_Y4,_85){if(_75===this._35&&_Y4===this._S4&&_85===this._45)return;const _Z4=2*Math.PI*_75/sampleRate;const __4=Math.cos(_Z4);const _95=Math.sqrt(_85);const _f5=_95+1;
const _g5=_95-1;const _h5=_f5*__4;const _i5=_g5*__4;const _j5=_f5-_i5;const _k5=_f5+_i5;const alpha=Math.sin(_Z4)/(2*_Y4);const _l5=(2*Math.sqrt(_95)*alpha);const _05=_j5+_l5;const _I4=2*(_g5-_h5);const _J4=_j5-_l5;const _K4=_95*(_k5+_l5);const _L4=-2*_95*(_g5+_h5);const _M4=_95*(_k5-_l5);this._I4=_I4/_05;this._J4=_J4/_05;this._K4=_K4/_05;this._L4=_L4/_05;this._M4=_M4/_05;this._35=_75;this._S4=_Y4;this._45=_85;}}registerProcessor("hi-shelf-processor",_e5);function _m5(){}_m5._n5={_o5:0,_p5:1,_q5:2,_r5:3,_s5:4,
_t5:5};_m5._u5=function(_v5){return 1.0-_v5;};_m5._w5=function(_v5){return _v5;};_m5._x5=function(_v5){return 0.5*(Math.sin((_v5*2.0*Math.PI)-(Math.PI/2.0))+1.0);};_m5._y5=function(_v5){if(_v5<0.5){return 0.0;}return 1.0;};_m5._z5=function(_v5){if(_v5<0.5){return 2.0*_v5;}return 2.0-(2.0*_v5);};_m5._A5=[_m5._u5,_m5._w5,_m5._x5,_m5._y5,_m5._z5];_B5._C5=512;_B5._D5=1.0/_B5._C5;function _B5(_E5){this.data=new Float32Array(_B5._C5);for(let _h4=0;_h4<_B5._C5;++_h4){this.data[_h4]=_E5(_h4*_B5._D5);}}_B5.prototype._F5=function(_v5){
_v5=Math.max(0.0,_v5);_v5=Math.min(_v5,1.0);const _G5=_v5*_B5._C5;const _H5=~~_G5;const _I5=_G5-_H5;let _J5=_H5;let _K5=_J5+1;if(_J5>=_B5._C5){_J5-=_B5._C5;}if(_K5>=_B5._C5){_K5-=_B5._C5;}const _L5=this.data[_J5];const _M5=this.data[_K5];return _L5+(_M5-_L5)*_I5;};;_N5._O5=[];_N5._P5=!1;_N5._Q5=0.0;_N5._25=20.0;function _N5(){this._R5=48000;this.shape=_m5._n5._q5;this.freq=1.0;this._S5=0.0;this._D5=0.0;this._T5=0.0;if(_N5._P5==true){return;}for(let _h4=0;_h4<_m5._n5._t5;++_h4){_N5._O5[_h4]=new _B5(_m5._A5[_h4]);
}_N5._P5=true;}_N5._U5=function(){return(_N5._P5==!0);};_N5.prototype._V5=function(_W5){this._R5=_W5;this._X5();};;_N5.prototype._Y5=function(_75){_75=Math.max(_N5._Q5,_75);_75=Math.min(_75,_N5._25);this.freq=_75;this._X5();};;_N5.prototype._Z5=function(__5){__5=Math.max(0.0,__5);__5=Math.min(__5,1.0);const _06=__5-this._T5;this._T5=__5;this._S5+=_06;while(this._S5>=1.0){this._S5-=1.0;}while(this._S5<0.0){this._S5+=1.0;}};;_N5.prototype._16=function(_26){_26=Math.max(0,_26);_26=Math.min(_26,_m5._n5._t5-1);
this.shape=_26;};;_N5.prototype._F5=function(){const _36=_N5._O5[this.shape]._F5(this._S5);this._S5+=this._D5;while(this._S5>=1.0){this._S5-=1.0;}return _36;};;_N5.prototype._X5=function(){this._D5=this.freq/this._R5;};;class _46 extends AudioWorkletProcessor{static _56=5.0;static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"time",automationRate:"a-rate",defaultValue:0.2,minValue:0.0,maxValue:_46._56},{name:"feedback",automationRate:"a-rate",
defaultValue:0.5,minValue:0.0,maxValue:1.0},{name:"mix",automationRate:"a-rate",defaultValue:0.35,minValue:0.0,maxValue:1.0}];}constructor(_74){super();this._84();const _94=_74.outputChannelCount[0];const _66=(_46._56*sampleRate)+1;this.buffer=new Array(_94);this._76=new Uint32Array(_94);for(let _g4=0;_g4<_94;++_g4)this.buffer[_g4]=new Float32Array(_66);}process(_j4,_k4,parameters){const input=_j4[0];const output=_k4[0];const bypass=parameters.bypass;const time=parameters.time;const feedback=parameters.feedback;
const mix=parameters.mix;for(let _g4=0;_g4<input.length;++_g4){const _l4=input[_g4];const _m4=output[_g4];for(let _n4=0;_n4<_l4.length;++_n4){_m4[_n4]=_l4[_n4];const _86=(time[_n4]!==undefined)?time[_n4]:time[0];const _96=this._F5(_g4,_86);const _55=(feedback[_n4]!==undefined)?feedback[_n4]:feedback[0];const _a6=_l4[_n4]+(_96*_55);this.write(_g4,_a6);const _q4=(bypass[_n4]!==undefined)?bypass[_n4]:bypass[0];if(_q4>0.0){continue;}const _r4=(mix[_n4]!==undefined)?mix[_n4]:mix[0];_m4[_n4]*=(1-_r4);_m4[_n4]+=(_96*_r4);
}}return this._s4;}_F5(_b6,_c6){const _d6=_c6*sampleRate;let _J5=(this._76[_b6]-~~_d6);let _K5=(_J5-1);while(_J5<0)_J5+=this.buffer[_b6].length;while(_K5<0)_K5+=this.buffer[_b6].length;const _e6=_d6-~~_d6;const _L5=this.buffer[_b6][_J5];const _M5=this.buffer[_b6][_K5];return _L5+(_M5-_L5)*_e6;}write(_b6,_R3){++this._76[_b6];this._76[_b6]%=this.buffer[_b6].length;this.buffer[_b6][this._76[_b6]]=_R3;}}registerProcessor("delay-processor",_46);AudioWorkletProcessor.prototype._84=function(){this._s4=true;this.port.onmessage=(_f6)=>{
if(_f6.data==="kill")this._s4=false;};};;class _g6 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1}];}constructor(){super();this._84();}process(_j4,_k4,parameters){const input=_j4[0];const bypass=parameters.bypass;for(let _g4=0;_g4<input.length;++_g4){const _l4=input[_g4];for(let _n4=0;_n4<_l4.length;++_n4){const _q4=(bypass[_n4]!==undefined)?bypass[_n4]:bypass[0];_k4[_q4][_g4][_n4]=_l4[_n4];}}return this._s4;
}}class _h6 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"gain",automationRate:"a-rate",defaultValue:1,minValue:0}];}constructor(){super();this._84();}process(_j4,_k4,parameters){const _C4=_j4[0];const _D4=_j4[1];const output=_k4[0];const gain=parameters.gain;for(let _g4=0;_g4<_D4.length;++_g4){const _l4=_D4[_g4];const _m4=output[_g4];for(let _n4=0;_n4<_l4.length;++_n4)_m4[_n4]=_l4[_n4];}for(let _g4=0;_g4<_C4.length;++_g4){const _l4=_C4[_g4];const _m4=output[_g4];for(let _n4=0;_n4<_l4.length;
++_n4){const _65=(gain[_n4]!==undefined)?gain[_n4]:gain[0];_m4[_n4]+=_l4[_n4]*_65;}}return this._s4;}}registerProcessor("audio-bus-input",_g6);registerProcessor("audio-bus-output",_h6);class _i6 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"gain",automationRate:"a-rate",defaultValue:1.0,minValue:0.0},{name:"factor",automationRate:"a-rate",defaultValue:20,minValue:1,maxValue:100},{name:"resolution",
automationRate:"a-rate",defaultValue:8,minValue:2,maxValue:16},{name:"mix",automationRate:"a-rate",defaultValue:0.8,minValue:0.0,maxValue:1.0}];}static _j6=[undefined,undefined,2,4,8,16,32,64,128,256,512,1024,2048,4096,8192,16384,32768];constructor(_74){super();this._84();const _94=_74.outputChannelCount[0];this._k6=new Float32Array(_94);this._l6=new Uint32Array(_94);}process(_j4,_k4,parameters){const input=_j4[0];const output=_k4[0];const bypass=parameters.bypass;const gain=parameters.gain;const factor=parameters.factor;
const resolution=parameters.resolution;const mix=parameters.mix;for(let _g4=0;_g4<input.length;++_g4){const _l4=input[_g4];const _m4=output[_g4];for(let _n4=0;_n4<_l4.length;++_n4){_m4[_n4]=_l4[_n4];if(this._l6[_g4]===0)this._k6[_g4]=_l4[_n4];const _55=(factor[_n4]!==undefined)?factor[_n4]:factor[0];++this._l6[_g4];this._l6[_g4]%=_55;const _q4=(bypass[_n4]!==undefined)?bypass[_n4]:bypass[0];if(_q4>0.0){continue;}let _p4=this._k6[_g4];const _65=(gain[_n4]!==undefined)?gain[_n4]:gain[0];_p4*=_65;_p4=Math.max(Math.min(_p4,
1.0),-1.0);const _m6=(resolution[_n4]!==undefined)?resolution[_n4]:resolution[0];const max=(_p4>0.0)?_i6._j6[_m6]-1:_i6._j6[_m6];_p4=Math.round(_p4*max)/max;const _r4=(mix[_n4]!==undefined)?mix[_n4]:mix[0];_m4[_n4]*=(1.0-_r4);_m4[_n4]+=(_p4*_r4);}}return this._s4;}}registerProcessor("bitcrusher-processor",_i6);class _n6 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"rate",automationRate:"a-rate",defaultValue:5.0,
minValue:0.0,maxValue:20.0},{name:"intensity",automationRate:"a-rate",defaultValue:1.0,minValue:0.0,maxValue:1.0},{name:"offset",automationRate:"a-rate",defaultValue:0.0,minValue:0.0,maxValue:1.0},{name:"shape",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:4}];}constructor(_74){super();this._84();const _94=_74.outputChannelCount[0];this._o6=new Array(_94).fill(1.0);this._p6=new Array(_94).fill(0.0);this._q6=new Array(_94).fill(_m5._n5._o5);this._r6=new Array(_94);for(let _g4=0;_g4<_94;++_g4){
this._r6[_g4]=new _N5();this._r6[_g4]._V5(sampleRate);this._r6[_g4]._Y5(this._o6[_g4]);this._r6[_g4]._16(this._q6[_g4]);if(_g4%2===1){this._r6[_g4]._Z5(this._p6[_g4]);}}}process(_j4,_k4,parameters){const input=_j4[0];const output=_k4[0];const bypass=parameters.bypass;const rate=parameters.rate;const intensity=parameters.intensity;const offset=parameters.offset;const shape=parameters.shape;for(let _g4=0;_g4<input.length;++_g4){const _l4=input[_g4];const _m4=output[_g4];for(let _n4=0;_n4<_l4.length;++_n4){_m4[_n4]=_l4[_n4];
const _m6=(rate[_n4]!==undefined)?rate[_n4]:rate[0];const _s6=(offset[_n4]!==undefined)?offset[_n4]:offset[0];const _t6=(shape[_n4]!==undefined)?shape[_n4]:shape[0];this._u6(_g4,_m6,_s6,_t6);const _v6=this._r6[_g4]._F5();const _q4=(bypass[_n4]!==undefined)?bypass[_n4]:bypass[0];if(_q4>0.0){continue;}const _h4=(intensity[_n4]!==undefined)?intensity[_n4]:intensity[0];const out=_l4[_n4]*_v6*_h4;_m4[_n4]*=(1.0-_h4);_m4[_n4]+=out;}}return this._s4;}_u6(_b6,_w6,__5,_26){if(_w6!==this._o6[_b6]){this._r6[_b6]._Y5(_w6);
this._o6[_b6]=_w6;}if(__5!==this._p6[_b6]){if(_b6%2===1){this._r6[_b6]._Z5(__5);}this._p6[_b6]=__5;}if(_26!==this._q6[_b6]){this._r6[_b6]._16(_26);this._q6[_b6]=_26;}}}registerProcessor("tremolo-processor",_n6);class _x6{constructor(_c6=1e-3){this.setTime(_c6);}setTime(_c6){this._y6=Math.exp(-1/(_c6*sampleRate));}process(_z6,_A6){return _z6+this._y6*(_A6-_z6);}}class _B6{constructor(_C6,_D6){this._E6=new _x6(_C6);this._F6=new _x6(_D6);this._G6=_C6;this._H6=_D6;}_I6(_c6){if(_c6===this._G6)return;this._E6.setTime(_c6);
this._G6=_c6;}_J6(_c6){if(_c6===this._H6)return;this._F6.setTime(_c6);this._H6=_c6;}process(_z6,_A6){if(_z6>_A6)return this._E6.process(_z6,_A6);else return this._F6.process(_z6,_A6);}}class _K6 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"ingain",automationRate:"a-rate",defaultValue:1,minValue:0},{name:"threshold",automationRate:"a-rate",defaultValue:0.125,minValue:1e-3,maxValue:1},{name:"ratio",
automationRate:"a-rate",defaultValue:4,minValue:1},{name:"attack",automationRate:"a-rate",defaultValue:0.05,minValue:1e-3,maxValue:1e-1},{name:"release",automationRate:"a-rate",defaultValue:0.25,minValue:1e-2,maxValue:1},{name:"outgain",automationRate:"a-rate",defaultValue:1,minValue:0}];}constructor(_L6){super();this._84();const _E6=_K6.parameterDescriptors.find(_M6=>_M6.name==="attack");const _F6=_K6.parameterDescriptors.find(_M6=>_M6.name==="release");this._N6=new _B6(_E6.defaultValue,_F6.defaultValue);
this._O6=0;}process(_P6,_Q6,_R6){const input=_P6[0];const output=_Q6[0];const bypass=_R6.bypass;const ingain=_R6.ingain;const outgain=_R6.outgain;const threshold=_R6.threshold;const ratio=_R6.ratio;const attack=_R6.attack;const release=_R6.release;if(input.length===0)return this._s4;for(let _n4=0;_n4<input[0].length;++_n4){let _S6=input.map(_T6=>_T6[_n4]);output.forEach((_T6,_U6)=>{_T6[_n4]=_S6[_U6];});const _V6=(ingain[_n4]!==undefined)?ingain[_n4]:ingain[0];_S6=_S6.map(_W6=>_W6*=_V6);const rect=_S6.map(_W6=>Math.abs(_W6));
const max=Math.max(...rect);const _X6=_Y6(max);const _86=(threshold[_n4]!==undefined)?threshold[_n4]:threshold[0];const _Z6=_Y6(_86);const __6=Math.max(0,_X6-_Z6);const _E6=(attack[_n4]!==undefined)?attack[_n4]:attack[0];const _F6=(release[_n4]!==undefined)?release[_n4]:release[0];this._N6._I6(_E6);this._N6._J6(_F6);this._O6=this._N6.process(__6,this._O6);const _q4=(bypass[_n4]!==undefined)?bypass[_n4]:bypass[0];if(_q4>0)continue;const _m6=(ratio[_n4]!==undefined)?ratio[_n4]:ratio[0];const _07=(this._O6/_m6)-this._O6;
const _65=_17(_07);_S6=_S6.map(_W6=>_W6*=_65);const _27=(outgain[_n4]!==undefined)?outgain[_n4]:outgain[0];_S6=_S6.map(_W6=>_W6*=_27);output.forEach((_T6,_U6)=>{_T6[_n4]=_S6[_U6];});}return this._s4;}}function _Y6(_37){return 20*Math.log10(_37);}function _17(_37){return Math.pow(10,_37/20);}registerProcessor("compressor-processor",_K6);class _47 extends AudioWorkletProcessor{static get parameterDescriptors(){const _25=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,
minValue:0,maxValue:1},{name:"freq",automationRate:"a-rate",defaultValue:Math.min(500.0,_25),minValue:10.0,maxValue:_25},{name:"q",automationRate:"a-rate",defaultValue:1.0,minValue:1.0,maxValue:100.0},{name:"gain",automationRate:"a-rate",defaultValue:1e-2,minValue:1e-6}];}constructor(_74){super();this._84();const _94=_74.outputChannelCount[0];this._I4=0;this._J4=0;this._K4=0;this._L4=0;this._M4=0;this._N4=new Float32Array(_94);this._O4=new Float32Array(_94);this._P4=new Float32Array(_94);this._Q4=new Float32Array(_94);
this._35=-1;this._S4=-1;this._45=-1;}process(_j4,_k4,parameters){const input=_j4[0];const output=_k4[0];const bypass=parameters.bypass;const freq=parameters.freq;const q=parameters.q;const gain=parameters.gain;const _T4=(freq.length===1&&q.length===1&&gain.length===1);if(_T4)this._U4(freq[0],q[0],gain[0]);for(let _g4=0;_g4<input.length;++_g4){const _l4=input[_g4];const _m4=output[_g4];for(let _n4=0;_n4<_l4.length;++_n4){if(_T4===!1){const _55=(freq[_n4]!==undefined)?freq[_n4]:freq[0];const _V4=(q[_n4]!==undefined)?q[_n4]:q[0];
const _65=(gain[_n4]!==undefined)?gain[_n4]:gain[0];this._U4(_55,_V4,_65);}const _W4=this._K4*_l4[_n4]+this._L4*this._N4[_g4]+this._M4*this._O4[_g4]-this._I4*this._P4[_g4]-this._J4*this._Q4[_g4];this._O4[_g4]=this._N4[_g4];this._N4[_g4]=_l4[_n4];this._Q4[_g4]=this._P4[_g4];this._P4[_g4]=_W4;const _q4=(bypass[_n4]!==undefined)?bypass[_n4]:bypass[0];_m4[_n4]=(_q4>0)?_l4[_n4]:_W4;}}return this._s4;}_U4(_75,_Y4,_85){if(_75===this._35&&_Y4===this._S4&&_85===this._45)return;const _Z4=2*Math.PI*_75/sampleRate;
const __4=Math.cos(_Z4);const _95=Math.sqrt(_85);const _f5=_95+1;const _g5=_95-1;const _h5=_f5*__4;const _i5=_g5*__4;const _j5=_f5-_i5;const _k5=_f5+_i5;const alpha=Math.sin(_Z4)/(2*_Y4);const _l5=(2*Math.sqrt(_95)*alpha);const _05=_k5+_l5;const _I4=-2*(_g5+_h5);const _J4=_k5-_l5;const _K4=_95*(_j5+_l5);const _L4=2*_95*(_g5-_h5);const _M4=_95*(_j5-_l5);this._I4=_I4/_05;this._J4=_J4/_05;this._K4=_K4/_05;this._L4=_L4/_05;this._M4=_M4/_05;this._35=_75;this._S4=_Y4;this._45=_85;}}registerProcessor("lo-shelf-processor",
_47);