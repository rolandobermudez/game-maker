class _43{constructor(_53){this._63=0;this._73=0;this.feedback=0;this._83=0;this.buffer=new Float32Array(_53);this._93=0;}process(_a3){const out=this.buffer[this._93];this._83=(this._83*this._63)+(out*this._73);this.buffer[this._93]=_a3+(this._83*this.feedback);++this._93;this._93%=this.buffer.length;return out;}_b3(_c3){this.feedback=Math.min(Math.max(0,_c3),1);}_d3(_e3){this._63=Math.min(Math.max(0,_e3),1);this._73=1-this._63;}}class _f3{constructor(_53){this.feedback=0;this.buffer=new Float32Array(_53);
this._93=0;}process(_a3){const out=this.buffer[this._93];this.buffer[this._93]=_a3+(out*this.feedback);++this._93;this._93%=this.buffer.length;return(out-_a3);}_b3(_c3){this.feedback=Math.min(Math.max(0,_c3),1);}}class _g3 extends AudioWorkletProcessor{static _h3=8;static _i3=4;static _j3=0.015;static _k3=0.4;static _l3=0.28;static _m3=0.7;static _n3=[1116,1188,1277,1356,1422,1491,1557,1617];static _o3=[1139,1211,1300,1379,1445,1514,1580,1640];static _p3=[556,441,341,225];static _q3=[579,464,364,248];static get parameterDescriptors(){
return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"size",automationRate:"a-rate",defaultValue:0.7,minValue:0.0,maxValue:1.0},{name:"damp",automationRate:"a-rate",defaultValue:0.1,minValue:0.0,maxValue:1.0},{name:"mix",automationRate:"a-rate",defaultValue:0.35,minValue:0.0,maxValue:1.0}];}constructor(_r3){super();this._s3();const _t3=_r3.outputChannelCount[0];this._u3=-1;this._v3=-1;this._w3=new Array(_t3);this._x3=new Array(_t3);const _y3=[_g3._n3,_g3._o3];const _z3=[_g3._p3,
_g3._q3];for(let _A3=0;_A3<_t3;++_A3){this._w3[_A3]=new Array(_g3._h3);this._x3[_A3]=new Array(_g3._i3);for(let _B3=0;_B3<_g3._h3;++_B3)this._w3[_A3][_B3]=new _43(_y3[_A3%_y3.length][_B3]);for(let _B3=0;_B3<_g3._i3;++_B3)this._x3[_A3][_B3]=new _f3(_z3[_A3%_z3.length][_B3]);}this._C3(0.5);this._d3(0.5);for(let _A3=0;_A3<_t3;++_A3)for(let _B3=0;_B3<_g3._i3;++_B3)this._x3[_A3][_B3]._b3(0.5);}process(_D3,_E3,parameters){const input=_D3[0];const output=_E3[0];const bypass=parameters.bypass;const size=parameters.size;
const damp=parameters.damp;const mix=parameters.mix;for(let _A3=0;_A3<input.length;++_A3){const _F3=input[_A3];const _G3=output[_A3];for(let _H3=0;_H3<_F3.length;++_H3){const _H3=(size[_H3]!==undefined)?size[_H3]:size[0];const _I3=(damp[_H3]!==undefined)?damp[_H3]:damp[0];this._C3(_H3);this._d3(_I3);_G3[_H3]=_F3[_H3];let out=0;const _J3=_F3[_H3]*_g3._j3;for(let _B3=0;_B3<_g3._h3;++_B3)out+=this._w3[_A3][_B3].process(_J3);for(let _B3=0;_B3<_g3._i3;++_B3)out=this._x3[_A3][_B3].process(out);const _K3=(bypass[_H3]!==undefined)?bypass[_H3]:bypass[0];
if(_K3>0.0){continue;}const _L3=(mix[_H3]!==undefined)?mix[_H3]:mix[0];_G3[_H3]*=(1-_L3);_G3[_H3]+=(out*_L3);}}return this._M3;}_C3(_53){if(_53===this._u3)return;const size=(_53*_g3._l3)+_g3._m3;for(let _A3=0;_A3<this._w3.length;++_A3)for(let _B3=0;_B3<_g3._h3;++_B3)this._w3[_A3][_B3]._b3(size);this._u3=_53;}_d3(_e3){if(_e3===this._v3)return;const damp=_e3*_g3._k3;for(let _A3=0;_A3<this._w3.length;++_A3)for(let _B3=0;_B3<_g3._h3;++_B3)this._w3[_A3][_B3]._d3(damp);this._v3=_e3;}}registerProcessor("reverb1-processor",
_g3);class _N3 extends AudioWorkletProcessor{static get parameterDescriptors(){return [];}constructor(){super();this._s3();}process(_O3,_P3,_Q3){const input=_O3[0];const _R3=_P3[0];const _S3=_P3[1];for(let _A3=0;_A3<input.length;++_A3){const _F3=input[_A3];const _T3=_R3[_A3];const _U3=_S3[_A3];for(let _H3=0;_H3<_F3.length;++_H3){_T3[_H3]=_F3[_H3];_U3[_H3]=_F3[_H3];}}return this._M3;}}class _V3 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,
minValue:0,maxValue:1}];}constructor(){super();this._s3();}process(_O3,_P3,_Q3){const _W3=_O3[0];const _X3=_O3[1];const output=_P3[0];const bypass=_Q3.bypass;for(let _A3=0;_A3<_X3.length;++_A3){const _Y3=_W3[_A3];const _Z3=_X3[_A3];const _G3=output[_A3];for(let _H3=0;_H3<_Y3.length;++_H3){const _K3=(bypass[_H3]!==undefined)?bypass[_H3]:bypass[0];if(_K3>0){_G3[_H3]=_Z3[_H3];}else {_G3[_H3]=_Y3[_H3];}}}return this._M3;}}registerProcessor("eq-input",_N3);registerProcessor("eq-output",_V3);class __3 extends AudioWorkletProcessor{
static get parameterDescriptors(){const _04=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"cutoff",automationRate:"a-rate",defaultValue:Math.min(500.0,_04),minValue:10.0,maxValue:_04},{name:"q",automationRate:"a-rate",defaultValue:1.5,minValue:1.0,maxValue:100.0}];}constructor(_r3){super();this._s3();const _t3=_r3.outputChannelCount[0];this._14=0;this._24=0;this._34=0;this._44=0;this._54=0;this._64=new Float32Array(_t3);this._74=new Float32Array(_t3);
this._84=new Float32Array(_t3);this._94=new Float32Array(_t3);this._a4=-1;this._b4=-1;}process(_D3,_E3,parameters){const input=_D3[0];const output=_E3[0];const bypass=parameters.bypass;const cutoff=parameters.cutoff;const q=parameters.q;const _c4=(cutoff.length===1&&q.length===1);if(_c4)this._d4(cutoff[0],q[0]);for(let _A3=0;_A3<input.length;++_A3){const _F3=input[_A3];const _G3=output[_A3];for(let _H3=0;_H3<_F3.length;++_H3){if(_c4===!1){const _A3=(cutoff[_H3]!==undefined)?cutoff[_H3]:cutoff[0];const _e4=(q[_H3]!==undefined)?q[_H3]:q[0];
this._d4(_A3,_e4);}const _f4=this._34*_F3[_H3]+this._44*this._64[_A3]+this._54*this._74[_A3]-this._14*this._84[_A3]-this._24*this._94[_A3];this._74[_A3]=this._64[_A3];this._64[_A3]=_F3[_H3];this._94[_A3]=this._84[_A3];this._84[_A3]=_f4;const _K3=(bypass[_H3]!==undefined)?bypass[_H3]:bypass[0];_G3[_H3]=(_K3>0)?_F3[_H3]:_f4;}}return this._M3;}_d4(_g4,_h4){if(_g4===this._a4&&_h4===this._b4)return;const _i4=2*Math.PI*_g4/sampleRate;const alpha=Math.sin(_i4)/(2*_h4);const _j4=Math.cos(_i4);const _k4=1+alpha;
const _14=-2*_j4;const _24=1-alpha;const _34=(1-_j4)/2;const _44=1-_j4;const _54=(1-_j4)/2;this._14=_14/_k4;this._24=_24/_k4;this._34=_34/_k4;this._44=_44/_k4;this._54=_54/_k4;this._a4=_g4;this._b4=_h4;}}registerProcessor("lpf2-processor",__3);class _l4 extends AudioWorkletProcessor{static get parameterDescriptors(){const _m4=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"freq",automationRate:"a-rate",defaultValue:Math.min(1500.0,
_m4),minValue:10.0,maxValue:_m4},{name:"q",automationRate:"a-rate",defaultValue:1.0,minValue:1.0,maxValue:100.0},{name:"gain",automationRate:"a-rate",defaultValue:1e-2,minValue:1e-6}];}constructor(_r3){super();this._s3();const _t3=_r3.outputChannelCount[0];this._14=0;this._24=0;this._34=0;this._44=0;this._54=0;this._64=new Float32Array(_t3);this._74=new Float32Array(_t3);this._84=new Float32Array(_t3);this._94=new Float32Array(_t3);this._n4=-1;this._b4=-1;this._o4=-1;}process(_D3,_E3,parameters){const input=_D3[0];
const output=_E3[0];const bypass=parameters.bypass;const freq=parameters.freq;const q=parameters.q;const gain=parameters.gain;const _c4=(freq.length===1&&q.length===1&&gain.length===1);if(_c4)this._d4(freq[0],q[0],gain[0]);for(let _A3=0;_A3<input.length;++_A3){const _F3=input[_A3];const _G3=output[_A3];for(let _H3=0;_H3<_F3.length;++_H3){if(_c4===!1){const _p4=(freq[_H3]!==undefined)?freq[_H3]:freq[0];const _e4=(q[_H3]!==undefined)?q[_H3]:q[0];const _q4=(gain[_H3]!==undefined)?gain[_H3]:gain[0];this._d4(_p4,
_e4,_q4);}const _f4=this._34*_F3[_H3]+this._44*this._64[_A3]+this._54*this._74[_A3]-this._14*this._84[_A3]-this._24*this._94[_A3];this._74[_A3]=this._64[_A3];this._64[_A3]=_F3[_H3];this._94[_A3]=this._84[_A3];this._84[_A3]=_f4;const _K3=(bypass[_H3]!==undefined)?bypass[_H3]:bypass[0];_G3[_H3]=(_K3>0)?_F3[_H3]:_f4;}}return this._M3;}_d4(_r4,_h4,_s4){if(_r4===this._n4&&_h4===this._b4&&_s4===this._o4)return;const _i4=2*Math.PI*_r4/sampleRate;const _j4=Math.cos(_i4);const _t4=Math.sqrt(_s4);const alpha=Math.sin(_i4)/(2*_h4);
const _u4=alpha/_t4;const _v4=alpha*_t4;const _k4=1+_u4;const _14=-2*_j4;const _24=1-_u4;const _34=1+_v4;const _44=_14;const _54=1-_v4;this._14=_14/_k4;this._24=_24/_k4;this._34=_34/_k4;this._44=_44/_k4;this._54=_54/_k4;this._n4=_r4;this._b4=_h4;this._o4=_s4;}}registerProcessor("peak-eq-processor",_l4);class _w4 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"gain",automationRate:"a-rate",defaultValue:0.5,
minValue:0.0}];}constructor(){super();this._s3();}process(_D3,_E3,parameters){const input=_D3[0];const output=_E3[0];const bypass=parameters.bypass;const gain=parameters.gain;for(let _A3=0;_A3<input.length;++_A3){const _F3=input[_A3];const _G3=output[_A3];for(let _H3=0;_H3<_F3.length;++_H3){_G3[_H3]=_F3[_H3];const _K3=(bypass[_H3]!==undefined)?bypass[_H3]:bypass[0];if(_K3>0.0){continue;}const _q4=(gain[_H3]!==undefined)?gain[_H3]:gain[0];_G3[_H3]*=_q4;}}return this._M3;}}registerProcessor("gain-processor",
_w4);class _x4 extends AudioWorkletProcessor{static get parameterDescriptors(){const _04=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"cutoff",automationRate:"a-rate",defaultValue:Math.min(1500.0,_04),minValue:10.0,maxValue:_04},{name:"q",automationRate:"a-rate",defaultValue:1.5,minValue:1.0,maxValue:100.0}];}constructor(_r3){super();this._s3();const _t3=_r3.outputChannelCount[0];this._14=0;this._24=0;this._34=0;this._44=0;this._54=0;
this._64=new Float32Array(_t3);this._74=new Float32Array(_t3);this._84=new Float32Array(_t3);this._94=new Float32Array(_t3);this._a4=-1;this._b4=-1;}process(_D3,_E3,parameters){const input=_D3[0];const output=_E3[0];const bypass=parameters.bypass;const cutoff=parameters.cutoff;const q=parameters.q;const _c4=(cutoff.length===1&&q.length===1);if(_c4)this._d4(cutoff[0],q[0]);for(let _A3=0;_A3<input.length;++_A3){const _F3=input[_A3];const _G3=output[_A3];for(let _H3=0;_H3<_F3.length;++_H3){if(_c4===!1){const _A3=(cutoff[_H3]!==undefined)?cutoff[_H3]:cutoff[0];
const _e4=(q[_H3]!==undefined)?q[_H3]:q[0];this._d4(_A3,_e4);}const _f4=this._34*_F3[_H3]+this._44*this._64[_A3]+this._54*this._74[_A3]-this._14*this._84[_A3]-this._24*this._94[_A3];this._74[_A3]=this._64[_A3];this._64[_A3]=_F3[_H3];this._94[_A3]=this._84[_A3];this._84[_A3]=_f4;const _K3=(bypass[_H3]!==undefined)?bypass[_H3]:bypass[0];_G3[_H3]=(_K3>0)?_F3[_H3]:_f4;}}return this._M3;}_d4(_g4,_h4){if(_g4===this._a4&&_h4===this._b4)return;const _i4=2*Math.PI*_g4/sampleRate;const alpha=Math.sin(_i4)/(2*_h4);
const _j4=Math.cos(_i4);const _k4=1+alpha;const _14=-2*_j4;const _24=1-alpha;const _34=(1+_j4)/2;const _44=-1-_j4;const _54=(1+_j4)/2;this._14=_14/_k4;this._24=_24/_k4;this._34=_34/_k4;this._44=_44/_k4;this._54=_54/_k4;this._a4=_g4;this._b4=_h4;}}registerProcessor("hpf2-processor",_x4);class _y4 extends AudioWorkletProcessor{static get parameterDescriptors(){const _m4=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"freq",automationRate:"a-rate",
defaultValue:Math.min(5000.0,_m4),minValue:10.0,maxValue:_m4},{name:"q",automationRate:"a-rate",defaultValue:1.0,minValue:1.0,maxValue:100.0},{name:"gain",automationRate:"a-rate",defaultValue:1e-2,minValue:1e-6}];}constructor(_r3){super();this._s3();const _t3=_r3.outputChannelCount[0];this._14=0;this._24=0;this._34=0;this._44=0;this._54=0;this._64=new Float32Array(_t3);this._74=new Float32Array(_t3);this._84=new Float32Array(_t3);this._94=new Float32Array(_t3);this._n4=-1;this._b4=-1;this._o4=-1;}process(_D3,
_E3,parameters){const input=_D3[0];const output=_E3[0];const bypass=parameters.bypass;const freq=parameters.freq;const q=parameters.q;const gain=parameters.gain;const _c4=(freq.length===1&&q.length===1&&gain.length===1);if(_c4)this._d4(freq[0],q[0],gain[0]);for(let _A3=0;_A3<input.length;++_A3){const _F3=input[_A3];const _G3=output[_A3];for(let _H3=0;_H3<_F3.length;++_H3){if(_c4===!1){const _p4=(freq[_H3]!==undefined)?freq[_H3]:freq[0];const _e4=(q[_H3]!==undefined)?q[_H3]:q[0];const _q4=(gain[_H3]!==undefined)?gain[_H3]:gain[0];
this._d4(_p4,_e4,_q4);}const _f4=this._34*_F3[_H3]+this._44*this._64[_A3]+this._54*this._74[_A3]-this._14*this._84[_A3]-this._24*this._94[_A3];this._74[_A3]=this._64[_A3];this._64[_A3]=_F3[_H3];this._94[_A3]=this._84[_A3];this._84[_A3]=_f4;const _K3=(bypass[_H3]!==undefined)?bypass[_H3]:bypass[0];_G3[_H3]=(_K3>0)?_F3[_H3]:_f4;}}return this._M3;}_d4(_r4,_h4,_s4){if(_r4===this._n4&&_h4===this._b4&&_s4===this._o4)return;const _i4=2*Math.PI*_r4/sampleRate;const _j4=Math.cos(_i4);const _t4=Math.sqrt(_s4);const _z4=_t4+1;
const _A4=_t4-1;const _B4=_z4*_j4;const _C4=_A4*_j4;const _D4=_z4-_C4;const _E4=_z4+_C4;const alpha=Math.sin(_i4)/(2*_h4);const _F4=(2*Math.sqrt(_t4)*alpha);const _k4=_D4+_F4;const _14=2*(_A4-_B4);const _24=_D4-_F4;const _34=_t4*(_E4+_F4);const _44=-2*_t4*(_A4+_B4);const _54=_t4*(_E4-_F4);this._14=_14/_k4;this._24=_24/_k4;this._34=_34/_k4;this._44=_44/_k4;this._54=_54/_k4;this._n4=_r4;this._b4=_h4;this._o4=_s4;}}registerProcessor("hi-shelf-processor",_y4);function _G4(){}_G4._H4={_I4:0,_J4:1,_K4:2,_L4:3,_M4:4,
_N4:5};_G4._O4=function(_P4){return 1.0-_P4;};_G4._Q4=function(_P4){return _P4;};_G4._R4=function(_P4){return 0.5*(Math.sin((_P4*2.0*Math.PI)-(Math.PI/2.0))+1.0);};_G4._S4=function(_P4){if(_P4<0.5){return 0.0;}return 1.0;};_G4._T4=function(_P4){if(_P4<0.5){return 2.0*_P4;}return 2.0-(2.0*_P4);};_G4._U4=[_G4._O4,_G4._Q4,_G4._R4,_G4._S4,_G4._T4];_V4._W4=512;_V4._X4=1.0/_V4._W4;function _V4(_Y4){this.data=new Float32Array(_V4._W4);for(let _B3=0;_B3<_V4._W4;++_B3){this.data[_B3]=_Y4(_B3*_V4._X4);}}_V4.prototype._Z4=function(_P4){
_P4=Math.max(0.0,_P4);_P4=Math.min(_P4,1.0);const __4=_P4*_V4._W4;const _05=~~__4;const _15=__4-_05;let _25=_05;let _35=_25+1;if(_25>=_V4._W4){_25-=_V4._W4;}if(_35>=_V4._W4){_35-=_V4._W4;}const _45=this.data[_25];const _55=this.data[_35];return _45+(_55-_45)*_15;};;_65._75=[];_65._85=!1;_65._95=0.0;_65._m4=20.0;function _65(){this._a5=48000;this.shape=_G4._H4._K4;this.freq=1.0;this._b5=0.0;this._X4=0.0;this._c5=0.0;if(_65._85==true){return;}for(let _B3=0;_B3<_G4._H4._N4;++_B3){_65._75[_B3]=new _V4(_G4._U4[_B3]);
}_65._85=true;}_65._d5=function(){return(_65._85==!0);};_65.prototype._e5=function(_f5){this._a5=_f5;this._g5();};;_65.prototype._h5=function(_r4){_r4=Math.max(_65._95,_r4);_r4=Math.min(_r4,_65._m4);this.freq=_r4;this._g5();};;_65.prototype._i5=function(_j5){_j5=Math.max(0.0,_j5);_j5=Math.min(_j5,1.0);const _k5=_j5-this._c5;this._c5=_j5;this._b5+=_k5;while(this._b5>=1.0){this._b5-=1.0;}while(this._b5<0.0){this._b5+=1.0;}};;_65.prototype._l5=function(_m5){_m5=Math.max(0,_m5);_m5=Math.min(_m5,_G4._H4._N4-1);
this.shape=_m5;};;_65.prototype._Z4=function(){const _n5=_65._75[this.shape]._Z4(this._b5);this._b5+=this._X4;while(this._b5>=1.0){this._b5-=1.0;}return _n5;};;_65.prototype._g5=function(){this._X4=this.freq/this._a5;};;class _o5 extends AudioWorkletProcessor{static _p5=5.0;static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"time",automationRate:"a-rate",defaultValue:0.2,minValue:0.0,maxValue:_o5._p5},{name:"feedback",automationRate:"a-rate",
defaultValue:0.5,minValue:0.0,maxValue:1.0},{name:"mix",automationRate:"a-rate",defaultValue:0.35,minValue:0.0,maxValue:1.0}];}constructor(_r3){super();this._s3();const _t3=_r3.outputChannelCount[0];const _q5=(_o5._p5*sampleRate)+1;this.buffer=new Array(_t3);this._r5=new Uint32Array(_t3);for(let _A3=0;_A3<_t3;++_A3)this.buffer[_A3]=new Float32Array(_q5);}process(_D3,_E3,parameters){const input=_D3[0];const output=_E3[0];const bypass=parameters.bypass;const time=parameters.time;const feedback=parameters.feedback;
const mix=parameters.mix;for(let _A3=0;_A3<input.length;++_A3){const _F3=input[_A3];const _G3=output[_A3];for(let _H3=0;_H3<_F3.length;++_H3){_G3[_H3]=_F3[_H3];const _s5=(time[_H3]!==undefined)?time[_H3]:time[0];const _t5=this._Z4(_A3,_s5);const _p4=(feedback[_H3]!==undefined)?feedback[_H3]:feedback[0];const _u5=_F3[_H3]+(_t5*_p4);this.write(_A3,_u5);const _K3=(bypass[_H3]!==undefined)?bypass[_H3]:bypass[0];if(_K3>0.0){continue;}const _L3=(mix[_H3]!==undefined)?mix[_H3]:mix[0];_G3[_H3]*=(1-_L3);_G3[_H3]+=(_t5*_L3);
}}return this._M3;}_Z4(_v5,_w5){const _x5=_w5*sampleRate;let _25=(this._r5[_v5]-~~_x5);let _35=(_25-1);while(_25<0)_25+=this.buffer[_v5].length;while(_35<0)_35+=this.buffer[_v5].length;const _y5=_x5-~~_x5;const _45=this.buffer[_v5][_25];const _55=this.buffer[_v5][_35];return _45+(_55-_45)*_y5;}write(_v5,_a3){++this._r5[_v5];this._r5[_v5]%=this.buffer[_v5].length;this.buffer[_v5][this._r5[_v5]]=_a3;}}registerProcessor("delay-processor",_o5);AudioWorkletProcessor.prototype._s3=function(){this._M3=true;this.port.onmessage=(_z5)=>{
if(_z5.data==="kill")this._M3=false;};};;class _A5 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1}];}constructor(){super();this._s3();}process(_D3,_E3,parameters){const input=_D3[0];const bypass=parameters.bypass;for(let _A3=0;_A3<input.length;++_A3){const _F3=input[_A3];for(let _H3=0;_H3<_F3.length;++_H3){const _K3=(bypass[_H3]!==undefined)?bypass[_H3]:bypass[0];_E3[_K3][_A3][_H3]=_F3[_H3];}}return this._M3;
}}class _B5 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"gain",automationRate:"a-rate",defaultValue:1,minValue:0}];}constructor(){super();this._s3();}process(_D3,_E3,parameters){const _W3=_D3[0];const _X3=_D3[1];const output=_E3[0];const gain=parameters.gain;for(let _A3=0;_A3<_X3.length;++_A3){const _F3=_X3[_A3];const _G3=output[_A3];for(let _H3=0;_H3<_F3.length;++_H3)_G3[_H3]=_F3[_H3];}for(let _A3=0;_A3<_W3.length;++_A3){const _F3=_W3[_A3];const _G3=output[_A3];for(let _H3=0;_H3<_F3.length;
++_H3){const _q4=(gain[_H3]!==undefined)?gain[_H3]:gain[0];_G3[_H3]+=_F3[_H3]*_q4;}}return this._M3;}}registerProcessor("audio-bus-input",_A5);registerProcessor("audio-bus-output",_B5);class _C5 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"gain",automationRate:"a-rate",defaultValue:1.0,minValue:0.0},{name:"factor",automationRate:"a-rate",defaultValue:20,minValue:1,maxValue:100},{name:"resolution",
automationRate:"a-rate",defaultValue:8,minValue:2,maxValue:16},{name:"mix",automationRate:"a-rate",defaultValue:0.8,minValue:0.0,maxValue:1.0}];}static _D5=[undefined,undefined,2,4,8,16,32,64,128,256,512,1024,2048,4096,8192,16384,32768];constructor(_r3){super();this._s3();const _t3=_r3.outputChannelCount[0];this._E5=new Float32Array(_t3);this._F5=new Uint32Array(_t3);}process(_D3,_E3,parameters){const input=_D3[0];const output=_E3[0];const bypass=parameters.bypass;const gain=parameters.gain;const factor=parameters.factor;
const resolution=parameters.resolution;const mix=parameters.mix;for(let _A3=0;_A3<input.length;++_A3){const _F3=input[_A3];const _G3=output[_A3];for(let _H3=0;_H3<_F3.length;++_H3){_G3[_H3]=_F3[_H3];if(this._F5[_A3]===0)this._E5[_A3]=_F3[_H3];const _p4=(factor[_H3]!==undefined)?factor[_H3]:factor[0];++this._F5[_A3];this._F5[_A3]%=_p4;const _K3=(bypass[_H3]!==undefined)?bypass[_H3]:bypass[0];if(_K3>0.0){continue;}let _J3=this._E5[_A3];const _q4=(gain[_H3]!==undefined)?gain[_H3]:gain[0];_J3*=_q4;_J3=Math.max(Math.min(_J3,
1.0),-1.0);const _G5=(resolution[_H3]!==undefined)?resolution[_H3]:resolution[0];const max=(_J3>0.0)?_C5._D5[_G5]-1:_C5._D5[_G5];_J3=Math.round(_J3*max)/max;const _L3=(mix[_H3]!==undefined)?mix[_H3]:mix[0];_G3[_H3]*=(1.0-_L3);_G3[_H3]+=(_J3*_L3);}}return this._M3;}}registerProcessor("bitcrusher-processor",_C5);class _H5 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"rate",automationRate:"a-rate",defaultValue:5.0,
minValue:0.0,maxValue:20.0},{name:"intensity",automationRate:"a-rate",defaultValue:1.0,minValue:0.0,maxValue:1.0},{name:"offset",automationRate:"a-rate",defaultValue:0.0,minValue:0.0,maxValue:1.0},{name:"shape",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:4}];}constructor(_r3){super();this._s3();const _t3=_r3.outputChannelCount[0];this._I5=new Array(_t3).fill(1.0);this._J5=new Array(_t3).fill(0.0);this._K5=new Array(_t3).fill(_G4._H4._I4);this._L5=new Array(_t3);for(let _A3=0;_A3<_t3;++_A3){
this._L5[_A3]=new _65();this._L5[_A3]._e5(sampleRate);this._L5[_A3]._h5(this._I5[_A3]);this._L5[_A3]._l5(this._K5[_A3]);if(_A3%2===1){this._L5[_A3]._i5(this._J5[_A3]);}}}process(_D3,_E3,parameters){const input=_D3[0];const output=_E3[0];const bypass=parameters.bypass;const rate=parameters.rate;const intensity=parameters.intensity;const offset=parameters.offset;const shape=parameters.shape;for(let _A3=0;_A3<input.length;++_A3){const _F3=input[_A3];const _G3=output[_A3];for(let _H3=0;_H3<_F3.length;++_H3){_G3[_H3]=_F3[_H3];
const _G5=(rate[_H3]!==undefined)?rate[_H3]:rate[0];const _M5=(offset[_H3]!==undefined)?offset[_H3]:offset[0];const _N5=(shape[_H3]!==undefined)?shape[_H3]:shape[0];this._O5(_A3,_G5,_M5,_N5);const _P5=this._L5[_A3]._Z4();const _K3=(bypass[_H3]!==undefined)?bypass[_H3]:bypass[0];if(_K3>0.0){continue;}const _B3=(intensity[_H3]!==undefined)?intensity[_H3]:intensity[0];const out=_F3[_H3]*_P5*_B3;_G3[_H3]*=(1.0-_B3);_G3[_H3]+=out;}}return this._M3;}_O5(_v5,_Q5,_j5,_m5){if(_Q5!==this._I5[_v5]){this._L5[_v5]._h5(_Q5);
this._I5[_v5]=_Q5;}if(_j5!==this._J5[_v5]){if(_v5%2===1){this._L5[_v5]._i5(_j5);}this._J5[_v5]=_j5;}if(_m5!==this._K5[_v5]){this._L5[_v5]._l5(_m5);this._K5[_v5]=_m5;}}}registerProcessor("tremolo-processor",_H5);class _R5{constructor(_w5=1e-3){this.setTime(_w5);}setTime(_w5){this._S5=Math.exp(-1/(_w5*sampleRate));}process(_T5,_U5){return _T5+this._S5*(_U5-_T5);}}class _V5{constructor(_W5,_X5){this._Y5=new _R5(_W5);this._Z5=new _R5(_X5);this.__5=_W5;this._06=_X5;}_16(_w5){if(_w5===this.__5)return;this._Y5.setTime(_w5);
this.__5=_w5;}_26(_w5){if(_w5===this._06)return;this._Z5.setTime(_w5);this._06=_w5;}process(_T5,_U5){if(_T5>_U5)return this._Y5.process(_T5,_U5);else return this._Z5.process(_T5,_U5);}}class _36 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"ingain",automationRate:"a-rate",defaultValue:1,minValue:0},{name:"threshold",automationRate:"a-rate",defaultValue:0.125,minValue:1e-3,maxValue:1},{name:"ratio",
automationRate:"a-rate",defaultValue:4,minValue:1},{name:"attack",automationRate:"a-rate",defaultValue:0.05,minValue:1e-3,maxValue:1e-1},{name:"release",automationRate:"a-rate",defaultValue:0.25,minValue:1e-2,maxValue:1},{name:"outgain",automationRate:"a-rate",defaultValue:1,minValue:0}];}constructor(_46){super();this._s3();const _Y5=_36.parameterDescriptors.find(_56=>_56.name==="attack");const _Z5=_36.parameterDescriptors.find(_56=>_56.name==="release");this._66=new _V5(_Y5.defaultValue,_Z5.defaultValue);
this._76=0;}process(_86,_96,_a6){const input=_86[0];const output=_96[0];const bypass=_a6.bypass;const ingain=_a6.ingain;const outgain=_a6.outgain;const threshold=_a6.threshold;const ratio=_a6.ratio;const attack=_a6.attack;const release=_a6.release;if(input.length===0)return this._M3;for(let _H3=0;_H3<input[0].length;++_H3){let _b6=input.map(_c6=>_c6[_H3]);output.forEach((_c6,_d6)=>{_c6[_H3]=_b6[_d6];});const _e6=(ingain[_H3]!==undefined)?ingain[_H3]:ingain[0];_b6=_b6.map(_f6=>_f6*=_e6);const rect=_b6.map(_f6=>Math.abs(_f6));
const max=Math.max(...rect);const _g6=_h6(max);const _s5=(threshold[_H3]!==undefined)?threshold[_H3]:threshold[0];const _i6=_h6(_s5);const _j6=Math.max(0,_g6-_i6);const _Y5=(attack[_H3]!==undefined)?attack[_H3]:attack[0];const _Z5=(release[_H3]!==undefined)?release[_H3]:release[0];this._66._16(_Y5);this._66._26(_Z5);this._76=this._66.process(_j6,this._76);const _K3=(bypass[_H3]!==undefined)?bypass[_H3]:bypass[0];if(_K3>0)continue;const _G5=(ratio[_H3]!==undefined)?ratio[_H3]:ratio[0];const _k6=(this._76/_G5)-this._76;
const _q4=_l6(_k6);_b6=_b6.map(_f6=>_f6*=_q4);const _m6=(outgain[_H3]!==undefined)?outgain[_H3]:outgain[0];_b6=_b6.map(_f6=>_f6*=_m6);output.forEach((_c6,_d6)=>{_c6[_H3]=_b6[_d6];});}return this._M3;}}function _h6(_n6){return 20*Math.log10(_n6);}function _l6(_n6){return Math.pow(10,_n6/20);}registerProcessor("compressor-processor",_36);class _o6 extends AudioWorkletProcessor{static get parameterDescriptors(){const _m4=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,
minValue:0,maxValue:1},{name:"freq",automationRate:"a-rate",defaultValue:Math.min(500.0,_m4),minValue:10.0,maxValue:_m4},{name:"q",automationRate:"a-rate",defaultValue:1.0,minValue:1.0,maxValue:100.0},{name:"gain",automationRate:"a-rate",defaultValue:1e-2,minValue:1e-6}];}constructor(_r3){super();this._s3();const _t3=_r3.outputChannelCount[0];this._14=0;this._24=0;this._34=0;this._44=0;this._54=0;this._64=new Float32Array(_t3);this._74=new Float32Array(_t3);this._84=new Float32Array(_t3);this._94=new Float32Array(_t3);
this._n4=-1;this._b4=-1;this._o4=-1;}process(_D3,_E3,parameters){const input=_D3[0];const output=_E3[0];const bypass=parameters.bypass;const freq=parameters.freq;const q=parameters.q;const gain=parameters.gain;const _c4=(freq.length===1&&q.length===1&&gain.length===1);if(_c4)this._d4(freq[0],q[0],gain[0]);for(let _A3=0;_A3<input.length;++_A3){const _F3=input[_A3];const _G3=output[_A3];for(let _H3=0;_H3<_F3.length;++_H3){if(_c4===!1){const _p4=(freq[_H3]!==undefined)?freq[_H3]:freq[0];const _e4=(q[_H3]!==undefined)?q[_H3]:q[0];
const _q4=(gain[_H3]!==undefined)?gain[_H3]:gain[0];this._d4(_p4,_e4,_q4);}const _f4=this._34*_F3[_H3]+this._44*this._64[_A3]+this._54*this._74[_A3]-this._14*this._84[_A3]-this._24*this._94[_A3];this._74[_A3]=this._64[_A3];this._64[_A3]=_F3[_H3];this._94[_A3]=this._84[_A3];this._84[_A3]=_f4;const _K3=(bypass[_H3]!==undefined)?bypass[_H3]:bypass[0];_G3[_H3]=(_K3>0)?_F3[_H3]:_f4;}}return this._M3;}_d4(_r4,_h4,_s4){if(_r4===this._n4&&_h4===this._b4&&_s4===this._o4)return;const _i4=2*Math.PI*_r4/sampleRate;
const _j4=Math.cos(_i4);const _t4=Math.sqrt(_s4);const _z4=_t4+1;const _A4=_t4-1;const _B4=_z4*_j4;const _C4=_A4*_j4;const _D4=_z4-_C4;const _E4=_z4+_C4;const alpha=Math.sin(_i4)/(2*_h4);const _F4=(2*Math.sqrt(_t4)*alpha);const _k4=_E4+_F4;const _14=-2*(_A4+_B4);const _24=_E4-_F4;const _34=_t4*(_D4+_F4);const _44=2*_t4*(_A4-_B4);const _54=_t4*(_D4-_F4);this._14=_14/_k4;this._24=_24/_k4;this._34=_34/_k4;this._44=_44/_k4;this._54=_54/_k4;this._n4=_r4;this._b4=_h4;this._o4=_s4;}}registerProcessor("lo-shelf-processor",
_o6);