class _b3{constructor(_c3){this._d3=0;this._e3=0;this.feedback=0;this._f3=0;this.buffer=new Float32Array(_c3);this._g3=0;}process(_h3){const out=this.buffer[this._g3];this._f3=(this._f3*this._d3)+(out*this._e3);this.buffer[this._g3]=_h3+(this._f3*this.feedback);++this._g3;this._g3%=this.buffer.length;return out;}_i3(_j3){this.feedback=Math.min(Math.max(0,_j3),1);}_k3(_l3){this._d3=Math.min(Math.max(0,_l3),1);this._e3=1-this._d3;}}class _m3{constructor(_c3){this.feedback=0;this.buffer=new Float32Array(_c3);
this._g3=0;}process(_h3){const out=this.buffer[this._g3];this.buffer[this._g3]=_h3+(out*this.feedback);++this._g3;this._g3%=this.buffer.length;return(out-_h3);}_i3(_j3){this.feedback=Math.min(Math.max(0,_j3),1);}}class _n3 extends AudioWorkletProcessor{static _o3=8;static _p3=4;static _q3=0.015;static _r3=0.4;static _s3=0.28;static _t3=0.7;static _u3=[1116,1188,1277,1356,1422,1491,1557,1617];static _v3=[1139,1211,1300,1379,1445,1514,1580,1640];static _w3=[556,441,341,225];static _x3=[579,464,364,248];static get parameterDescriptors(){
return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"size",automationRate:"a-rate",defaultValue:0.7,minValue:0.0,maxValue:1.0},{name:"damp",automationRate:"a-rate",defaultValue:0.1,minValue:0.0,maxValue:1.0},{name:"mix",automationRate:"a-rate",defaultValue:0.35,minValue:0.0,maxValue:1.0}];}constructor(_y3){super();this._z3();const _A3=_y3.outputChannelCount[0];this._B3=-1;this._C3=-1;this._D3=new Array(_A3);this._E3=new Array(_A3);const _F3=[_n3._u3,_n3._v3];const _G3=[_n3._w3,
_n3._x3];for(let _H3=0;_H3<_A3;++_H3){this._D3[_H3]=new Array(_n3._o3);this._E3[_H3]=new Array(_n3._p3);for(let _I3=0;_I3<_n3._o3;++_I3)this._D3[_H3][_I3]=new _b3(_F3[_H3%_F3.length][_I3]);for(let _I3=0;_I3<_n3._p3;++_I3)this._E3[_H3][_I3]=new _m3(_G3[_H3%_G3.length][_I3]);}this._J3(0.5);this._k3(0.5);for(let _H3=0;_H3<_A3;++_H3)for(let _I3=0;_I3<_n3._p3;++_I3)this._E3[_H3][_I3]._i3(0.5);}process(_K3,_L3,parameters){const input=_K3[0];const output=_L3[0];const bypass=parameters.bypass;const size=parameters.size;
const damp=parameters.damp;const mix=parameters.mix;for(let _H3=0;_H3<input.length;++_H3){const _M3=input[_H3];const _N3=output[_H3];for(let _O3=0;_O3<_M3.length;++_O3){const _O3=(size[_O3]!==undefined)?size[_O3]:size[0];const _P3=(damp[_O3]!==undefined)?damp[_O3]:damp[0];this._J3(_O3);this._k3(_P3);_N3[_O3]=_M3[_O3];let out=0;const _Q3=_M3[_O3]*_n3._q3;for(let _I3=0;_I3<_n3._o3;++_I3)out+=this._D3[_H3][_I3].process(_Q3);for(let _I3=0;_I3<_n3._p3;++_I3)out=this._E3[_H3][_I3].process(out);const _R3=(bypass[_O3]!==undefined)?bypass[_O3]:bypass[0];
if(_R3>0.0){continue;}const _S3=(mix[_O3]!==undefined)?mix[_O3]:mix[0];_N3[_O3]*=(1-_S3);_N3[_O3]+=(out*_S3);}}return this._T3;}_J3(_c3){if(_c3===this._B3)return;const size=(_c3*_n3._s3)+_n3._t3;for(let _H3=0;_H3<this._D3.length;++_H3)for(let _I3=0;_I3<_n3._o3;++_I3)this._D3[_H3][_I3]._i3(size);this._B3=_c3;}_k3(_l3){if(_l3===this._C3)return;const damp=_l3*_n3._r3;for(let _H3=0;_H3<this._D3.length;++_H3)for(let _I3=0;_I3<_n3._o3;++_I3)this._D3[_H3][_I3]._k3(damp);this._C3=_l3;}}registerProcessor("reverb1-processor",
_n3);class _U3 extends AudioWorkletProcessor{static get parameterDescriptors(){return [];}constructor(){super();this._z3();}process(_V3,_W3,_X3){const input=_V3[0];const _Y3=_W3[0];const _Z3=_W3[1];for(let _H3=0;_H3<input.length;++_H3){const _M3=input[_H3];const __3=_Y3[_H3];const _04=_Z3[_H3];for(let _O3=0;_O3<_M3.length;++_O3){__3[_O3]=_M3[_O3];_04[_O3]=_M3[_O3];}}return this._T3;}}class _14 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,
minValue:0,maxValue:1}];}constructor(){super();this._z3();}process(_V3,_W3,_X3){const _24=_V3[0];const _34=_V3[1];const output=_W3[0];const bypass=_X3.bypass;for(let _H3=0;_H3<_34.length;++_H3){const _44=_24[_H3];const _54=_34[_H3];const _N3=output[_H3];for(let _O3=0;_O3<_44.length;++_O3){const _R3=(bypass[_O3]!==undefined)?bypass[_O3]:bypass[0];if(_R3>0){_N3[_O3]=_54[_O3];}else {_N3[_O3]=_44[_O3];}}}return this._T3;}}registerProcessor("eq-input",_U3);registerProcessor("eq-output",_14);class _64 extends AudioWorkletProcessor{
static get parameterDescriptors(){const _74=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"cutoff",automationRate:"a-rate",defaultValue:Math.min(500.0,_74),minValue:10.0,maxValue:_74},{name:"q",automationRate:"a-rate",defaultValue:1.5,minValue:1.0,maxValue:100.0}];}constructor(_y3){super();this._z3();const _A3=_y3.outputChannelCount[0];this._84=0;this._94=0;this._a4=0;this._b4=0;this._c4=0;this._d4=new Float32Array(_A3);this._e4=new Float32Array(_A3);
this._f4=new Float32Array(_A3);this._g4=new Float32Array(_A3);this._h4=-1;this._i4=-1;}process(_K3,_L3,parameters){const input=_K3[0];const output=_L3[0];const bypass=parameters.bypass;const cutoff=parameters.cutoff;const q=parameters.q;const _j4=(cutoff.length===1&&q.length===1);if(_j4)this._k4(cutoff[0],q[0]);for(let _H3=0;_H3<input.length;++_H3){const _M3=input[_H3];const _N3=output[_H3];for(let _O3=0;_O3<_M3.length;++_O3){if(_j4===!1){const _H3=(cutoff[_O3]!==undefined)?cutoff[_O3]:cutoff[0];const _l4=(q[_O3]!==undefined)?q[_O3]:q[0];
this._k4(_H3,_l4);}const _m4=this._a4*_M3[_O3]+this._b4*this._d4[_H3]+this._c4*this._e4[_H3]-this._84*this._f4[_H3]-this._94*this._g4[_H3];this._e4[_H3]=this._d4[_H3];this._d4[_H3]=_M3[_O3];this._g4[_H3]=this._f4[_H3];this._f4[_H3]=_m4;const _R3=(bypass[_O3]!==undefined)?bypass[_O3]:bypass[0];_N3[_O3]=(_R3>0)?_M3[_O3]:_m4;}}return this._T3;}_k4(_n4,_o4){if(_n4===this._h4&&_o4===this._i4)return;const _p4=2*Math.PI*_n4/sampleRate;const alpha=Math.sin(_p4)/(2*_o4);const _q4=Math.cos(_p4);const _r4=1+alpha;
const _84=-2*_q4;const _94=1-alpha;const _a4=(1-_q4)/2;const _b4=1-_q4;const _c4=(1-_q4)/2;this._84=_84/_r4;this._94=_94/_r4;this._a4=_a4/_r4;this._b4=_b4/_r4;this._c4=_c4/_r4;this._h4=_n4;this._i4=_o4;}}registerProcessor("lpf2-processor",_64);class _s4 extends AudioWorkletProcessor{static get parameterDescriptors(){const _t4=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"freq",automationRate:"a-rate",defaultValue:Math.min(1500.0,
_t4),minValue:10.0,maxValue:_t4},{name:"q",automationRate:"a-rate",defaultValue:1.0,minValue:1.0,maxValue:100.0},{name:"gain",automationRate:"a-rate",defaultValue:1e-2,minValue:1e-6}];}constructor(_y3){super();this._z3();const _A3=_y3.outputChannelCount[0];this._84=0;this._94=0;this._a4=0;this._b4=0;this._c4=0;this._d4=new Float32Array(_A3);this._e4=new Float32Array(_A3);this._f4=new Float32Array(_A3);this._g4=new Float32Array(_A3);this._u4=-1;this._i4=-1;this._v4=-1;}process(_K3,_L3,parameters){const input=_K3[0];
const output=_L3[0];const bypass=parameters.bypass;const freq=parameters.freq;const q=parameters.q;const gain=parameters.gain;const _j4=(freq.length===1&&q.length===1&&gain.length===1);if(_j4)this._k4(freq[0],q[0],gain[0]);for(let _H3=0;_H3<input.length;++_H3){const _M3=input[_H3];const _N3=output[_H3];for(let _O3=0;_O3<_M3.length;++_O3){if(_j4===!1){const _w4=(freq[_O3]!==undefined)?freq[_O3]:freq[0];const _l4=(q[_O3]!==undefined)?q[_O3]:q[0];const _x4=(gain[_O3]!==undefined)?gain[_O3]:gain[0];this._k4(_w4,
_l4,_x4);}const _m4=this._a4*_M3[_O3]+this._b4*this._d4[_H3]+this._c4*this._e4[_H3]-this._84*this._f4[_H3]-this._94*this._g4[_H3];this._e4[_H3]=this._d4[_H3];this._d4[_H3]=_M3[_O3];this._g4[_H3]=this._f4[_H3];this._f4[_H3]=_m4;const _R3=(bypass[_O3]!==undefined)?bypass[_O3]:bypass[0];_N3[_O3]=(_R3>0)?_M3[_O3]:_m4;}}return this._T3;}_k4(_y4,_o4,_z4){if(_y4===this._u4&&_o4===this._i4&&_z4===this._v4)return;const _p4=2*Math.PI*_y4/sampleRate;const _q4=Math.cos(_p4);const _A4=Math.sqrt(_z4);const alpha=Math.sin(_p4)/(2*_o4);
const _B4=alpha/_A4;const _C4=alpha*_A4;const _r4=1+_B4;const _84=-2*_q4;const _94=1-_B4;const _a4=1+_C4;const _b4=_84;const _c4=1-_C4;this._84=_84/_r4;this._94=_94/_r4;this._a4=_a4/_r4;this._b4=_b4/_r4;this._c4=_c4/_r4;this._u4=_y4;this._i4=_o4;this._v4=_z4;}}registerProcessor("peak-eq-processor",_s4);class _D4 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"gain",automationRate:"a-rate",defaultValue:0.5,
minValue:0.0}];}constructor(){super();this._z3();}process(_K3,_L3,parameters){const input=_K3[0];const output=_L3[0];const bypass=parameters.bypass;const gain=parameters.gain;for(let _H3=0;_H3<input.length;++_H3){const _M3=input[_H3];const _N3=output[_H3];for(let _O3=0;_O3<_M3.length;++_O3){_N3[_O3]=_M3[_O3];const _R3=(bypass[_O3]!==undefined)?bypass[_O3]:bypass[0];if(_R3>0.0){continue;}const _x4=(gain[_O3]!==undefined)?gain[_O3]:gain[0];_N3[_O3]*=_x4;}}return this._T3;}}registerProcessor("gain-processor",
_D4);class _E4 extends AudioWorkletProcessor{static get parameterDescriptors(){const _74=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"cutoff",automationRate:"a-rate",defaultValue:Math.min(1500.0,_74),minValue:10.0,maxValue:_74},{name:"q",automationRate:"a-rate",defaultValue:1.5,minValue:1.0,maxValue:100.0}];}constructor(_y3){super();this._z3();const _A3=_y3.outputChannelCount[0];this._84=0;this._94=0;this._a4=0;this._b4=0;this._c4=0;
this._d4=new Float32Array(_A3);this._e4=new Float32Array(_A3);this._f4=new Float32Array(_A3);this._g4=new Float32Array(_A3);this._h4=-1;this._i4=-1;}process(_K3,_L3,parameters){const input=_K3[0];const output=_L3[0];const bypass=parameters.bypass;const cutoff=parameters.cutoff;const q=parameters.q;const _j4=(cutoff.length===1&&q.length===1);if(_j4)this._k4(cutoff[0],q[0]);for(let _H3=0;_H3<input.length;++_H3){const _M3=input[_H3];const _N3=output[_H3];for(let _O3=0;_O3<_M3.length;++_O3){if(_j4===!1){const _H3=(cutoff[_O3]!==undefined)?cutoff[_O3]:cutoff[0];
const _l4=(q[_O3]!==undefined)?q[_O3]:q[0];this._k4(_H3,_l4);}const _m4=this._a4*_M3[_O3]+this._b4*this._d4[_H3]+this._c4*this._e4[_H3]-this._84*this._f4[_H3]-this._94*this._g4[_H3];this._e4[_H3]=this._d4[_H3];this._d4[_H3]=_M3[_O3];this._g4[_H3]=this._f4[_H3];this._f4[_H3]=_m4;const _R3=(bypass[_O3]!==undefined)?bypass[_O3]:bypass[0];_N3[_O3]=(_R3>0)?_M3[_O3]:_m4;}}return this._T3;}_k4(_n4,_o4){if(_n4===this._h4&&_o4===this._i4)return;const _p4=2*Math.PI*_n4/sampleRate;const alpha=Math.sin(_p4)/(2*_o4);
const _q4=Math.cos(_p4);const _r4=1+alpha;const _84=-2*_q4;const _94=1-alpha;const _a4=(1+_q4)/2;const _b4=-1-_q4;const _c4=(1+_q4)/2;this._84=_84/_r4;this._94=_94/_r4;this._a4=_a4/_r4;this._b4=_b4/_r4;this._c4=_c4/_r4;this._h4=_n4;this._i4=_o4;}}registerProcessor("hpf2-processor",_E4);class _F4 extends AudioWorkletProcessor{static get parameterDescriptors(){const _t4=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"freq",automationRate:"a-rate",
defaultValue:Math.min(5000.0,_t4),minValue:10.0,maxValue:_t4},{name:"q",automationRate:"a-rate",defaultValue:1.0,minValue:1.0,maxValue:100.0},{name:"gain",automationRate:"a-rate",defaultValue:1e-2,minValue:1e-6}];}constructor(_y3){super();this._z3();const _A3=_y3.outputChannelCount[0];this._84=0;this._94=0;this._a4=0;this._b4=0;this._c4=0;this._d4=new Float32Array(_A3);this._e4=new Float32Array(_A3);this._f4=new Float32Array(_A3);this._g4=new Float32Array(_A3);this._u4=-1;this._i4=-1;this._v4=-1;}process(_K3,
_L3,parameters){const input=_K3[0];const output=_L3[0];const bypass=parameters.bypass;const freq=parameters.freq;const q=parameters.q;const gain=parameters.gain;const _j4=(freq.length===1&&q.length===1&&gain.length===1);if(_j4)this._k4(freq[0],q[0],gain[0]);for(let _H3=0;_H3<input.length;++_H3){const _M3=input[_H3];const _N3=output[_H3];for(let _O3=0;_O3<_M3.length;++_O3){if(_j4===!1){const _w4=(freq[_O3]!==undefined)?freq[_O3]:freq[0];const _l4=(q[_O3]!==undefined)?q[_O3]:q[0];const _x4=(gain[_O3]!==undefined)?gain[_O3]:gain[0];
this._k4(_w4,_l4,_x4);}const _m4=this._a4*_M3[_O3]+this._b4*this._d4[_H3]+this._c4*this._e4[_H3]-this._84*this._f4[_H3]-this._94*this._g4[_H3];this._e4[_H3]=this._d4[_H3];this._d4[_H3]=_M3[_O3];this._g4[_H3]=this._f4[_H3];this._f4[_H3]=_m4;const _R3=(bypass[_O3]!==undefined)?bypass[_O3]:bypass[0];_N3[_O3]=(_R3>0)?_M3[_O3]:_m4;}}return this._T3;}_k4(_y4,_o4,_z4){if(_y4===this._u4&&_o4===this._i4&&_z4===this._v4)return;const _p4=2*Math.PI*_y4/sampleRate;const _q4=Math.cos(_p4);const _A4=Math.sqrt(_z4);const _G4=_A4+1;
const _H4=_A4-1;const _I4=_G4*_q4;const _J4=_H4*_q4;const _K4=_G4-_J4;const _L4=_G4+_J4;const alpha=Math.sin(_p4)/(2*_o4);const _M4=(2*Math.sqrt(_A4)*alpha);const _r4=_K4+_M4;const _84=2*(_H4-_I4);const _94=_K4-_M4;const _a4=_A4*(_L4+_M4);const _b4=-2*_A4*(_H4+_I4);const _c4=_A4*(_L4-_M4);this._84=_84/_r4;this._94=_94/_r4;this._a4=_a4/_r4;this._b4=_b4/_r4;this._c4=_c4/_r4;this._u4=_y4;this._i4=_o4;this._v4=_z4;}}registerProcessor("hi-shelf-processor",_F4);function _N4(){}_N4._O4={_P4:0,_Q4:1,_R4:2,_S4:3,_T4:4,
_U4:5};_N4._V4=function(_W4){return 1.0-_W4;};_N4._X4=function(_W4){return _W4;};_N4._Y4=function(_W4){return 0.5*(Math.sin((_W4*2.0*Math.PI)-(Math.PI/2.0))+1.0);};_N4._Z4=function(_W4){if(_W4<0.5){return 0.0;}return 1.0;};_N4.__4=function(_W4){if(_W4<0.5){return 2.0*_W4;}return 2.0-(2.0*_W4);};_N4._05=[_N4._V4,_N4._X4,_N4._Y4,_N4._Z4,_N4.__4];_15._25=512;_15._35=1.0/_15._25;function _15(_45){this.data=new Float32Array(_15._25);for(let _I3=0;_I3<_15._25;++_I3){this.data[_I3]=_45(_I3*_15._35);}}_15.prototype._55=function(_W4){
_W4=Math.max(0.0,_W4);_W4=Math.min(_W4,1.0);const _65=_W4*_15._25;const _75=~~_65;const _85=_65-_75;let _95=_75;let _a5=_95+1;if(_95>=_15._25){_95-=_15._25;}if(_a5>=_15._25){_a5-=_15._25;}const _b5=this.data[_95];const _c5=this.data[_a5];return _b5+(_c5-_b5)*_85;};;_d5._e5=[];_d5._f5=!1;_d5._g5=0.0;_d5._t4=20.0;function _d5(){this._h5=48000;this.shape=_N4._O4._R4;this.freq=1.0;this._i5=0.0;this._35=0.0;this._j5=0.0;if(_d5._f5==true){return;}for(let _I3=0;_I3<_N4._O4._U4;++_I3){_d5._e5[_I3]=new _15(_N4._05[_I3]);
}_d5._f5=true;}_d5._k5=function(){return(_d5._f5==!0);};_d5.prototype._l5=function(_m5){this._h5=_m5;this._n5();};;_d5.prototype._o5=function(_y4){_y4=Math.max(_d5._g5,_y4);_y4=Math.min(_y4,_d5._t4);this.freq=_y4;this._n5();};;_d5.prototype._p5=function(_q5){_q5=Math.max(0.0,_q5);_q5=Math.min(_q5,1.0);const _r5=_q5-this._j5;this._j5=_q5;this._i5+=_r5;while(this._i5>=1.0){this._i5-=1.0;}while(this._i5<0.0){this._i5+=1.0;}};;_d5.prototype._s5=function(_t5){_t5=Math.max(0,_t5);_t5=Math.min(_t5,_N4._O4._U4-1);
this.shape=_t5;};;_d5.prototype._55=function(){const _u5=_d5._e5[this.shape]._55(this._i5);this._i5+=this._35;while(this._i5>=1.0){this._i5-=1.0;}return _u5;};;_d5.prototype._n5=function(){this._35=this.freq/this._h5;};;class _v5 extends AudioWorkletProcessor{static _w5=5.0;static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"time",automationRate:"a-rate",defaultValue:0.2,minValue:0.0,maxValue:_v5._w5},{name:"feedback",automationRate:"a-rate",
defaultValue:0.5,minValue:0.0,maxValue:1.0},{name:"mix",automationRate:"a-rate",defaultValue:0.35,minValue:0.0,maxValue:1.0}];}constructor(_y3){super();this._z3();const _A3=_y3.outputChannelCount[0];const _x5=(_v5._w5*sampleRate)+1;this.buffer=new Array(_A3);this._y5=new Uint32Array(_A3);for(let _H3=0;_H3<_A3;++_H3)this.buffer[_H3]=new Float32Array(_x5);}process(_K3,_L3,parameters){const input=_K3[0];const output=_L3[0];const bypass=parameters.bypass;const time=parameters.time;const feedback=parameters.feedback;
const mix=parameters.mix;for(let _H3=0;_H3<input.length;++_H3){const _M3=input[_H3];const _N3=output[_H3];for(let _O3=0;_O3<_M3.length;++_O3){_N3[_O3]=_M3[_O3];const _z5=(time[_O3]!==undefined)?time[_O3]:time[0];const _A5=this._55(_H3,_z5);const _w4=(feedback[_O3]!==undefined)?feedback[_O3]:feedback[0];const _B5=_M3[_O3]+(_A5*_w4);this.write(_H3,_B5);const _R3=(bypass[_O3]!==undefined)?bypass[_O3]:bypass[0];if(_R3>0.0){continue;}const _S3=(mix[_O3]!==undefined)?mix[_O3]:mix[0];_N3[_O3]*=(1-_S3);_N3[_O3]+=(_A5*_S3);
}}return this._T3;}_55(_C5,_D5){const _E5=_D5*sampleRate;let _95=(this._y5[_C5]-~~_E5);let _a5=(_95-1);while(_95<0)_95+=this.buffer[_C5].length;while(_a5<0)_a5+=this.buffer[_C5].length;const _F5=_E5-~~_E5;const _b5=this.buffer[_C5][_95];const _c5=this.buffer[_C5][_a5];return _b5+(_c5-_b5)*_F5;}write(_C5,_h3){++this._y5[_C5];this._y5[_C5]%=this.buffer[_C5].length;this.buffer[_C5][this._y5[_C5]]=_h3;}}registerProcessor("delay-processor",_v5);AudioWorkletProcessor.prototype._z3=function(){this._T3=true;this.port.onmessage=(_G5)=>{
if(_G5.data==="kill")this._T3=false;};};;class _H5 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1}];}constructor(){super();this._z3();}process(_K3,_L3,parameters){const input=_K3[0];const bypass=parameters.bypass;for(let _H3=0;_H3<input.length;++_H3){const _M3=input[_H3];for(let _O3=0;_O3<_M3.length;++_O3){const _R3=(bypass[_O3]!==undefined)?bypass[_O3]:bypass[0];_L3[_R3][_H3][_O3]=_M3[_O3];}}return this._T3;
}}class _I5 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"gain",automationRate:"a-rate",defaultValue:1,minValue:0}];}constructor(){super();this._z3();}process(_K3,_L3,parameters){const _24=_K3[0];const _34=_K3[1];const output=_L3[0];const gain=parameters.gain;for(let _H3=0;_H3<_34.length;++_H3){const _M3=_34[_H3];const _N3=output[_H3];for(let _O3=0;_O3<_M3.length;++_O3)_N3[_O3]=_M3[_O3];}for(let _H3=0;_H3<_24.length;++_H3){const _M3=_24[_H3];const _N3=output[_H3];for(let _O3=0;_O3<_M3.length;
++_O3){const _x4=(gain[_O3]!==undefined)?gain[_O3]:gain[0];_N3[_O3]+=_M3[_O3]*_x4;}}return this._T3;}}registerProcessor("audio-bus-input",_H5);registerProcessor("audio-bus-output",_I5);class _J5 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"gain",automationRate:"a-rate",defaultValue:1.0,minValue:0.0},{name:"factor",automationRate:"a-rate",defaultValue:20,minValue:1,maxValue:100},{name:"resolution",
automationRate:"a-rate",defaultValue:8,minValue:2,maxValue:16},{name:"mix",automationRate:"a-rate",defaultValue:0.8,minValue:0.0,maxValue:1.0}];}static _K5=[undefined,undefined,2,4,8,16,32,64,128,256,512,1024,2048,4096,8192,16384,32768];constructor(_y3){super();this._z3();const _A3=_y3.outputChannelCount[0];this._L5=new Float32Array(_A3);this._M5=new Uint32Array(_A3);}process(_K3,_L3,parameters){const input=_K3[0];const output=_L3[0];const bypass=parameters.bypass;const gain=parameters.gain;const factor=parameters.factor;
const resolution=parameters.resolution;const mix=parameters.mix;for(let _H3=0;_H3<input.length;++_H3){const _M3=input[_H3];const _N3=output[_H3];for(let _O3=0;_O3<_M3.length;++_O3){_N3[_O3]=_M3[_O3];if(this._M5[_H3]===0)this._L5[_H3]=_M3[_O3];const _w4=(factor[_O3]!==undefined)?factor[_O3]:factor[0];++this._M5[_H3];this._M5[_H3]%=_w4;const _R3=(bypass[_O3]!==undefined)?bypass[_O3]:bypass[0];if(_R3>0.0){continue;}let _Q3=this._L5[_H3];const _x4=(gain[_O3]!==undefined)?gain[_O3]:gain[0];_Q3*=_x4;_Q3=Math.max(Math.min(_Q3,
1.0),-1.0);const _N5=(resolution[_O3]!==undefined)?resolution[_O3]:resolution[0];const max=(_Q3>0.0)?_J5._K5[_N5]-1:_J5._K5[_N5];_Q3=Math.round(_Q3*max)/max;const _S3=(mix[_O3]!==undefined)?mix[_O3]:mix[0];_N3[_O3]*=(1.0-_S3);_N3[_O3]+=(_Q3*_S3);}}return this._T3;}}registerProcessor("bitcrusher-processor",_J5);class _O5 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"rate",automationRate:"a-rate",defaultValue:5.0,
minValue:0.0,maxValue:20.0},{name:"intensity",automationRate:"a-rate",defaultValue:1.0,minValue:0.0,maxValue:1.0},{name:"offset",automationRate:"a-rate",defaultValue:0.0,minValue:0.0,maxValue:1.0},{name:"shape",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:4}];}constructor(_y3){super();this._z3();const _A3=_y3.outputChannelCount[0];this._P5=new Array(_A3).fill(1.0);this._Q5=new Array(_A3).fill(0.0);this._R5=new Array(_A3).fill(_N4._O4._P4);this._S5=new Array(_A3);for(let _H3=0;_H3<_A3;++_H3){
this._S5[_H3]=new _d5();this._S5[_H3]._l5(sampleRate);this._S5[_H3]._o5(this._P5[_H3]);this._S5[_H3]._s5(this._R5[_H3]);if(_H3%2===1){this._S5[_H3]._p5(this._Q5[_H3]);}}}process(_K3,_L3,parameters){const input=_K3[0];const output=_L3[0];const bypass=parameters.bypass;const rate=parameters.rate;const intensity=parameters.intensity;const offset=parameters.offset;const shape=parameters.shape;for(let _H3=0;_H3<input.length;++_H3){const _M3=input[_H3];const _N3=output[_H3];for(let _O3=0;_O3<_M3.length;++_O3){_N3[_O3]=_M3[_O3];
const _N5=(rate[_O3]!==undefined)?rate[_O3]:rate[0];const _T5=(offset[_O3]!==undefined)?offset[_O3]:offset[0];const _U5=(shape[_O3]!==undefined)?shape[_O3]:shape[0];this._V5(_H3,_N5,_T5,_U5);const _W5=this._S5[_H3]._55();const _R3=(bypass[_O3]!==undefined)?bypass[_O3]:bypass[0];if(_R3>0.0){continue;}const _I3=(intensity[_O3]!==undefined)?intensity[_O3]:intensity[0];const out=_M3[_O3]*_W5*_I3;_N3[_O3]*=(1.0-_I3);_N3[_O3]+=out;}}return this._T3;}_V5(_C5,_X5,_q5,_t5){if(_X5!==this._P5[_C5]){this._S5[_C5]._o5(_X5);
this._P5[_C5]=_X5;}if(_q5!==this._Q5[_C5]){if(_C5%2===1){this._S5[_C5]._p5(_q5);}this._Q5[_C5]=_q5;}if(_t5!==this._R5[_C5]){this._S5[_C5]._s5(_t5);this._R5[_C5]=_t5;}}}registerProcessor("tremolo-processor",_O5);class _Y5{constructor(_D5=1e-3){this.setTime(_D5);}setTime(_D5){this._Z5=Math.exp(-1/(_D5*sampleRate));}process(__5,_06){return __5+this._Z5*(_06-__5);}}class _16{constructor(_26,_36){this._46=new _Y5(_26);this._56=new _Y5(_36);this._66=_26;this._76=_36;}_86(_D5){if(_D5===this._66)return;this._46.setTime(_D5);
this._66=_D5;}_96(_D5){if(_D5===this._76)return;this._56.setTime(_D5);this._76=_D5;}process(__5,_06){if(__5>_06)return this._46.process(__5,_06);else return this._56.process(__5,_06);}}class _a6 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"ingain",automationRate:"a-rate",defaultValue:1,minValue:0},{name:"threshold",automationRate:"a-rate",defaultValue:0.125,minValue:1e-3,maxValue:1},{name:"ratio",
automationRate:"a-rate",defaultValue:4,minValue:1},{name:"attack",automationRate:"a-rate",defaultValue:0.05,minValue:1e-3,maxValue:1e-1},{name:"release",automationRate:"a-rate",defaultValue:0.25,minValue:1e-2,maxValue:1},{name:"outgain",automationRate:"a-rate",defaultValue:1,minValue:0}];}constructor(_b6){super();this._z3();const _46=_a6.parameterDescriptors.find(_c6=>_c6.name==="attack");const _56=_a6.parameterDescriptors.find(_c6=>_c6.name==="release");this._d6=new _16(_46.defaultValue,_56.defaultValue);
this._e6=0;}process(_f6,_g6,_h6){const input=_f6[0];const output=_g6[0];const bypass=_h6.bypass;const ingain=_h6.ingain;const outgain=_h6.outgain;const threshold=_h6.threshold;const ratio=_h6.ratio;const attack=_h6.attack;const release=_h6.release;if(input.length===0)return this._T3;for(let _O3=0;_O3<input[0].length;++_O3){let _i6=input.map(_j6=>_j6[_O3]);output.forEach((_j6,_k6)=>{_j6[_O3]=_i6[_k6];});const _l6=(ingain[_O3]!==undefined)?ingain[_O3]:ingain[0];_i6=_i6.map(_m6=>_m6*=_l6);const rect=_i6.map(_m6=>Math.abs(_m6));
const max=Math.max(...rect);const _n6=_o6(max);const _z5=(threshold[_O3]!==undefined)?threshold[_O3]:threshold[0];const _p6=_o6(_z5);const _q6=Math.max(0,_n6-_p6);const _46=(attack[_O3]!==undefined)?attack[_O3]:attack[0];const _56=(release[_O3]!==undefined)?release[_O3]:release[0];this._d6._86(_46);this._d6._96(_56);this._e6=this._d6.process(_q6,this._e6);const _R3=(bypass[_O3]!==undefined)?bypass[_O3]:bypass[0];if(_R3>0)continue;const _N5=(ratio[_O3]!==undefined)?ratio[_O3]:ratio[0];const _r6=(this._e6/_N5)-this._e6;
const _x4=_s6(_r6);_i6=_i6.map(_m6=>_m6*=_x4);const _t6=(outgain[_O3]!==undefined)?outgain[_O3]:outgain[0];_i6=_i6.map(_m6=>_m6*=_t6);output.forEach((_j6,_k6)=>{_j6[_O3]=_i6[_k6];});}return this._T3;}}function _o6(_u6){return 20*Math.log10(_u6);}function _s6(_u6){return Math.pow(10,_u6/20);}registerProcessor("compressor-processor",_a6);class _v6 extends AudioWorkletProcessor{static get parameterDescriptors(){const _t4=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,
minValue:0,maxValue:1},{name:"freq",automationRate:"a-rate",defaultValue:Math.min(500.0,_t4),minValue:10.0,maxValue:_t4},{name:"q",automationRate:"a-rate",defaultValue:1.0,minValue:1.0,maxValue:100.0},{name:"gain",automationRate:"a-rate",defaultValue:1e-2,minValue:1e-6}];}constructor(_y3){super();this._z3();const _A3=_y3.outputChannelCount[0];this._84=0;this._94=0;this._a4=0;this._b4=0;this._c4=0;this._d4=new Float32Array(_A3);this._e4=new Float32Array(_A3);this._f4=new Float32Array(_A3);this._g4=new Float32Array(_A3);
this._u4=-1;this._i4=-1;this._v4=-1;}process(_K3,_L3,parameters){const input=_K3[0];const output=_L3[0];const bypass=parameters.bypass;const freq=parameters.freq;const q=parameters.q;const gain=parameters.gain;const _j4=(freq.length===1&&q.length===1&&gain.length===1);if(_j4)this._k4(freq[0],q[0],gain[0]);for(let _H3=0;_H3<input.length;++_H3){const _M3=input[_H3];const _N3=output[_H3];for(let _O3=0;_O3<_M3.length;++_O3){if(_j4===!1){const _w4=(freq[_O3]!==undefined)?freq[_O3]:freq[0];const _l4=(q[_O3]!==undefined)?q[_O3]:q[0];
const _x4=(gain[_O3]!==undefined)?gain[_O3]:gain[0];this._k4(_w4,_l4,_x4);}const _m4=this._a4*_M3[_O3]+this._b4*this._d4[_H3]+this._c4*this._e4[_H3]-this._84*this._f4[_H3]-this._94*this._g4[_H3];this._e4[_H3]=this._d4[_H3];this._d4[_H3]=_M3[_O3];this._g4[_H3]=this._f4[_H3];this._f4[_H3]=_m4;const _R3=(bypass[_O3]!==undefined)?bypass[_O3]:bypass[0];_N3[_O3]=(_R3>0)?_M3[_O3]:_m4;}}return this._T3;}_k4(_y4,_o4,_z4){if(_y4===this._u4&&_o4===this._i4&&_z4===this._v4)return;const _p4=2*Math.PI*_y4/sampleRate;
const _q4=Math.cos(_p4);const _A4=Math.sqrt(_z4);const _G4=_A4+1;const _H4=_A4-1;const _I4=_G4*_q4;const _J4=_H4*_q4;const _K4=_G4-_J4;const _L4=_G4+_J4;const alpha=Math.sin(_p4)/(2*_o4);const _M4=(2*Math.sqrt(_A4)*alpha);const _r4=_L4+_M4;const _84=-2*(_H4+_I4);const _94=_L4-_M4;const _a4=_A4*(_K4+_M4);const _b4=2*_A4*(_H4-_I4);const _c4=_A4*(_K4-_M4);this._84=_84/_r4;this._94=_94/_r4;this._a4=_a4/_r4;this._b4=_b4/_r4;this._c4=_c4/_r4;this._u4=_y4;this._i4=_o4;this._v4=_z4;}}registerProcessor("lo-shelf-processor",
_v6);