class _W2{constructor(_X2){this._Y2=0;this._Z2=0;this.feedback=0;this.__2=0;this.buffer=new Float32Array(_X2);this._03=0;}process(_13){const out=this.buffer[this._03];this.__2=(this.__2*this._Y2)+(out*this._Z2);this.buffer[this._03]=_13+(this.__2*this.feedback);++this._03;this._03%=this.buffer.length;return out;}_23(_33){this.feedback=Math.min(Math.max(0,_33),1);}_43(_53){this._Y2=Math.min(Math.max(0,_53),1);this._Z2=1-this._Y2;}}class _63{constructor(_X2){this.feedback=0;this.buffer=new Float32Array(_X2);
this._03=0;}process(_13){const out=this.buffer[this._03];this.buffer[this._03]=_13+(out*this.feedback);++this._03;this._03%=this.buffer.length;return(out-_13);}_23(_33){this.feedback=Math.min(Math.max(0,_33),1);}}class _73 extends AudioWorkletProcessor{static _83=8;static _93=4;static _a3=0.015;static _b3=0.4;static _c3=0.28;static _d3=0.7;static _e3=[1116,1188,1277,1356,1422,1491,1557,1617];static _f3=[1139,1211,1300,1379,1445,1514,1580,1640];static _g3=[556,441,341,225];static _h3=[579,464,364,248];static get parameterDescriptors(){
return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"size",automationRate:"a-rate",defaultValue:0.7,minValue:0.0,maxValue:1.0},{name:"damp",automationRate:"a-rate",defaultValue:0.1,minValue:0.0,maxValue:1.0},{name:"mix",automationRate:"a-rate",defaultValue:0.35,minValue:0.0,maxValue:1.0}];}constructor(_i3){super();this._j3();const _k3=_i3.outputChannelCount[0];this._l3=-1;this._m3=-1;this._n3=new Array(_k3);this._o3=new Array(_k3);const _p3=[_73._e3,_73._f3];const _q3=[_73._g3,
_73._h3];for(let _r3=0;_r3<_k3;++_r3){this._n3[_r3]=new Array(_73._83);this._o3[_r3]=new Array(_73._93);for(let _s3=0;_s3<_73._83;++_s3)this._n3[_r3][_s3]=new _W2(_p3[_r3%_p3.length][_s3]);for(let _s3=0;_s3<_73._93;++_s3)this._o3[_r3][_s3]=new _63(_q3[_r3%_q3.length][_s3]);}this._t3(0.5);this._43(0.5);for(let _r3=0;_r3<_k3;++_r3)for(let _s3=0;_s3<_73._93;++_s3)this._o3[_r3][_s3]._23(0.5);}process(_u3,_v3,parameters){const input=_u3[0];const output=_v3[0];const bypass=parameters.bypass;const size=parameters.size;
const damp=parameters.damp;const mix=parameters.mix;for(let _r3=0;_r3<input.length;++_r3){const _w3=input[_r3];const _x3=output[_r3];for(let _y3=0;_y3<_w3.length;++_y3){const _y3=(size[_y3]!==undefined)?size[_y3]:size[0];const _z3=(damp[_y3]!==undefined)?damp[_y3]:damp[0];this._t3(_y3);this._43(_z3);_x3[_y3]=_w3[_y3];let out=0;const _A3=_w3[_y3]*_73._a3;for(let _s3=0;_s3<_73._83;++_s3)out+=this._n3[_r3][_s3].process(_A3);for(let _s3=0;_s3<_73._93;++_s3)out=this._o3[_r3][_s3].process(out);const _B3=(bypass[_y3]!==undefined)?bypass[_y3]:bypass[0];
if(_B3>0.0){continue;}const _C3=(mix[_y3]!==undefined)?mix[_y3]:mix[0];_x3[_y3]*=(1-_C3);_x3[_y3]+=(out*_C3);}}return this._D3;}_t3(_X2){if(_X2===this._l3)return;const size=(_X2*_73._c3)+_73._d3;for(let _r3=0;_r3<this._n3.length;++_r3)for(let _s3=0;_s3<_73._83;++_s3)this._n3[_r3][_s3]._23(size);this._l3=_X2;}_43(_53){if(_53===this._m3)return;const damp=_53*_73._b3;for(let _r3=0;_r3<this._n3.length;++_r3)for(let _s3=0;_s3<_73._83;++_s3)this._n3[_r3][_s3]._43(damp);this._m3=_53;}}registerProcessor("reverb1-processor",
_73);class _E3 extends AudioWorkletProcessor{static get parameterDescriptors(){return [];}constructor(){super();this._j3();}process(_F3,_G3,_H3){const input=_F3[0];const _I3=_G3[0];const _J3=_G3[1];for(let _r3=0;_r3<input.length;++_r3){const _w3=input[_r3];const _K3=_I3[_r3];const _L3=_J3[_r3];for(let _y3=0;_y3<_w3.length;++_y3){_K3[_y3]=_w3[_y3];_L3[_y3]=_w3[_y3];}}return this._D3;}}class _M3 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,
minValue:0,maxValue:1}];}constructor(){super();this._j3();}process(_F3,_G3,_H3){const _N3=_F3[0];const _O3=_F3[1];const output=_G3[0];const bypass=_H3.bypass;for(let _r3=0;_r3<_O3.length;++_r3){const _P3=_N3[_r3];const _Q3=_O3[_r3];const _x3=output[_r3];for(let _y3=0;_y3<_P3.length;++_y3){const _B3=(bypass[_y3]!==undefined)?bypass[_y3]:bypass[0];if(_B3>0){_x3[_y3]=_Q3[_y3];}else {_x3[_y3]=_P3[_y3];}}}return this._D3;}}registerProcessor("eq-input",_E3);registerProcessor("eq-output",_M3);class _R3 extends AudioWorkletProcessor{
static get parameterDescriptors(){const _S3=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"cutoff",automationRate:"a-rate",defaultValue:Math.min(500.0,_S3),minValue:10.0,maxValue:_S3},{name:"q",automationRate:"a-rate",defaultValue:1.5,minValue:1.0,maxValue:100.0}];}constructor(_i3){super();this._j3();const _k3=_i3.outputChannelCount[0];this._T3=0;this._U3=0;this._V3=0;this._W3=0;this._X3=0;this._Y3=new Float32Array(_k3);this._Z3=new Float32Array(_k3);
this.__3=new Float32Array(_k3);this._04=new Float32Array(_k3);this._14=-1;this._24=-1;}process(_u3,_v3,parameters){const input=_u3[0];const output=_v3[0];const bypass=parameters.bypass;const cutoff=parameters.cutoff;const q=parameters.q;const _34=(cutoff.length===1&&q.length===1);if(_34)this._44(cutoff[0],q[0]);for(let _r3=0;_r3<input.length;++_r3){const _w3=input[_r3];const _x3=output[_r3];for(let _y3=0;_y3<_w3.length;++_y3){if(_34===!1){const _r3=(cutoff[_y3]!==undefined)?cutoff[_y3]:cutoff[0];const _54=(q[_y3]!==undefined)?q[_y3]:q[0];
this._44(_r3,_54);}const _64=this._V3*_w3[_y3]+this._W3*this._Y3[_r3]+this._X3*this._Z3[_r3]-this._T3*this.__3[_r3]-this._U3*this._04[_r3];this._Z3[_r3]=this._Y3[_r3];this._Y3[_r3]=_w3[_y3];this._04[_r3]=this.__3[_r3];this.__3[_r3]=_64;const _B3=(bypass[_y3]!==undefined)?bypass[_y3]:bypass[0];_x3[_y3]=(_B3>0)?_w3[_y3]:_64;}}return this._D3;}_44(_74,_84){if(_74===this._14&&_84===this._24)return;const _94=2*Math.PI*_74/sampleRate;const alpha=Math.sin(_94)/(2*_84);const _a4=Math.cos(_94);const _b4=1+alpha;
const _T3=-2*_a4;const _U3=1-alpha;const _V3=(1-_a4)/2;const _W3=1-_a4;const _X3=(1-_a4)/2;this._T3=_T3/_b4;this._U3=_U3/_b4;this._V3=_V3/_b4;this._W3=_W3/_b4;this._X3=_X3/_b4;this._14=_74;this._24=_84;}}registerProcessor("lpf2-processor",_R3);class _c4 extends AudioWorkletProcessor{static get parameterDescriptors(){const _d4=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"freq",automationRate:"a-rate",defaultValue:Math.min(1500.0,
_d4),minValue:10.0,maxValue:_d4},{name:"q",automationRate:"a-rate",defaultValue:1.0,minValue:1.0,maxValue:100.0},{name:"gain",automationRate:"a-rate",defaultValue:1e-2,minValue:1e-6}];}constructor(_i3){super();this._j3();const _k3=_i3.outputChannelCount[0];this._T3=0;this._U3=0;this._V3=0;this._W3=0;this._X3=0;this._Y3=new Float32Array(_k3);this._Z3=new Float32Array(_k3);this.__3=new Float32Array(_k3);this._04=new Float32Array(_k3);this._e4=-1;this._24=-1;this._f4=-1;}process(_u3,_v3,parameters){const input=_u3[0];
const output=_v3[0];const bypass=parameters.bypass;const freq=parameters.freq;const q=parameters.q;const gain=parameters.gain;const _34=(freq.length===1&&q.length===1&&gain.length===1);if(_34)this._44(freq[0],q[0],gain[0]);for(let _r3=0;_r3<input.length;++_r3){const _w3=input[_r3];const _x3=output[_r3];for(let _y3=0;_y3<_w3.length;++_y3){if(_34===!1){const _g4=(freq[_y3]!==undefined)?freq[_y3]:freq[0];const _54=(q[_y3]!==undefined)?q[_y3]:q[0];const _h4=(gain[_y3]!==undefined)?gain[_y3]:gain[0];this._44(_g4,
_54,_h4);}const _64=this._V3*_w3[_y3]+this._W3*this._Y3[_r3]+this._X3*this._Z3[_r3]-this._T3*this.__3[_r3]-this._U3*this._04[_r3];this._Z3[_r3]=this._Y3[_r3];this._Y3[_r3]=_w3[_y3];this._04[_r3]=this.__3[_r3];this.__3[_r3]=_64;const _B3=(bypass[_y3]!==undefined)?bypass[_y3]:bypass[0];_x3[_y3]=(_B3>0)?_w3[_y3]:_64;}}return this._D3;}_44(_i4,_84,_j4){if(_i4===this._e4&&_84===this._24&&_j4===this._f4)return;const _94=2*Math.PI*_i4/sampleRate;const _a4=Math.cos(_94);const _k4=Math.sqrt(_j4);const alpha=Math.sin(_94)/(2*_84);
const _l4=alpha/_k4;const _m4=alpha*_k4;const _b4=1+_l4;const _T3=-2*_a4;const _U3=1-_l4;const _V3=1+_m4;const _W3=_T3;const _X3=1-_m4;this._T3=_T3/_b4;this._U3=_U3/_b4;this._V3=_V3/_b4;this._W3=_W3/_b4;this._X3=_X3/_b4;this._e4=_i4;this._24=_84;this._f4=_j4;}}registerProcessor("peak-eq-processor",_c4);class _n4 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"gain",automationRate:"a-rate",defaultValue:0.5,
minValue:0.0}];}constructor(){super();this._j3();}process(_u3,_v3,parameters){const input=_u3[0];const output=_v3[0];const bypass=parameters.bypass;const gain=parameters.gain;for(let _r3=0;_r3<input.length;++_r3){const _w3=input[_r3];const _x3=output[_r3];for(let _y3=0;_y3<_w3.length;++_y3){_x3[_y3]=_w3[_y3];const _B3=(bypass[_y3]!==undefined)?bypass[_y3]:bypass[0];if(_B3>0.0){continue;}const _h4=(gain[_y3]!==undefined)?gain[_y3]:gain[0];_x3[_y3]*=_h4;}}return this._D3;}}registerProcessor("gain-processor",
_n4);class _o4 extends AudioWorkletProcessor{static get parameterDescriptors(){const _S3=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"cutoff",automationRate:"a-rate",defaultValue:Math.min(1500.0,_S3),minValue:10.0,maxValue:_S3},{name:"q",automationRate:"a-rate",defaultValue:1.5,minValue:1.0,maxValue:100.0}];}constructor(_i3){super();this._j3();const _k3=_i3.outputChannelCount[0];this._T3=0;this._U3=0;this._V3=0;this._W3=0;this._X3=0;
this._Y3=new Float32Array(_k3);this._Z3=new Float32Array(_k3);this.__3=new Float32Array(_k3);this._04=new Float32Array(_k3);this._14=-1;this._24=-1;}process(_u3,_v3,parameters){const input=_u3[0];const output=_v3[0];const bypass=parameters.bypass;const cutoff=parameters.cutoff;const q=parameters.q;const _34=(cutoff.length===1&&q.length===1);if(_34)this._44(cutoff[0],q[0]);for(let _r3=0;_r3<input.length;++_r3){const _w3=input[_r3];const _x3=output[_r3];for(let _y3=0;_y3<_w3.length;++_y3){if(_34===!1){const _r3=(cutoff[_y3]!==undefined)?cutoff[_y3]:cutoff[0];
const _54=(q[_y3]!==undefined)?q[_y3]:q[0];this._44(_r3,_54);}const _64=this._V3*_w3[_y3]+this._W3*this._Y3[_r3]+this._X3*this._Z3[_r3]-this._T3*this.__3[_r3]-this._U3*this._04[_r3];this._Z3[_r3]=this._Y3[_r3];this._Y3[_r3]=_w3[_y3];this._04[_r3]=this.__3[_r3];this.__3[_r3]=_64;const _B3=(bypass[_y3]!==undefined)?bypass[_y3]:bypass[0];_x3[_y3]=(_B3>0)?_w3[_y3]:_64;}}return this._D3;}_44(_74,_84){if(_74===this._14&&_84===this._24)return;const _94=2*Math.PI*_74/sampleRate;const alpha=Math.sin(_94)/(2*_84);
const _a4=Math.cos(_94);const _b4=1+alpha;const _T3=-2*_a4;const _U3=1-alpha;const _V3=(1+_a4)/2;const _W3=-1-_a4;const _X3=(1+_a4)/2;this._T3=_T3/_b4;this._U3=_U3/_b4;this._V3=_V3/_b4;this._W3=_W3/_b4;this._X3=_X3/_b4;this._14=_74;this._24=_84;}}registerProcessor("hpf2-processor",_o4);class _p4 extends AudioWorkletProcessor{static get parameterDescriptors(){const _d4=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"freq",automationRate:"a-rate",
defaultValue:Math.min(5000.0,_d4),minValue:10.0,maxValue:_d4},{name:"q",automationRate:"a-rate",defaultValue:1.0,minValue:1.0,maxValue:100.0},{name:"gain",automationRate:"a-rate",defaultValue:1e-2,minValue:1e-6}];}constructor(_i3){super();this._j3();const _k3=_i3.outputChannelCount[0];this._T3=0;this._U3=0;this._V3=0;this._W3=0;this._X3=0;this._Y3=new Float32Array(_k3);this._Z3=new Float32Array(_k3);this.__3=new Float32Array(_k3);this._04=new Float32Array(_k3);this._e4=-1;this._24=-1;this._f4=-1;}process(_u3,
_v3,parameters){const input=_u3[0];const output=_v3[0];const bypass=parameters.bypass;const freq=parameters.freq;const q=parameters.q;const gain=parameters.gain;const _34=(freq.length===1&&q.length===1&&gain.length===1);if(_34)this._44(freq[0],q[0],gain[0]);for(let _r3=0;_r3<input.length;++_r3){const _w3=input[_r3];const _x3=output[_r3];for(let _y3=0;_y3<_w3.length;++_y3){if(_34===!1){const _g4=(freq[_y3]!==undefined)?freq[_y3]:freq[0];const _54=(q[_y3]!==undefined)?q[_y3]:q[0];const _h4=(gain[_y3]!==undefined)?gain[_y3]:gain[0];
this._44(_g4,_54,_h4);}const _64=this._V3*_w3[_y3]+this._W3*this._Y3[_r3]+this._X3*this._Z3[_r3]-this._T3*this.__3[_r3]-this._U3*this._04[_r3];this._Z3[_r3]=this._Y3[_r3];this._Y3[_r3]=_w3[_y3];this._04[_r3]=this.__3[_r3];this.__3[_r3]=_64;const _B3=(bypass[_y3]!==undefined)?bypass[_y3]:bypass[0];_x3[_y3]=(_B3>0)?_w3[_y3]:_64;}}return this._D3;}_44(_i4,_84,_j4){if(_i4===this._e4&&_84===this._24&&_j4===this._f4)return;const _94=2*Math.PI*_i4/sampleRate;const _a4=Math.cos(_94);const _k4=Math.sqrt(_j4);const _q4=_k4+1;
const _r4=_k4-1;const _s4=_q4*_a4;const _t4=_r4*_a4;const _u4=_q4-_t4;const _v4=_q4+_t4;const alpha=Math.sin(_94)/(2*_84);const _w4=(2*Math.sqrt(_k4)*alpha);const _b4=_u4+_w4;const _T3=2*(_r4-_s4);const _U3=_u4-_w4;const _V3=_k4*(_v4+_w4);const _W3=-2*_k4*(_r4+_s4);const _X3=_k4*(_v4-_w4);this._T3=_T3/_b4;this._U3=_U3/_b4;this._V3=_V3/_b4;this._W3=_W3/_b4;this._X3=_X3/_b4;this._e4=_i4;this._24=_84;this._f4=_j4;}}registerProcessor("hi-shelf-processor",_p4);function _x4(){}_x4._y4={_z4:0,_A4:1,_B4:2,_C4:3,_D4:4,
_E4:5};_x4._F4=function(_G4){return 1.0-_G4;};_x4._H4=function(_G4){return _G4;};_x4._I4=function(_G4){return 0.5*(Math.sin((_G4*2.0*Math.PI)-(Math.PI/2.0))+1.0);};_x4._J4=function(_G4){if(_G4<0.5){return 0.0;}return 1.0;};_x4._K4=function(_G4){if(_G4<0.5){return 2.0*_G4;}return 2.0-(2.0*_G4);};_x4._L4=[_x4._F4,_x4._H4,_x4._I4,_x4._J4,_x4._K4];_M4._N4=512;_M4._O4=1.0/_M4._N4;function _M4(_P4){this.data=new Float32Array(_M4._N4);for(let _s3=0;_s3<_M4._N4;++_s3){this.data[_s3]=_P4(_s3*_M4._O4);}}_M4.prototype._Q4=function(_G4){
_G4=Math.max(0.0,_G4);_G4=Math.min(_G4,1.0);const _R4=_G4*_M4._N4;const _S4=~~_R4;const _T4=_R4-_S4;let _U4=_S4;let _V4=_U4+1;if(_U4>=_M4._N4){_U4-=_M4._N4;}if(_V4>=_M4._N4){_V4-=_M4._N4;}const _W4=this.data[_U4];const _X4=this.data[_V4];return _W4+(_X4-_W4)*_T4;};;_Y4._Z4=[];_Y4.__4=!1;_Y4._05=0.0;_Y4._d4=20.0;function _Y4(){this._15=48000;this.shape=_x4._y4._B4;this.freq=1.0;this._25=0.0;this._O4=0.0;this._35=0.0;if(_Y4.__4==true){return;}for(let _s3=0;_s3<_x4._y4._E4;++_s3){_Y4._Z4[_s3]=new _M4(_x4._L4[_s3]);
}_Y4.__4=true;}_Y4._45=function(){return(_Y4.__4==!0);};_Y4.prototype._55=function(_65){this._15=_65;this._75();};;_Y4.prototype._85=function(_i4){_i4=Math.max(_Y4._05,_i4);_i4=Math.min(_i4,_Y4._d4);this.freq=_i4;this._75();};;_Y4.prototype._95=function(_a5){_a5=Math.max(0.0,_a5);_a5=Math.min(_a5,1.0);const _b5=_a5-this._35;this._35=_a5;this._25+=_b5;while(this._25>=1.0){this._25-=1.0;}while(this._25<0.0){this._25+=1.0;}};;_Y4.prototype._c5=function(_d5){_d5=Math.max(0,_d5);_d5=Math.min(_d5,_x4._y4._E4-1);
this.shape=_d5;};;_Y4.prototype._Q4=function(){const _e5=_Y4._Z4[this.shape]._Q4(this._25);this._25+=this._O4;while(this._25>=1.0){this._25-=1.0;}return _e5;};;_Y4.prototype._75=function(){this._O4=this.freq/this._15;};;class _f5 extends AudioWorkletProcessor{static _g5=5.0;static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"time",automationRate:"a-rate",defaultValue:0.2,minValue:0.0,maxValue:_f5._g5},{name:"feedback",automationRate:"a-rate",
defaultValue:0.5,minValue:0.0,maxValue:1.0},{name:"mix",automationRate:"a-rate",defaultValue:0.35,minValue:0.0,maxValue:1.0}];}constructor(_i3){super();this._j3();const _k3=_i3.outputChannelCount[0];const _h5=(_f5._g5*sampleRate)+1;this.buffer=new Array(_k3);this._i5=new Uint32Array(_k3);for(let _r3=0;_r3<_k3;++_r3)this.buffer[_r3]=new Float32Array(_h5);}process(_u3,_v3,parameters){const input=_u3[0];const output=_v3[0];const bypass=parameters.bypass;const time=parameters.time;const feedback=parameters.feedback;
const mix=parameters.mix;for(let _r3=0;_r3<input.length;++_r3){const _w3=input[_r3];const _x3=output[_r3];for(let _y3=0;_y3<_w3.length;++_y3){_x3[_y3]=_w3[_y3];const _j5=(time[_y3]!==undefined)?time[_y3]:time[0];const _k5=this._Q4(_r3,_j5);const _g4=(feedback[_y3]!==undefined)?feedback[_y3]:feedback[0];const _l5=_w3[_y3]+(_k5*_g4);this.write(_r3,_l5);const _B3=(bypass[_y3]!==undefined)?bypass[_y3]:bypass[0];if(_B3>0.0){continue;}const _C3=(mix[_y3]!==undefined)?mix[_y3]:mix[0];_x3[_y3]*=(1-_C3);_x3[_y3]+=(_k5*_C3);
}}return this._D3;}_Q4(_m5,_n5){const _o5=_n5*sampleRate;let _U4=(this._i5[_m5]-~~_o5);let _V4=(_U4-1);while(_U4<0)_U4+=this.buffer[_m5].length;while(_V4<0)_V4+=this.buffer[_m5].length;const _p5=_o5-~~_o5;const _W4=this.buffer[_m5][_U4];const _X4=this.buffer[_m5][_V4];return _W4+(_X4-_W4)*_p5;}write(_m5,_13){++this._i5[_m5];this._i5[_m5]%=this.buffer[_m5].length;this.buffer[_m5][this._i5[_m5]]=_13;}}registerProcessor("delay-processor",_f5);AudioWorkletProcessor.prototype._j3=function(){this._D3=true;this.port.onmessage=(_q5)=>{
if(_q5.data==="kill")this._D3=false;};};;class _r5 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1}];}constructor(){super();this._j3();}process(_u3,_v3,parameters){const input=_u3[0];const bypass=parameters.bypass;for(let _r3=0;_r3<input.length;++_r3){const _w3=input[_r3];for(let _y3=0;_y3<_w3.length;++_y3){const _B3=(bypass[_y3]!==undefined)?bypass[_y3]:bypass[0];_v3[_B3][_r3][_y3]=_w3[_y3];}}return this._D3;
}}class _s5 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"gain",automationRate:"a-rate",defaultValue:1,minValue:0}];}constructor(){super();this._j3();}process(_u3,_v3,parameters){const _N3=_u3[0];const _O3=_u3[1];const output=_v3[0];const gain=parameters.gain;for(let _r3=0;_r3<_O3.length;++_r3){const _w3=_O3[_r3];const _x3=output[_r3];for(let _y3=0;_y3<_w3.length;++_y3)_x3[_y3]=_w3[_y3];}for(let _r3=0;_r3<_N3.length;++_r3){const _w3=_N3[_r3];const _x3=output[_r3];for(let _y3=0;_y3<_w3.length;
++_y3){const _h4=(gain[_y3]!==undefined)?gain[_y3]:gain[0];_x3[_y3]+=_w3[_y3]*_h4;}}return this._D3;}}registerProcessor("audio-bus-input",_r5);registerProcessor("audio-bus-output",_s5);class _t5 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"gain",automationRate:"a-rate",defaultValue:1.0,minValue:0.0},{name:"factor",automationRate:"a-rate",defaultValue:20,minValue:1,maxValue:100},{name:"resolution",
automationRate:"a-rate",defaultValue:8,minValue:2,maxValue:16},{name:"mix",automationRate:"a-rate",defaultValue:0.8,minValue:0.0,maxValue:1.0}];}static _u5=[undefined,undefined,2,4,8,16,32,64,128,256,512,1024,2048,4096,8192,16384,32768];constructor(_i3){super();this._j3();const _k3=_i3.outputChannelCount[0];this._v5=new Float32Array(_k3);this._w5=new Uint32Array(_k3);}process(_u3,_v3,parameters){const input=_u3[0];const output=_v3[0];const bypass=parameters.bypass;const gain=parameters.gain;const factor=parameters.factor;
const resolution=parameters.resolution;const mix=parameters.mix;for(let _r3=0;_r3<input.length;++_r3){const _w3=input[_r3];const _x3=output[_r3];for(let _y3=0;_y3<_w3.length;++_y3){_x3[_y3]=_w3[_y3];if(this._w5[_r3]===0)this._v5[_r3]=_w3[_y3];const _g4=(factor[_y3]!==undefined)?factor[_y3]:factor[0];++this._w5[_r3];this._w5[_r3]%=_g4;const _B3=(bypass[_y3]!==undefined)?bypass[_y3]:bypass[0];if(_B3>0.0){continue;}let _A3=this._v5[_r3];const _h4=(gain[_y3]!==undefined)?gain[_y3]:gain[0];_A3*=_h4;_A3=Math.max(Math.min(_A3,
1.0),-1.0);const _x5=(resolution[_y3]!==undefined)?resolution[_y3]:resolution[0];const max=(_A3>0.0)?_t5._u5[_x5]-1:_t5._u5[_x5];_A3=Math.round(_A3*max)/max;const _C3=(mix[_y3]!==undefined)?mix[_y3]:mix[0];_x3[_y3]*=(1.0-_C3);_x3[_y3]+=(_A3*_C3);}}return this._D3;}}registerProcessor("bitcrusher-processor",_t5);class _y5 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"rate",automationRate:"a-rate",defaultValue:5.0,
minValue:0.0,maxValue:20.0},{name:"intensity",automationRate:"a-rate",defaultValue:1.0,minValue:0.0,maxValue:1.0},{name:"offset",automationRate:"a-rate",defaultValue:0.0,minValue:0.0,maxValue:1.0},{name:"shape",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:4}];}constructor(_i3){super();this._j3();const _k3=_i3.outputChannelCount[0];this._z5=new Array(_k3).fill(1.0);this._A5=new Array(_k3).fill(0.0);this._B5=new Array(_k3).fill(_x4._y4._z4);this._C5=new Array(_k3);for(let _r3=0;_r3<_k3;++_r3){
this._C5[_r3]=new _Y4();this._C5[_r3]._55(sampleRate);this._C5[_r3]._85(this._z5[_r3]);this._C5[_r3]._c5(this._B5[_r3]);if(_r3%2===1){this._C5[_r3]._95(this._A5[_r3]);}}}process(_u3,_v3,parameters){const input=_u3[0];const output=_v3[0];const bypass=parameters.bypass;const rate=parameters.rate;const intensity=parameters.intensity;const offset=parameters.offset;const shape=parameters.shape;for(let _r3=0;_r3<input.length;++_r3){const _w3=input[_r3];const _x3=output[_r3];for(let _y3=0;_y3<_w3.length;++_y3){_x3[_y3]=_w3[_y3];
const _x5=(rate[_y3]!==undefined)?rate[_y3]:rate[0];const _D5=(offset[_y3]!==undefined)?offset[_y3]:offset[0];const _E5=(shape[_y3]!==undefined)?shape[_y3]:shape[0];this._F5(_r3,_x5,_D5,_E5);const _G5=this._C5[_r3]._Q4();const _B3=(bypass[_y3]!==undefined)?bypass[_y3]:bypass[0];if(_B3>0.0){continue;}const _s3=(intensity[_y3]!==undefined)?intensity[_y3]:intensity[0];const out=_w3[_y3]*_G5*_s3;_x3[_y3]*=(1.0-_s3);_x3[_y3]+=out;}}return this._D3;}_F5(_m5,_H5,_a5,_d5){if(_H5!==this._z5[_m5]){this._C5[_m5]._85(_H5);
this._z5[_m5]=_H5;}if(_a5!==this._A5[_m5]){if(_m5%2===1){this._C5[_m5]._95(_a5);}this._A5[_m5]=_a5;}if(_d5!==this._B5[_m5]){this._C5[_m5]._c5(_d5);this._B5[_m5]=_d5;}}}registerProcessor("tremolo-processor",_y5);class _I5{constructor(_n5=1e-3){this.setTime(_n5);}setTime(_n5){this._J5=Math.exp(-1/(_n5*sampleRate));}process(_K5,_L5){return _K5+this._J5*(_L5-_K5);}}class _M5{constructor(_N5,_O5){this._P5=new _I5(_N5);this._Q5=new _I5(_O5);this._R5=_N5;this._S5=_O5;}_T5(_n5){if(_n5===this._R5)return;this._P5.setTime(_n5);
this._R5=_n5;}_U5(_n5){if(_n5===this._S5)return;this._Q5.setTime(_n5);this._S5=_n5;}process(_K5,_L5){if(_K5>_L5)return this._P5.process(_K5,_L5);else return this._Q5.process(_K5,_L5);}}class _V5 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"ingain",automationRate:"a-rate",defaultValue:1,minValue:0},{name:"threshold",automationRate:"a-rate",defaultValue:0.125,minValue:1e-3,maxValue:1},{name:"ratio",
automationRate:"a-rate",defaultValue:4,minValue:1},{name:"attack",automationRate:"a-rate",defaultValue:0.05,minValue:1e-3,maxValue:1e-1},{name:"release",automationRate:"a-rate",defaultValue:0.25,minValue:1e-2,maxValue:1},{name:"outgain",automationRate:"a-rate",defaultValue:1,minValue:0}];}constructor(_W5){super();this._j3();const _P5=_V5.parameterDescriptors.find(_X5=>_X5.name==="attack");const _Q5=_V5.parameterDescriptors.find(_X5=>_X5.name==="release");this._Y5=new _M5(_P5.defaultValue,_Q5.defaultValue);
this._Z5=0;}process(__5,_06,_16){const input=__5[0];const output=_06[0];const bypass=_16.bypass;const ingain=_16.ingain;const outgain=_16.outgain;const threshold=_16.threshold;const ratio=_16.ratio;const attack=_16.attack;const release=_16.release;if(input.length===0)return this._D3;for(let _y3=0;_y3<input[0].length;++_y3){let _26=input.map(_36=>_36[_y3]);output.forEach((_36,_46)=>{_36[_y3]=_26[_46];});const _56=(ingain[_y3]!==undefined)?ingain[_y3]:ingain[0];_26=_26.map(_66=>_66*=_56);const rect=_26.map(_66=>Math.abs(_66));
const max=Math.max(...rect);const _76=_86(max);const _j5=(threshold[_y3]!==undefined)?threshold[_y3]:threshold[0];const _96=_86(_j5);const _a6=Math.max(0,_76-_96);const _P5=(attack[_y3]!==undefined)?attack[_y3]:attack[0];const _Q5=(release[_y3]!==undefined)?release[_y3]:release[0];this._Y5._T5(_P5);this._Y5._U5(_Q5);this._Z5=this._Y5.process(_a6,this._Z5);const _B3=(bypass[_y3]!==undefined)?bypass[_y3]:bypass[0];if(_B3>0)continue;const _x5=(ratio[_y3]!==undefined)?ratio[_y3]:ratio[0];const _b6=(this._Z5/_x5)-this._Z5;
const _h4=_c6(_b6);_26=_26.map(_66=>_66*=_h4);const _d6=(outgain[_y3]!==undefined)?outgain[_y3]:outgain[0];_26=_26.map(_66=>_66*=_d6);output.forEach((_36,_46)=>{_36[_y3]=_26[_46];});}return this._D3;}}function _86(_e6){return 20*Math.log10(_e6);}function _c6(_e6){return Math.pow(10,_e6/20);}registerProcessor("compressor-processor",_V5);class _f6 extends AudioWorkletProcessor{static get parameterDescriptors(){const _d4=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,
minValue:0,maxValue:1},{name:"freq",automationRate:"a-rate",defaultValue:Math.min(500.0,_d4),minValue:10.0,maxValue:_d4},{name:"q",automationRate:"a-rate",defaultValue:1.0,minValue:1.0,maxValue:100.0},{name:"gain",automationRate:"a-rate",defaultValue:1e-2,minValue:1e-6}];}constructor(_i3){super();this._j3();const _k3=_i3.outputChannelCount[0];this._T3=0;this._U3=0;this._V3=0;this._W3=0;this._X3=0;this._Y3=new Float32Array(_k3);this._Z3=new Float32Array(_k3);this.__3=new Float32Array(_k3);this._04=new Float32Array(_k3);
this._e4=-1;this._24=-1;this._f4=-1;}process(_u3,_v3,parameters){const input=_u3[0];const output=_v3[0];const bypass=parameters.bypass;const freq=parameters.freq;const q=parameters.q;const gain=parameters.gain;const _34=(freq.length===1&&q.length===1&&gain.length===1);if(_34)this._44(freq[0],q[0],gain[0]);for(let _r3=0;_r3<input.length;++_r3){const _w3=input[_r3];const _x3=output[_r3];for(let _y3=0;_y3<_w3.length;++_y3){if(_34===!1){const _g4=(freq[_y3]!==undefined)?freq[_y3]:freq[0];const _54=(q[_y3]!==undefined)?q[_y3]:q[0];
const _h4=(gain[_y3]!==undefined)?gain[_y3]:gain[0];this._44(_g4,_54,_h4);}const _64=this._V3*_w3[_y3]+this._W3*this._Y3[_r3]+this._X3*this._Z3[_r3]-this._T3*this.__3[_r3]-this._U3*this._04[_r3];this._Z3[_r3]=this._Y3[_r3];this._Y3[_r3]=_w3[_y3];this._04[_r3]=this.__3[_r3];this.__3[_r3]=_64;const _B3=(bypass[_y3]!==undefined)?bypass[_y3]:bypass[0];_x3[_y3]=(_B3>0)?_w3[_y3]:_64;}}return this._D3;}_44(_i4,_84,_j4){if(_i4===this._e4&&_84===this._24&&_j4===this._f4)return;const _94=2*Math.PI*_i4/sampleRate;
const _a4=Math.cos(_94);const _k4=Math.sqrt(_j4);const _q4=_k4+1;const _r4=_k4-1;const _s4=_q4*_a4;const _t4=_r4*_a4;const _u4=_q4-_t4;const _v4=_q4+_t4;const alpha=Math.sin(_94)/(2*_84);const _w4=(2*Math.sqrt(_k4)*alpha);const _b4=_v4+_w4;const _T3=-2*(_r4+_s4);const _U3=_v4-_w4;const _V3=_k4*(_u4+_w4);const _W3=2*_k4*(_r4-_s4);const _X3=_k4*(_u4-_w4);this._T3=_T3/_b4;this._U3=_U3/_b4;this._V3=_V3/_b4;this._W3=_W3/_b4;this._X3=_X3/_b4;this._e4=_i4;this._24=_84;this._f4=_j4;}}registerProcessor("lo-shelf-processor",
_f6);