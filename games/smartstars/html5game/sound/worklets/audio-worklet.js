class _N3{constructor(_O3){this._P3=0;this._Q3=0;this.feedback=0;this._R3=0;this.buffer=new Float32Array(_O3);this._S3=0;}process(_T3){const out=this.buffer[this._S3];this._R3=(this._R3*this._P3)+(out*this._Q3);this.buffer[this._S3]=_T3+(this._R3*this.feedback);++this._S3;this._S3%=this.buffer.length;return out;}_U3(_V3){this.feedback=Math.min(Math.max(0,_V3),1);}_W3(_X3){this._P3=Math.min(Math.max(0,_X3),1);this._Q3=1-this._P3;}}class _Y3{constructor(_O3){this.feedback=0;this.buffer=new Float32Array(_O3);
this._S3=0;}process(_T3){const out=this.buffer[this._S3];this.buffer[this._S3]=_T3+(out*this.feedback);++this._S3;this._S3%=this.buffer.length;return(out-_T3);}_U3(_V3){this.feedback=Math.min(Math.max(0,_V3),1);}}class _Z3 extends AudioWorkletProcessor{static __3=8;static _04=4;static _14=0.015;static _24=0.4;static _34=0.28;static _44=0.7;static _54=[1116,1188,1277,1356,1422,1491,1557,1617];static _64=[1139,1211,1300,1379,1445,1514,1580,1640];static _74=[556,441,341,225];static _84=[579,464,364,248];static get parameterDescriptors(){
return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"size",automationRate:"a-rate",defaultValue:0.7,minValue:0.0,maxValue:1.0},{name:"damp",automationRate:"a-rate",defaultValue:0.1,minValue:0.0,maxValue:1.0},{name:"mix",automationRate:"a-rate",defaultValue:0.35,minValue:0.0,maxValue:1.0}];}constructor(_94){super();this._a4();const _b4=_94.outputChannelCount[0];this._c4=-1;this._d4=-1;this._e4=new Array(_b4);this._f4=new Array(_b4);const _g4=[_Z3._54,_Z3._64];const _h4=[_Z3._74,
_Z3._84];for(let _i4=0;_i4<_b4;++_i4){this._e4[_i4]=new Array(_Z3.__3);this._f4[_i4]=new Array(_Z3._04);for(let _j4=0;_j4<_Z3.__3;++_j4)this._e4[_i4][_j4]=new _N3(_g4[_i4%_g4.length][_j4]);for(let _j4=0;_j4<_Z3._04;++_j4)this._f4[_i4][_j4]=new _Y3(_h4[_i4%_h4.length][_j4]);}this._k4(0.5);this._W3(0.5);for(let _i4=0;_i4<_b4;++_i4)for(let _j4=0;_j4<_Z3._04;++_j4)this._f4[_i4][_j4]._U3(0.5);}process(_l4,_m4,parameters){const input=_l4[0];const output=_m4[0];const bypass=parameters.bypass;const size=parameters.size;
const damp=parameters.damp;const mix=parameters.mix;for(let _i4=0;_i4<input.length;++_i4){const _n4=input[_i4];const _o4=output[_i4];for(let _p4=0;_p4<_n4.length;++_p4){const _p4=(size[_p4]!==undefined)?size[_p4]:size[0];const _q4=(damp[_p4]!==undefined)?damp[_p4]:damp[0];this._k4(_p4);this._W3(_q4);_o4[_p4]=_n4[_p4];let out=0;const _r4=_n4[_p4]*_Z3._14;for(let _j4=0;_j4<_Z3.__3;++_j4)out+=this._e4[_i4][_j4].process(_r4);for(let _j4=0;_j4<_Z3._04;++_j4)out=this._f4[_i4][_j4].process(out);const _s4=(bypass[_p4]!==undefined)?bypass[_p4]:bypass[0];
if(_s4>0.0){continue;}const _t4=(mix[_p4]!==undefined)?mix[_p4]:mix[0];_o4[_p4]*=(1-_t4);_o4[_p4]+=(out*_t4);}}return this._u4;}_k4(_O3){if(_O3===this._c4)return;const size=(_O3*_Z3._34)+_Z3._44;for(let _i4=0;_i4<this._e4.length;++_i4)for(let _j4=0;_j4<_Z3.__3;++_j4)this._e4[_i4][_j4]._U3(size);this._c4=_O3;}_W3(_X3){if(_X3===this._d4)return;const damp=_X3*_Z3._24;for(let _i4=0;_i4<this._e4.length;++_i4)for(let _j4=0;_j4<_Z3.__3;++_j4)this._e4[_i4][_j4]._W3(damp);this._d4=_X3;}}registerProcessor("reverb1-processor",
_Z3);class _v4 extends AudioWorkletProcessor{static get parameterDescriptors(){return [];}constructor(){super();this._a4();}process(_w4,_x4,_y4){const input=_w4[0];const _z4=_x4[0];const _A4=_x4[1];for(let _i4=0;_i4<input.length;++_i4){const _n4=input[_i4];const _B4=_z4[_i4];const _C4=_A4[_i4];for(let _p4=0;_p4<_n4.length;++_p4){_B4[_p4]=_n4[_p4];_C4[_p4]=_n4[_p4];}}return this._u4;}}class _D4 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,
minValue:0,maxValue:1}];}constructor(){super();this._a4();}process(_w4,_x4,_y4){const _E4=_w4[0];const _F4=_w4[1];const output=_x4[0];const bypass=_y4.bypass;for(let _i4=0;_i4<_F4.length;++_i4){const _G4=_E4[_i4];const _H4=_F4[_i4];const _o4=output[_i4];for(let _p4=0;_p4<_G4.length;++_p4){const _s4=(bypass[_p4]!==undefined)?bypass[_p4]:bypass[0];if(_s4>0){_o4[_p4]=_H4[_p4];}else {_o4[_p4]=_G4[_p4];}}}return this._u4;}}registerProcessor("eq-input",_v4);registerProcessor("eq-output",_D4);class _I4 extends AudioWorkletProcessor{
static get parameterDescriptors(){const _J4=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"cutoff",automationRate:"a-rate",defaultValue:Math.min(500.0,_J4),minValue:10.0,maxValue:_J4},{name:"q",automationRate:"a-rate",defaultValue:1.5,minValue:1.0,maxValue:100.0}];}constructor(_94){super();this._a4();const _b4=_94.outputChannelCount[0];this._K4=0;this._L4=0;this._M4=0;this._N4=0;this._O4=0;this._P4=new Float32Array(_b4);this._Q4=new Float32Array(_b4);
this._R4=new Float32Array(_b4);this._S4=new Float32Array(_b4);this._T4=-1;this._U4=-1;}process(_l4,_m4,parameters){const input=_l4[0];const output=_m4[0];const bypass=parameters.bypass;const cutoff=parameters.cutoff;const q=parameters.q;const _V4=(cutoff.length===1&&q.length===1);if(_V4)this._W4(cutoff[0],q[0]);for(let _i4=0;_i4<input.length;++_i4){const _n4=input[_i4];const _o4=output[_i4];for(let _p4=0;_p4<_n4.length;++_p4){if(_V4===!1){const _i4=(cutoff[_p4]!==undefined)?cutoff[_p4]:cutoff[0];const _X4=(q[_p4]!==undefined)?q[_p4]:q[0];
this._W4(_i4,_X4);}const _Y4=this._M4*_n4[_p4]+this._N4*this._P4[_i4]+this._O4*this._Q4[_i4]-this._K4*this._R4[_i4]-this._L4*this._S4[_i4];this._Q4[_i4]=this._P4[_i4];this._P4[_i4]=_n4[_p4];this._S4[_i4]=this._R4[_i4];this._R4[_i4]=_Y4;const _s4=(bypass[_p4]!==undefined)?bypass[_p4]:bypass[0];_o4[_p4]=(_s4>0)?_n4[_p4]:_Y4;}}return this._u4;}_W4(_Z4,__4){if(_Z4===this._T4&&__4===this._U4)return;const _05=2*Math.PI*_Z4/sampleRate;const alpha=Math.sin(_05)/(2*__4);const _15=Math.cos(_05);const _25=1+alpha;
const _K4=-2*_15;const _L4=1-alpha;const _M4=(1-_15)/2;const _N4=1-_15;const _O4=(1-_15)/2;this._K4=_K4/_25;this._L4=_L4/_25;this._M4=_M4/_25;this._N4=_N4/_25;this._O4=_O4/_25;this._T4=_Z4;this._U4=__4;}}registerProcessor("lpf2-processor",_I4);class _35 extends AudioWorkletProcessor{static get parameterDescriptors(){const _45=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"freq",automationRate:"a-rate",defaultValue:Math.min(1500.0,
_45),minValue:10.0,maxValue:_45},{name:"q",automationRate:"a-rate",defaultValue:1.0,minValue:1.0,maxValue:100.0},{name:"gain",automationRate:"a-rate",defaultValue:1e-2,minValue:1e-6}];}constructor(_94){super();this._a4();const _b4=_94.outputChannelCount[0];this._K4=0;this._L4=0;this._M4=0;this._N4=0;this._O4=0;this._P4=new Float32Array(_b4);this._Q4=new Float32Array(_b4);this._R4=new Float32Array(_b4);this._S4=new Float32Array(_b4);this._55=-1;this._U4=-1;this._65=-1;}process(_l4,_m4,parameters){const input=_l4[0];
const output=_m4[0];const bypass=parameters.bypass;const freq=parameters.freq;const q=parameters.q;const gain=parameters.gain;const _V4=(freq.length===1&&q.length===1&&gain.length===1);if(_V4)this._W4(freq[0],q[0],gain[0]);for(let _i4=0;_i4<input.length;++_i4){const _n4=input[_i4];const _o4=output[_i4];for(let _p4=0;_p4<_n4.length;++_p4){if(_V4===!1){const _75=(freq[_p4]!==undefined)?freq[_p4]:freq[0];const _X4=(q[_p4]!==undefined)?q[_p4]:q[0];const _85=(gain[_p4]!==undefined)?gain[_p4]:gain[0];this._W4(_75,
_X4,_85);}const _Y4=this._M4*_n4[_p4]+this._N4*this._P4[_i4]+this._O4*this._Q4[_i4]-this._K4*this._R4[_i4]-this._L4*this._S4[_i4];this._Q4[_i4]=this._P4[_i4];this._P4[_i4]=_n4[_p4];this._S4[_i4]=this._R4[_i4];this._R4[_i4]=_Y4;const _s4=(bypass[_p4]!==undefined)?bypass[_p4]:bypass[0];_o4[_p4]=(_s4>0)?_n4[_p4]:_Y4;}}return this._u4;}_W4(_95,__4,_a5){if(_95===this._55&&__4===this._U4&&_a5===this._65)return;const _05=2*Math.PI*_95/sampleRate;const _15=Math.cos(_05);const _b5=Math.sqrt(_a5);const alpha=Math.sin(_05)/(2*__4);
const _c5=alpha/_b5;const _d5=alpha*_b5;const _25=1+_c5;const _K4=-2*_15;const _L4=1-_c5;const _M4=1+_d5;const _N4=_K4;const _O4=1-_d5;this._K4=_K4/_25;this._L4=_L4/_25;this._M4=_M4/_25;this._N4=_N4/_25;this._O4=_O4/_25;this._55=_95;this._U4=__4;this._65=_a5;}}registerProcessor("peak-eq-processor",_35);class _e5 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"gain",automationRate:"a-rate",defaultValue:0.5,
minValue:0.0}];}constructor(){super();this._a4();}process(_l4,_m4,parameters){const input=_l4[0];const output=_m4[0];const bypass=parameters.bypass;const gain=parameters.gain;for(let _i4=0;_i4<input.length;++_i4){const _n4=input[_i4];const _o4=output[_i4];for(let _p4=0;_p4<_n4.length;++_p4){_o4[_p4]=_n4[_p4];const _s4=(bypass[_p4]!==undefined)?bypass[_p4]:bypass[0];if(_s4>0.0){continue;}const _85=(gain[_p4]!==undefined)?gain[_p4]:gain[0];_o4[_p4]*=_85;}}return this._u4;}}registerProcessor("gain-processor",
_e5);class _f5 extends AudioWorkletProcessor{static get parameterDescriptors(){const _J4=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"cutoff",automationRate:"a-rate",defaultValue:Math.min(1500.0,_J4),minValue:10.0,maxValue:_J4},{name:"q",automationRate:"a-rate",defaultValue:1.5,minValue:1.0,maxValue:100.0}];}constructor(_94){super();this._a4();const _b4=_94.outputChannelCount[0];this._K4=0;this._L4=0;this._M4=0;this._N4=0;this._O4=0;
this._P4=new Float32Array(_b4);this._Q4=new Float32Array(_b4);this._R4=new Float32Array(_b4);this._S4=new Float32Array(_b4);this._T4=-1;this._U4=-1;}process(_l4,_m4,parameters){const input=_l4[0];const output=_m4[0];const bypass=parameters.bypass;const cutoff=parameters.cutoff;const q=parameters.q;const _V4=(cutoff.length===1&&q.length===1);if(_V4)this._W4(cutoff[0],q[0]);for(let _i4=0;_i4<input.length;++_i4){const _n4=input[_i4];const _o4=output[_i4];for(let _p4=0;_p4<_n4.length;++_p4){if(_V4===!1){const _i4=(cutoff[_p4]!==undefined)?cutoff[_p4]:cutoff[0];
const _X4=(q[_p4]!==undefined)?q[_p4]:q[0];this._W4(_i4,_X4);}const _Y4=this._M4*_n4[_p4]+this._N4*this._P4[_i4]+this._O4*this._Q4[_i4]-this._K4*this._R4[_i4]-this._L4*this._S4[_i4];this._Q4[_i4]=this._P4[_i4];this._P4[_i4]=_n4[_p4];this._S4[_i4]=this._R4[_i4];this._R4[_i4]=_Y4;const _s4=(bypass[_p4]!==undefined)?bypass[_p4]:bypass[0];_o4[_p4]=(_s4>0)?_n4[_p4]:_Y4;}}return this._u4;}_W4(_Z4,__4){if(_Z4===this._T4&&__4===this._U4)return;const _05=2*Math.PI*_Z4/sampleRate;const alpha=Math.sin(_05)/(2*__4);
const _15=Math.cos(_05);const _25=1+alpha;const _K4=-2*_15;const _L4=1-alpha;const _M4=(1+_15)/2;const _N4=-1-_15;const _O4=(1+_15)/2;this._K4=_K4/_25;this._L4=_L4/_25;this._M4=_M4/_25;this._N4=_N4/_25;this._O4=_O4/_25;this._T4=_Z4;this._U4=__4;}}registerProcessor("hpf2-processor",_f5);class _g5 extends AudioWorkletProcessor{static get parameterDescriptors(){const _45=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"freq",automationRate:"a-rate",
defaultValue:Math.min(5000.0,_45),minValue:10.0,maxValue:_45},{name:"q",automationRate:"a-rate",defaultValue:1.0,minValue:1.0,maxValue:100.0},{name:"gain",automationRate:"a-rate",defaultValue:1e-2,minValue:1e-6}];}constructor(_94){super();this._a4();const _b4=_94.outputChannelCount[0];this._K4=0;this._L4=0;this._M4=0;this._N4=0;this._O4=0;this._P4=new Float32Array(_b4);this._Q4=new Float32Array(_b4);this._R4=new Float32Array(_b4);this._S4=new Float32Array(_b4);this._55=-1;this._U4=-1;this._65=-1;}process(_l4,
_m4,parameters){const input=_l4[0];const output=_m4[0];const bypass=parameters.bypass;const freq=parameters.freq;const q=parameters.q;const gain=parameters.gain;const _V4=(freq.length===1&&q.length===1&&gain.length===1);if(_V4)this._W4(freq[0],q[0],gain[0]);for(let _i4=0;_i4<input.length;++_i4){const _n4=input[_i4];const _o4=output[_i4];for(let _p4=0;_p4<_n4.length;++_p4){if(_V4===!1){const _75=(freq[_p4]!==undefined)?freq[_p4]:freq[0];const _X4=(q[_p4]!==undefined)?q[_p4]:q[0];const _85=(gain[_p4]!==undefined)?gain[_p4]:gain[0];
this._W4(_75,_X4,_85);}const _Y4=this._M4*_n4[_p4]+this._N4*this._P4[_i4]+this._O4*this._Q4[_i4]-this._K4*this._R4[_i4]-this._L4*this._S4[_i4];this._Q4[_i4]=this._P4[_i4];this._P4[_i4]=_n4[_p4];this._S4[_i4]=this._R4[_i4];this._R4[_i4]=_Y4;const _s4=(bypass[_p4]!==undefined)?bypass[_p4]:bypass[0];_o4[_p4]=(_s4>0)?_n4[_p4]:_Y4;}}return this._u4;}_W4(_95,__4,_a5){if(_95===this._55&&__4===this._U4&&_a5===this._65)return;const _05=2*Math.PI*_95/sampleRate;const _15=Math.cos(_05);const _b5=Math.sqrt(_a5);const _h5=_b5+1;
const _i5=_b5-1;const _j5=_h5*_15;const _k5=_i5*_15;const _l5=_h5-_k5;const _m5=_h5+_k5;const alpha=Math.sin(_05)/(2*__4);const _n5=(2*Math.sqrt(_b5)*alpha);const _25=_l5+_n5;const _K4=2*(_i5-_j5);const _L4=_l5-_n5;const _M4=_b5*(_m5+_n5);const _N4=-2*_b5*(_i5+_j5);const _O4=_b5*(_m5-_n5);this._K4=_K4/_25;this._L4=_L4/_25;this._M4=_M4/_25;this._N4=_N4/_25;this._O4=_O4/_25;this._55=_95;this._U4=__4;this._65=_a5;}}registerProcessor("hi-shelf-processor",_g5);function _o5(){}_o5._p5={_q5:0,_r5:1,_s5:2,_t5:3,_u5:4,
_v5:5};_o5._w5=function(_x5){return 1.0-_x5;};_o5._y5=function(_x5){return _x5;};_o5._z5=function(_x5){return 0.5*(Math.sin((_x5*2.0*Math.PI)-(Math.PI/2.0))+1.0);};_o5._A5=function(_x5){if(_x5<0.5){return 0.0;}return 1.0;};_o5._B5=function(_x5){if(_x5<0.5){return 2.0*_x5;}return 2.0-(2.0*_x5);};_o5._C5=[_o5._w5,_o5._y5,_o5._z5,_o5._A5,_o5._B5];_D5._E5=512;_D5._F5=1.0/_D5._E5;function _D5(_G5){this.data=new Float32Array(_D5._E5);for(let _j4=0;_j4<_D5._E5;++_j4){this.data[_j4]=_G5(_j4*_D5._F5);}}_D5.prototype._H5=function(_x5){
_x5=Math.max(0.0,_x5);_x5=Math.min(_x5,1.0);const _I5=_x5*_D5._E5;const _J5=~~_I5;const _K5=_I5-_J5;let _L5=_J5;let _M5=_L5+1;if(_L5>=_D5._E5){_L5-=_D5._E5;}if(_M5>=_D5._E5){_M5-=_D5._E5;}const _N5=this.data[_L5];const _O5=this.data[_M5];return _N5+(_O5-_N5)*_K5;};;_P5._Q5=[];_P5._R5=!1;_P5._S5=0.0;_P5._45=20.0;function _P5(){this._T5=48000;this.shape=_o5._p5._s5;this.freq=1.0;this._U5=0.0;this._F5=0.0;this._V5=0.0;if(_P5._R5==true){return;}for(let _j4=0;_j4<_o5._p5._v5;++_j4){_P5._Q5[_j4]=new _D5(_o5._C5[_j4]);
}_P5._R5=true;}_P5._W5=function(){return(_P5._R5==!0);};_P5.prototype._X5=function(_Y5){this._T5=_Y5;this._Z5();};;_P5.prototype.__5=function(_95){_95=Math.max(_P5._S5,_95);_95=Math.min(_95,_P5._45);this.freq=_95;this._Z5();};;_P5.prototype._06=function(_16){_16=Math.max(0.0,_16);_16=Math.min(_16,1.0);const _26=_16-this._V5;this._V5=_16;this._U5+=_26;while(this._U5>=1.0){this._U5-=1.0;}while(this._U5<0.0){this._U5+=1.0;}};;_P5.prototype._36=function(_46){_46=Math.max(0,_46);_46=Math.min(_46,_o5._p5._v5-1);
this.shape=_46;};;_P5.prototype._H5=function(){const _56=_P5._Q5[this.shape]._H5(this._U5);this._U5+=this._F5;while(this._U5>=1.0){this._U5-=1.0;}return _56;};;_P5.prototype._Z5=function(){this._F5=this.freq/this._T5;};;class _66 extends AudioWorkletProcessor{static _76=5.0;static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"time",automationRate:"a-rate",defaultValue:0.2,minValue:0.0,maxValue:_66._76},{name:"feedback",automationRate:"a-rate",
defaultValue:0.5,minValue:0.0,maxValue:1.0},{name:"mix",automationRate:"a-rate",defaultValue:0.35,minValue:0.0,maxValue:1.0}];}constructor(_94){super();this._a4();const _b4=_94.outputChannelCount[0];const _86=(_66._76*sampleRate)+1;this.buffer=new Array(_b4);this._96=new Uint32Array(_b4);for(let _i4=0;_i4<_b4;++_i4)this.buffer[_i4]=new Float32Array(_86);}process(_l4,_m4,parameters){const input=_l4[0];const output=_m4[0];const bypass=parameters.bypass;const time=parameters.time;const feedback=parameters.feedback;
const mix=parameters.mix;for(let _i4=0;_i4<input.length;++_i4){const _n4=input[_i4];const _o4=output[_i4];for(let _p4=0;_p4<_n4.length;++_p4){_o4[_p4]=_n4[_p4];const _a6=(time[_p4]!==undefined)?time[_p4]:time[0];const _b6=this._H5(_i4,_a6);const _75=(feedback[_p4]!==undefined)?feedback[_p4]:feedback[0];const _c6=_n4[_p4]+(_b6*_75);this.write(_i4,_c6);const _s4=(bypass[_p4]!==undefined)?bypass[_p4]:bypass[0];if(_s4>0.0){continue;}const _t4=(mix[_p4]!==undefined)?mix[_p4]:mix[0];_o4[_p4]*=(1-_t4);_o4[_p4]+=(_b6*_t4);
}}return this._u4;}_H5(_d6,_e6){const _f6=_e6*sampleRate;let _L5=(this._96[_d6]-~~_f6);let _M5=(_L5-1);while(_L5<0)_L5+=this.buffer[_d6].length;while(_M5<0)_M5+=this.buffer[_d6].length;const _g6=_f6-~~_f6;const _N5=this.buffer[_d6][_L5];const _O5=this.buffer[_d6][_M5];return _N5+(_O5-_N5)*_g6;}write(_d6,_T3){++this._96[_d6];this._96[_d6]%=this.buffer[_d6].length;this.buffer[_d6][this._96[_d6]]=_T3;}}registerProcessor("delay-processor",_66);AudioWorkletProcessor.prototype._a4=function(){this._u4=true;this.port.onmessage=(_h6)=>{
if(_h6.data==="kill")this._u4=false;};};;class _i6 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1}];}constructor(){super();this._a4();}process(_l4,_m4,parameters){const input=_l4[0];const bypass=parameters.bypass;for(let _i4=0;_i4<input.length;++_i4){const _n4=input[_i4];for(let _p4=0;_p4<_n4.length;++_p4){const _s4=(bypass[_p4]!==undefined)?bypass[_p4]:bypass[0];_m4[_s4][_i4][_p4]=_n4[_p4];}}return this._u4;
}}class _j6 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"gain",automationRate:"a-rate",defaultValue:1,minValue:0}];}constructor(){super();this._a4();}process(_l4,_m4,parameters){const _E4=_l4[0];const _F4=_l4[1];const output=_m4[0];const gain=parameters.gain;for(let _i4=0;_i4<_F4.length;++_i4){const _n4=_F4[_i4];const _o4=output[_i4];for(let _p4=0;_p4<_n4.length;++_p4)_o4[_p4]=_n4[_p4];}for(let _i4=0;_i4<_E4.length;++_i4){const _n4=_E4[_i4];const _o4=output[_i4];for(let _p4=0;_p4<_n4.length;
++_p4){const _85=(gain[_p4]!==undefined)?gain[_p4]:gain[0];_o4[_p4]+=_n4[_p4]*_85;}}return this._u4;}}registerProcessor("audio-bus-input",_i6);registerProcessor("audio-bus-output",_j6);class _k6 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"gain",automationRate:"a-rate",defaultValue:1.0,minValue:0.0},{name:"factor",automationRate:"a-rate",defaultValue:20,minValue:1,maxValue:100},{name:"resolution",
automationRate:"a-rate",defaultValue:8,minValue:2,maxValue:16},{name:"mix",automationRate:"a-rate",defaultValue:0.8,minValue:0.0,maxValue:1.0}];}static _l6=[undefined,undefined,2,4,8,16,32,64,128,256,512,1024,2048,4096,8192,16384,32768];constructor(_94){super();this._a4();const _b4=_94.outputChannelCount[0];this._m6=new Float32Array(_b4);this._n6=new Uint32Array(_b4);}process(_l4,_m4,parameters){const input=_l4[0];const output=_m4[0];const bypass=parameters.bypass;const gain=parameters.gain;const factor=parameters.factor;
const resolution=parameters.resolution;const mix=parameters.mix;for(let _i4=0;_i4<input.length;++_i4){const _n4=input[_i4];const _o4=output[_i4];for(let _p4=0;_p4<_n4.length;++_p4){_o4[_p4]=_n4[_p4];if(this._n6[_i4]===0)this._m6[_i4]=_n4[_p4];const _75=(factor[_p4]!==undefined)?factor[_p4]:factor[0];++this._n6[_i4];this._n6[_i4]%=_75;const _s4=(bypass[_p4]!==undefined)?bypass[_p4]:bypass[0];if(_s4>0.0){continue;}let _r4=this._m6[_i4];const _85=(gain[_p4]!==undefined)?gain[_p4]:gain[0];_r4*=_85;_r4=Math.max(Math.min(_r4,
1.0),-1.0);const _o6=(resolution[_p4]!==undefined)?resolution[_p4]:resolution[0];const max=(_r4>0.0)?_k6._l6[_o6]-1:_k6._l6[_o6];_r4=Math.round(_r4*max)/max;const _t4=(mix[_p4]!==undefined)?mix[_p4]:mix[0];_o4[_p4]*=(1.0-_t4);_o4[_p4]+=(_r4*_t4);}}return this._u4;}}registerProcessor("bitcrusher-processor",_k6);class _p6 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"rate",automationRate:"a-rate",defaultValue:5.0,
minValue:0.0,maxValue:20.0},{name:"intensity",automationRate:"a-rate",defaultValue:1.0,minValue:0.0,maxValue:1.0},{name:"offset",automationRate:"a-rate",defaultValue:0.0,minValue:0.0,maxValue:1.0},{name:"shape",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:4}];}constructor(_94){super();this._a4();const _b4=_94.outputChannelCount[0];this._q6=new Array(_b4).fill(1.0);this._r6=new Array(_b4).fill(0.0);this._s6=new Array(_b4).fill(_o5._p5._q5);this._t6=new Array(_b4);for(let _i4=0;_i4<_b4;++_i4){
this._t6[_i4]=new _P5();this._t6[_i4]._X5(sampleRate);this._t6[_i4].__5(this._q6[_i4]);this._t6[_i4]._36(this._s6[_i4]);if(_i4%2===1){this._t6[_i4]._06(this._r6[_i4]);}}}process(_l4,_m4,parameters){const input=_l4[0];const output=_m4[0];const bypass=parameters.bypass;const rate=parameters.rate;const intensity=parameters.intensity;const offset=parameters.offset;const shape=parameters.shape;for(let _i4=0;_i4<input.length;++_i4){const _n4=input[_i4];const _o4=output[_i4];for(let _p4=0;_p4<_n4.length;++_p4){_o4[_p4]=_n4[_p4];
const _o6=(rate[_p4]!==undefined)?rate[_p4]:rate[0];const _u6=(offset[_p4]!==undefined)?offset[_p4]:offset[0];const _v6=(shape[_p4]!==undefined)?shape[_p4]:shape[0];this._w6(_i4,_o6,_u6,_v6);const _x6=this._t6[_i4]._H5();const _s4=(bypass[_p4]!==undefined)?bypass[_p4]:bypass[0];if(_s4>0.0){continue;}const _j4=(intensity[_p4]!==undefined)?intensity[_p4]:intensity[0];const out=_n4[_p4]*_x6*_j4;_o4[_p4]*=(1.0-_j4);_o4[_p4]+=out;}}return this._u4;}_w6(_d6,_y6,_16,_46){if(_y6!==this._q6[_d6]){this._t6[_d6].__5(_y6);
this._q6[_d6]=_y6;}if(_16!==this._r6[_d6]){if(_d6%2===1){this._t6[_d6]._06(_16);}this._r6[_d6]=_16;}if(_46!==this._s6[_d6]){this._t6[_d6]._36(_46);this._s6[_d6]=_46;}}}registerProcessor("tremolo-processor",_p6);class _z6{constructor(_e6=1e-3){this.setTime(_e6);}setTime(_e6){this._A6=Math.exp(-1/(_e6*sampleRate));}process(_B6,_C6){return _B6+this._A6*(_C6-_B6);}}class _D6{constructor(_E6,_F6){this._G6=new _z6(_E6);this._H6=new _z6(_F6);this._I6=_E6;this._J6=_F6;}_K6(_e6){if(_e6===this._I6)return;this._G6.setTime(_e6);
this._I6=_e6;}_L6(_e6){if(_e6===this._J6)return;this._H6.setTime(_e6);this._J6=_e6;}process(_B6,_C6){if(_B6>_C6)return this._G6.process(_B6,_C6);else return this._H6.process(_B6,_C6);}}class _M6 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"ingain",automationRate:"a-rate",defaultValue:1,minValue:0},{name:"threshold",automationRate:"a-rate",defaultValue:0.125,minValue:1e-3,maxValue:1},{name:"ratio",
automationRate:"a-rate",defaultValue:4,minValue:1},{name:"attack",automationRate:"a-rate",defaultValue:0.05,minValue:1e-3,maxValue:1e-1},{name:"release",automationRate:"a-rate",defaultValue:0.25,minValue:1e-2,maxValue:1},{name:"outgain",automationRate:"a-rate",defaultValue:1,minValue:0}];}constructor(_N6){super();this._a4();const _G6=_M6.parameterDescriptors.find(_O6=>_O6.name==="attack");const _H6=_M6.parameterDescriptors.find(_O6=>_O6.name==="release");this._P6=new _D6(_G6.defaultValue,_H6.defaultValue);
this._Q6=0;}process(_R6,_S6,_T6){const input=_R6[0];const output=_S6[0];const bypass=_T6.bypass;const ingain=_T6.ingain;const outgain=_T6.outgain;const threshold=_T6.threshold;const ratio=_T6.ratio;const attack=_T6.attack;const release=_T6.release;if(input.length===0)return this._u4;for(let _p4=0;_p4<input[0].length;++_p4){let _U6=input.map(_V6=>_V6[_p4]);output.forEach((_V6,_W6)=>{_V6[_p4]=_U6[_W6];});const _X6=(ingain[_p4]!==undefined)?ingain[_p4]:ingain[0];_U6=_U6.map(_Y6=>_Y6*=_X6);const rect=_U6.map(_Y6=>Math.abs(_Y6));
const max=Math.max(...rect);const _Z6=__6(max);const _a6=(threshold[_p4]!==undefined)?threshold[_p4]:threshold[0];const _07=__6(_a6);const _17=Math.max(0,_Z6-_07);const _G6=(attack[_p4]!==undefined)?attack[_p4]:attack[0];const _H6=(release[_p4]!==undefined)?release[_p4]:release[0];this._P6._K6(_G6);this._P6._L6(_H6);this._Q6=this._P6.process(_17,this._Q6);const _s4=(bypass[_p4]!==undefined)?bypass[_p4]:bypass[0];if(_s4>0)continue;const _o6=(ratio[_p4]!==undefined)?ratio[_p4]:ratio[0];const _27=(this._Q6/_o6)-this._Q6;
const _85=_37(_27);_U6=_U6.map(_Y6=>_Y6*=_85);const _47=(outgain[_p4]!==undefined)?outgain[_p4]:outgain[0];_U6=_U6.map(_Y6=>_Y6*=_47);output.forEach((_V6,_W6)=>{_V6[_p4]=_U6[_W6];});}return this._u4;}}function __6(_57){return 20*Math.log10(_57);}function _37(_57){return Math.pow(10,_57/20);}registerProcessor("compressor-processor",_M6);class _67 extends AudioWorkletProcessor{static get parameterDescriptors(){const _45=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,
minValue:0,maxValue:1},{name:"freq",automationRate:"a-rate",defaultValue:Math.min(500.0,_45),minValue:10.0,maxValue:_45},{name:"q",automationRate:"a-rate",defaultValue:1.0,minValue:1.0,maxValue:100.0},{name:"gain",automationRate:"a-rate",defaultValue:1e-2,minValue:1e-6}];}constructor(_94){super();this._a4();const _b4=_94.outputChannelCount[0];this._K4=0;this._L4=0;this._M4=0;this._N4=0;this._O4=0;this._P4=new Float32Array(_b4);this._Q4=new Float32Array(_b4);this._R4=new Float32Array(_b4);this._S4=new Float32Array(_b4);
this._55=-1;this._U4=-1;this._65=-1;}process(_l4,_m4,parameters){const input=_l4[0];const output=_m4[0];const bypass=parameters.bypass;const freq=parameters.freq;const q=parameters.q;const gain=parameters.gain;const _V4=(freq.length===1&&q.length===1&&gain.length===1);if(_V4)this._W4(freq[0],q[0],gain[0]);for(let _i4=0;_i4<input.length;++_i4){const _n4=input[_i4];const _o4=output[_i4];for(let _p4=0;_p4<_n4.length;++_p4){if(_V4===!1){const _75=(freq[_p4]!==undefined)?freq[_p4]:freq[0];const _X4=(q[_p4]!==undefined)?q[_p4]:q[0];
const _85=(gain[_p4]!==undefined)?gain[_p4]:gain[0];this._W4(_75,_X4,_85);}const _Y4=this._M4*_n4[_p4]+this._N4*this._P4[_i4]+this._O4*this._Q4[_i4]-this._K4*this._R4[_i4]-this._L4*this._S4[_i4];this._Q4[_i4]=this._P4[_i4];this._P4[_i4]=_n4[_p4];this._S4[_i4]=this._R4[_i4];this._R4[_i4]=_Y4;const _s4=(bypass[_p4]!==undefined)?bypass[_p4]:bypass[0];_o4[_p4]=(_s4>0)?_n4[_p4]:_Y4;}}return this._u4;}_W4(_95,__4,_a5){if(_95===this._55&&__4===this._U4&&_a5===this._65)return;const _05=2*Math.PI*_95/sampleRate;
const _15=Math.cos(_05);const _b5=Math.sqrt(_a5);const _h5=_b5+1;const _i5=_b5-1;const _j5=_h5*_15;const _k5=_i5*_15;const _l5=_h5-_k5;const _m5=_h5+_k5;const alpha=Math.sin(_05)/(2*__4);const _n5=(2*Math.sqrt(_b5)*alpha);const _25=_m5+_n5;const _K4=-2*(_i5+_j5);const _L4=_m5-_n5;const _M4=_b5*(_l5+_n5);const _N4=2*_b5*(_i5-_j5);const _O4=_b5*(_l5-_n5);this._K4=_K4/_25;this._L4=_L4/_25;this._M4=_M4/_25;this._N4=_N4/_25;this._O4=_O4/_25;this._55=_95;this._U4=__4;this._65=_a5;}}registerProcessor("lo-shelf-processor",
_67);