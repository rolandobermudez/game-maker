class _I3{constructor(_J3){this._K3=0;this._L3=0;this.feedback=0;this._M3=0;this.buffer=new Float32Array(_J3);this._N3=0;}process(_O3){const out=this.buffer[this._N3];this._M3=(this._M3*this._K3)+(out*this._L3);this.buffer[this._N3]=_O3+(this._M3*this.feedback);++this._N3;this._N3%=this.buffer.length;return out;}_P3(_Q3){this.feedback=Math.min(Math.max(0,_Q3),1);}_R3(_S3){this._K3=Math.min(Math.max(0,_S3),1);this._L3=1-this._K3;}}class _T3{constructor(_J3){this.feedback=0;this.buffer=new Float32Array(_J3);
this._N3=0;}process(_O3){const out=this.buffer[this._N3];this.buffer[this._N3]=_O3+(out*this.feedback);++this._N3;this._N3%=this.buffer.length;return(out-_O3);}_P3(_Q3){this.feedback=Math.min(Math.max(0,_Q3),1);}}class _U3 extends AudioWorkletProcessor{static _V3=8;static _W3=4;static _X3=0.015;static _Y3=0.4;static _Z3=0.28;static __3=0.7;static _04=[1116,1188,1277,1356,1422,1491,1557,1617];static _14=[1139,1211,1300,1379,1445,1514,1580,1640];static _24=[556,441,341,225];static _34=[579,464,364,248];static get parameterDescriptors(){
return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"size",automationRate:"a-rate",defaultValue:0.7,minValue:0.0,maxValue:1.0},{name:"damp",automationRate:"a-rate",defaultValue:0.1,minValue:0.0,maxValue:1.0},{name:"mix",automationRate:"a-rate",defaultValue:0.35,minValue:0.0,maxValue:1.0}];}constructor(_44){super();this._54();const _64=_44.outputChannelCount[0];this._74=-1;this._84=-1;this._94=new Array(_64);this._a4=new Array(_64);const _b4=[_U3._04,_U3._14];const _c4=[_U3._24,
_U3._34];for(let _d4=0;_d4<_64;++_d4){this._94[_d4]=new Array(_U3._V3);this._a4[_d4]=new Array(_U3._W3);for(let _e4=0;_e4<_U3._V3;++_e4)this._94[_d4][_e4]=new _I3(_b4[_d4%_b4.length][_e4]);for(let _e4=0;_e4<_U3._W3;++_e4)this._a4[_d4][_e4]=new _T3(_c4[_d4%_c4.length][_e4]);}this._f4(0.5);this._R3(0.5);for(let _d4=0;_d4<_64;++_d4)for(let _e4=0;_e4<_U3._W3;++_e4)this._a4[_d4][_e4]._P3(0.5);}process(_g4,_h4,parameters){const input=_g4[0];const output=_h4[0];const bypass=parameters.bypass;const size=parameters.size;
const damp=parameters.damp;const mix=parameters.mix;for(let _d4=0;_d4<input.length;++_d4){const _i4=input[_d4];const _j4=output[_d4];for(let _k4=0;_k4<_i4.length;++_k4){const _k4=(size[_k4]!==undefined)?size[_k4]:size[0];const _l4=(damp[_k4]!==undefined)?damp[_k4]:damp[0];this._f4(_k4);this._R3(_l4);_j4[_k4]=_i4[_k4];let out=0;const _m4=_i4[_k4]*_U3._X3;for(let _e4=0;_e4<_U3._V3;++_e4)out+=this._94[_d4][_e4].process(_m4);for(let _e4=0;_e4<_U3._W3;++_e4)out=this._a4[_d4][_e4].process(out);const _n4=(bypass[_k4]!==undefined)?bypass[_k4]:bypass[0];
if(_n4>0.0){continue;}const _o4=(mix[_k4]!==undefined)?mix[_k4]:mix[0];_j4[_k4]*=(1-_o4);_j4[_k4]+=(out*_o4);}}return this._p4;}_f4(_J3){if(_J3===this._74)return;const size=(_J3*_U3._Z3)+_U3.__3;for(let _d4=0;_d4<this._94.length;++_d4)for(let _e4=0;_e4<_U3._V3;++_e4)this._94[_d4][_e4]._P3(size);this._74=_J3;}_R3(_S3){if(_S3===this._84)return;const damp=_S3*_U3._Y3;for(let _d4=0;_d4<this._94.length;++_d4)for(let _e4=0;_e4<_U3._V3;++_e4)this._94[_d4][_e4]._R3(damp);this._84=_S3;}}registerProcessor("reverb1-processor",
_U3);class _q4 extends AudioWorkletProcessor{static get parameterDescriptors(){return [];}constructor(){super();this._54();}process(_r4,_s4,_t4){const input=_r4[0];const _u4=_s4[0];const _v4=_s4[1];for(let _d4=0;_d4<input.length;++_d4){const _i4=input[_d4];const _w4=_u4[_d4];const _x4=_v4[_d4];for(let _k4=0;_k4<_i4.length;++_k4){_w4[_k4]=_i4[_k4];_x4[_k4]=_i4[_k4];}}return this._p4;}}class _y4 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,
minValue:0,maxValue:1}];}constructor(){super();this._54();}process(_r4,_s4,_t4){const _z4=_r4[0];const _A4=_r4[1];const output=_s4[0];const bypass=_t4.bypass;for(let _d4=0;_d4<_A4.length;++_d4){const _B4=_z4[_d4];const _C4=_A4[_d4];const _j4=output[_d4];for(let _k4=0;_k4<_B4.length;++_k4){const _n4=(bypass[_k4]!==undefined)?bypass[_k4]:bypass[0];if(_n4>0){_j4[_k4]=_C4[_k4];}else {_j4[_k4]=_B4[_k4];}}}return this._p4;}}registerProcessor("eq-input",_q4);registerProcessor("eq-output",_y4);class _D4 extends AudioWorkletProcessor{
static get parameterDescriptors(){const _E4=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"cutoff",automationRate:"a-rate",defaultValue:Math.min(500.0,_E4),minValue:10.0,maxValue:_E4},{name:"q",automationRate:"a-rate",defaultValue:1.5,minValue:1.0,maxValue:100.0}];}constructor(_44){super();this._54();const _64=_44.outputChannelCount[0];this._F4=0;this._G4=0;this._H4=0;this._I4=0;this._J4=0;this._K4=new Float32Array(_64);this._L4=new Float32Array(_64);
this._M4=new Float32Array(_64);this._N4=new Float32Array(_64);this._O4=-1;this._P4=-1;}process(_g4,_h4,parameters){const input=_g4[0];const output=_h4[0];const bypass=parameters.bypass;const cutoff=parameters.cutoff;const q=parameters.q;const _Q4=(cutoff.length===1&&q.length===1);if(_Q4)this._R4(cutoff[0],q[0]);for(let _d4=0;_d4<input.length;++_d4){const _i4=input[_d4];const _j4=output[_d4];for(let _k4=0;_k4<_i4.length;++_k4){if(_Q4===!1){const _d4=(cutoff[_k4]!==undefined)?cutoff[_k4]:cutoff[0];const _S4=(q[_k4]!==undefined)?q[_k4]:q[0];
this._R4(_d4,_S4);}const _T4=this._H4*_i4[_k4]+this._I4*this._K4[_d4]+this._J4*this._L4[_d4]-this._F4*this._M4[_d4]-this._G4*this._N4[_d4];this._L4[_d4]=this._K4[_d4];this._K4[_d4]=_i4[_k4];this._N4[_d4]=this._M4[_d4];this._M4[_d4]=_T4;const _n4=(bypass[_k4]!==undefined)?bypass[_k4]:bypass[0];_j4[_k4]=(_n4>0)?_i4[_k4]:_T4;}}return this._p4;}_R4(_U4,_V4){if(_U4===this._O4&&_V4===this._P4)return;const _W4=2*Math.PI*_U4/sampleRate;const alpha=Math.sin(_W4)/(2*_V4);const _X4=Math.cos(_W4);const _Y4=1+alpha;
const _F4=-2*_X4;const _G4=1-alpha;const _H4=(1-_X4)/2;const _I4=1-_X4;const _J4=(1-_X4)/2;this._F4=_F4/_Y4;this._G4=_G4/_Y4;this._H4=_H4/_Y4;this._I4=_I4/_Y4;this._J4=_J4/_Y4;this._O4=_U4;this._P4=_V4;}}registerProcessor("lpf2-processor",_D4);class _Z4 extends AudioWorkletProcessor{static get parameterDescriptors(){const __4=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"freq",automationRate:"a-rate",defaultValue:Math.min(1500.0,
__4),minValue:10.0,maxValue:__4},{name:"q",automationRate:"a-rate",defaultValue:1.0,minValue:1.0,maxValue:100.0},{name:"gain",automationRate:"a-rate",defaultValue:1e-2,minValue:1e-6}];}constructor(_44){super();this._54();const _64=_44.outputChannelCount[0];this._F4=0;this._G4=0;this._H4=0;this._I4=0;this._J4=0;this._K4=new Float32Array(_64);this._L4=new Float32Array(_64);this._M4=new Float32Array(_64);this._N4=new Float32Array(_64);this._05=-1;this._P4=-1;this._15=-1;}process(_g4,_h4,parameters){const input=_g4[0];
const output=_h4[0];const bypass=parameters.bypass;const freq=parameters.freq;const q=parameters.q;const gain=parameters.gain;const _Q4=(freq.length===1&&q.length===1&&gain.length===1);if(_Q4)this._R4(freq[0],q[0],gain[0]);for(let _d4=0;_d4<input.length;++_d4){const _i4=input[_d4];const _j4=output[_d4];for(let _k4=0;_k4<_i4.length;++_k4){if(_Q4===!1){const _25=(freq[_k4]!==undefined)?freq[_k4]:freq[0];const _S4=(q[_k4]!==undefined)?q[_k4]:q[0];const _35=(gain[_k4]!==undefined)?gain[_k4]:gain[0];this._R4(_25,
_S4,_35);}const _T4=this._H4*_i4[_k4]+this._I4*this._K4[_d4]+this._J4*this._L4[_d4]-this._F4*this._M4[_d4]-this._G4*this._N4[_d4];this._L4[_d4]=this._K4[_d4];this._K4[_d4]=_i4[_k4];this._N4[_d4]=this._M4[_d4];this._M4[_d4]=_T4;const _n4=(bypass[_k4]!==undefined)?bypass[_k4]:bypass[0];_j4[_k4]=(_n4>0)?_i4[_k4]:_T4;}}return this._p4;}_R4(_45,_V4,_55){if(_45===this._05&&_V4===this._P4&&_55===this._15)return;const _W4=2*Math.PI*_45/sampleRate;const _X4=Math.cos(_W4);const _65=Math.sqrt(_55);const alpha=Math.sin(_W4)/(2*_V4);
const _75=alpha/_65;const _85=alpha*_65;const _Y4=1+_75;const _F4=-2*_X4;const _G4=1-_75;const _H4=1+_85;const _I4=_F4;const _J4=1-_85;this._F4=_F4/_Y4;this._G4=_G4/_Y4;this._H4=_H4/_Y4;this._I4=_I4/_Y4;this._J4=_J4/_Y4;this._05=_45;this._P4=_V4;this._15=_55;}}registerProcessor("peak-eq-processor",_Z4);class _95 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"gain",automationRate:"a-rate",defaultValue:0.5,
minValue:0.0}];}constructor(){super();this._54();}process(_g4,_h4,parameters){const input=_g4[0];const output=_h4[0];const bypass=parameters.bypass;const gain=parameters.gain;for(let _d4=0;_d4<input.length;++_d4){const _i4=input[_d4];const _j4=output[_d4];for(let _k4=0;_k4<_i4.length;++_k4){_j4[_k4]=_i4[_k4];const _n4=(bypass[_k4]!==undefined)?bypass[_k4]:bypass[0];if(_n4>0.0){continue;}const _35=(gain[_k4]!==undefined)?gain[_k4]:gain[0];_j4[_k4]*=_35;}}return this._p4;}}registerProcessor("gain-processor",
_95);class _a5 extends AudioWorkletProcessor{static get parameterDescriptors(){const _E4=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"cutoff",automationRate:"a-rate",defaultValue:Math.min(1500.0,_E4),minValue:10.0,maxValue:_E4},{name:"q",automationRate:"a-rate",defaultValue:1.5,minValue:1.0,maxValue:100.0}];}constructor(_44){super();this._54();const _64=_44.outputChannelCount[0];this._F4=0;this._G4=0;this._H4=0;this._I4=0;this._J4=0;
this._K4=new Float32Array(_64);this._L4=new Float32Array(_64);this._M4=new Float32Array(_64);this._N4=new Float32Array(_64);this._O4=-1;this._P4=-1;}process(_g4,_h4,parameters){const input=_g4[0];const output=_h4[0];const bypass=parameters.bypass;const cutoff=parameters.cutoff;const q=parameters.q;const _Q4=(cutoff.length===1&&q.length===1);if(_Q4)this._R4(cutoff[0],q[0]);for(let _d4=0;_d4<input.length;++_d4){const _i4=input[_d4];const _j4=output[_d4];for(let _k4=0;_k4<_i4.length;++_k4){if(_Q4===!1){const _d4=(cutoff[_k4]!==undefined)?cutoff[_k4]:cutoff[0];
const _S4=(q[_k4]!==undefined)?q[_k4]:q[0];this._R4(_d4,_S4);}const _T4=this._H4*_i4[_k4]+this._I4*this._K4[_d4]+this._J4*this._L4[_d4]-this._F4*this._M4[_d4]-this._G4*this._N4[_d4];this._L4[_d4]=this._K4[_d4];this._K4[_d4]=_i4[_k4];this._N4[_d4]=this._M4[_d4];this._M4[_d4]=_T4;const _n4=(bypass[_k4]!==undefined)?bypass[_k4]:bypass[0];_j4[_k4]=(_n4>0)?_i4[_k4]:_T4;}}return this._p4;}_R4(_U4,_V4){if(_U4===this._O4&&_V4===this._P4)return;const _W4=2*Math.PI*_U4/sampleRate;const alpha=Math.sin(_W4)/(2*_V4);
const _X4=Math.cos(_W4);const _Y4=1+alpha;const _F4=-2*_X4;const _G4=1-alpha;const _H4=(1+_X4)/2;const _I4=-1-_X4;const _J4=(1+_X4)/2;this._F4=_F4/_Y4;this._G4=_G4/_Y4;this._H4=_H4/_Y4;this._I4=_I4/_Y4;this._J4=_J4/_Y4;this._O4=_U4;this._P4=_V4;}}registerProcessor("hpf2-processor",_a5);class _b5 extends AudioWorkletProcessor{static get parameterDescriptors(){const __4=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"freq",automationRate:"a-rate",
defaultValue:Math.min(5000.0,__4),minValue:10.0,maxValue:__4},{name:"q",automationRate:"a-rate",defaultValue:1.0,minValue:1.0,maxValue:100.0},{name:"gain",automationRate:"a-rate",defaultValue:1e-2,minValue:1e-6}];}constructor(_44){super();this._54();const _64=_44.outputChannelCount[0];this._F4=0;this._G4=0;this._H4=0;this._I4=0;this._J4=0;this._K4=new Float32Array(_64);this._L4=new Float32Array(_64);this._M4=new Float32Array(_64);this._N4=new Float32Array(_64);this._05=-1;this._P4=-1;this._15=-1;}process(_g4,
_h4,parameters){const input=_g4[0];const output=_h4[0];const bypass=parameters.bypass;const freq=parameters.freq;const q=parameters.q;const gain=parameters.gain;const _Q4=(freq.length===1&&q.length===1&&gain.length===1);if(_Q4)this._R4(freq[0],q[0],gain[0]);for(let _d4=0;_d4<input.length;++_d4){const _i4=input[_d4];const _j4=output[_d4];for(let _k4=0;_k4<_i4.length;++_k4){if(_Q4===!1){const _25=(freq[_k4]!==undefined)?freq[_k4]:freq[0];const _S4=(q[_k4]!==undefined)?q[_k4]:q[0];const _35=(gain[_k4]!==undefined)?gain[_k4]:gain[0];
this._R4(_25,_S4,_35);}const _T4=this._H4*_i4[_k4]+this._I4*this._K4[_d4]+this._J4*this._L4[_d4]-this._F4*this._M4[_d4]-this._G4*this._N4[_d4];this._L4[_d4]=this._K4[_d4];this._K4[_d4]=_i4[_k4];this._N4[_d4]=this._M4[_d4];this._M4[_d4]=_T4;const _n4=(bypass[_k4]!==undefined)?bypass[_k4]:bypass[0];_j4[_k4]=(_n4>0)?_i4[_k4]:_T4;}}return this._p4;}_R4(_45,_V4,_55){if(_45===this._05&&_V4===this._P4&&_55===this._15)return;const _W4=2*Math.PI*_45/sampleRate;const _X4=Math.cos(_W4);const _65=Math.sqrt(_55);const _c5=_65+1;
const _d5=_65-1;const _e5=_c5*_X4;const _f5=_d5*_X4;const _g5=_c5-_f5;const _h5=_c5+_f5;const alpha=Math.sin(_W4)/(2*_V4);const _i5=(2*Math.sqrt(_65)*alpha);const _Y4=_g5+_i5;const _F4=2*(_d5-_e5);const _G4=_g5-_i5;const _H4=_65*(_h5+_i5);const _I4=-2*_65*(_d5+_e5);const _J4=_65*(_h5-_i5);this._F4=_F4/_Y4;this._G4=_G4/_Y4;this._H4=_H4/_Y4;this._I4=_I4/_Y4;this._J4=_J4/_Y4;this._05=_45;this._P4=_V4;this._15=_55;}}registerProcessor("hi-shelf-processor",_b5);function _j5(){}_j5._k5={_l5:0,_m5:1,_n5:2,_o5:3,_p5:4,
_q5:5};_j5._r5=function(_s5){return 1.0-_s5;};_j5._t5=function(_s5){return _s5;};_j5._u5=function(_s5){return 0.5*(Math.sin((_s5*2.0*Math.PI)-(Math.PI/2.0))+1.0);};_j5._v5=function(_s5){if(_s5<0.5){return 0.0;}return 1.0;};_j5._w5=function(_s5){if(_s5<0.5){return 2.0*_s5;}return 2.0-(2.0*_s5);};_j5._x5=[_j5._r5,_j5._t5,_j5._u5,_j5._v5,_j5._w5];_y5._z5=512;_y5._A5=1.0/_y5._z5;function _y5(_B5){this.data=new Float32Array(_y5._z5);for(let _e4=0;_e4<_y5._z5;++_e4){this.data[_e4]=_B5(_e4*_y5._A5);}}_y5.prototype._C5=function(_s5){
_s5=Math.max(0.0,_s5);_s5=Math.min(_s5,1.0);const _D5=_s5*_y5._z5;const _E5=~~_D5;const _F5=_D5-_E5;let _G5=_E5;let _H5=_G5+1;if(_G5>=_y5._z5){_G5-=_y5._z5;}if(_H5>=_y5._z5){_H5-=_y5._z5;}const _I5=this.data[_G5];const _J5=this.data[_H5];return _I5+(_J5-_I5)*_F5;};;_K5._L5=[];_K5._M5=!1;_K5._N5=0.0;_K5.__4=20.0;function _K5(){this._O5=48000;this.shape=_j5._k5._n5;this.freq=1.0;this._P5=0.0;this._A5=0.0;this._Q5=0.0;if(_K5._M5==true){return;}for(let _e4=0;_e4<_j5._k5._q5;++_e4){_K5._L5[_e4]=new _y5(_j5._x5[_e4]);
}_K5._M5=true;}_K5._R5=function(){return(_K5._M5==!0);};_K5.prototype._S5=function(_T5){this._O5=_T5;this._U5();};;_K5.prototype._V5=function(_45){_45=Math.max(_K5._N5,_45);_45=Math.min(_45,_K5.__4);this.freq=_45;this._U5();};;_K5.prototype._W5=function(_X5){_X5=Math.max(0.0,_X5);_X5=Math.min(_X5,1.0);const _Y5=_X5-this._Q5;this._Q5=_X5;this._P5+=_Y5;while(this._P5>=1.0){this._P5-=1.0;}while(this._P5<0.0){this._P5+=1.0;}};;_K5.prototype._Z5=function(__5){__5=Math.max(0,__5);__5=Math.min(__5,_j5._k5._q5-1);
this.shape=__5;};;_K5.prototype._C5=function(){const _06=_K5._L5[this.shape]._C5(this._P5);this._P5+=this._A5;while(this._P5>=1.0){this._P5-=1.0;}return _06;};;_K5.prototype._U5=function(){this._A5=this.freq/this._O5;};;class _16 extends AudioWorkletProcessor{static _26=5.0;static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"time",automationRate:"a-rate",defaultValue:0.2,minValue:0.0,maxValue:_16._26},{name:"feedback",automationRate:"a-rate",
defaultValue:0.5,minValue:0.0,maxValue:1.0},{name:"mix",automationRate:"a-rate",defaultValue:0.35,minValue:0.0,maxValue:1.0}];}constructor(_44){super();this._54();const _64=_44.outputChannelCount[0];const _36=(_16._26*sampleRate)+1;this.buffer=new Array(_64);this._46=new Uint32Array(_64);for(let _d4=0;_d4<_64;++_d4)this.buffer[_d4]=new Float32Array(_36);}process(_g4,_h4,parameters){const input=_g4[0];const output=_h4[0];const bypass=parameters.bypass;const time=parameters.time;const feedback=parameters.feedback;
const mix=parameters.mix;for(let _d4=0;_d4<input.length;++_d4){const _i4=input[_d4];const _j4=output[_d4];for(let _k4=0;_k4<_i4.length;++_k4){_j4[_k4]=_i4[_k4];const _56=(time[_k4]!==undefined)?time[_k4]:time[0];const _66=this._C5(_d4,_56);const _25=(feedback[_k4]!==undefined)?feedback[_k4]:feedback[0];const _76=_i4[_k4]+(_66*_25);this.write(_d4,_76);const _n4=(bypass[_k4]!==undefined)?bypass[_k4]:bypass[0];if(_n4>0.0){continue;}const _o4=(mix[_k4]!==undefined)?mix[_k4]:mix[0];_j4[_k4]*=(1-_o4);_j4[_k4]+=(_66*_o4);
}}return this._p4;}_C5(_86,_96){const _a6=_96*sampleRate;let _G5=(this._46[_86]-~~_a6);let _H5=(_G5-1);while(_G5<0)_G5+=this.buffer[_86].length;while(_H5<0)_H5+=this.buffer[_86].length;const _b6=_a6-~~_a6;const _I5=this.buffer[_86][_G5];const _J5=this.buffer[_86][_H5];return _I5+(_J5-_I5)*_b6;}write(_86,_O3){++this._46[_86];this._46[_86]%=this.buffer[_86].length;this.buffer[_86][this._46[_86]]=_O3;}}registerProcessor("delay-processor",_16);AudioWorkletProcessor.prototype._54=function(){this._p4=true;this.port.onmessage=(_c6)=>{
if(_c6.data==="kill")this._p4=false;};};;class _d6 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1}];}constructor(){super();this._54();}process(_g4,_h4,parameters){const input=_g4[0];const bypass=parameters.bypass;for(let _d4=0;_d4<input.length;++_d4){const _i4=input[_d4];for(let _k4=0;_k4<_i4.length;++_k4){const _n4=(bypass[_k4]!==undefined)?bypass[_k4]:bypass[0];_h4[_n4][_d4][_k4]=_i4[_k4];}}return this._p4;
}}class _e6 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"gain",automationRate:"a-rate",defaultValue:1,minValue:0}];}constructor(){super();this._54();}process(_g4,_h4,parameters){const _z4=_g4[0];const _A4=_g4[1];const output=_h4[0];const gain=parameters.gain;for(let _d4=0;_d4<_A4.length;++_d4){const _i4=_A4[_d4];const _j4=output[_d4];for(let _k4=0;_k4<_i4.length;++_k4)_j4[_k4]=_i4[_k4];}for(let _d4=0;_d4<_z4.length;++_d4){const _i4=_z4[_d4];const _j4=output[_d4];for(let _k4=0;_k4<_i4.length;
++_k4){const _35=(gain[_k4]!==undefined)?gain[_k4]:gain[0];_j4[_k4]+=_i4[_k4]*_35;}}return this._p4;}}registerProcessor("audio-bus-input",_d6);registerProcessor("audio-bus-output",_e6);class _f6 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"gain",automationRate:"a-rate",defaultValue:1.0,minValue:0.0},{name:"factor",automationRate:"a-rate",defaultValue:20,minValue:1,maxValue:100},{name:"resolution",
automationRate:"a-rate",defaultValue:8,minValue:2,maxValue:16},{name:"mix",automationRate:"a-rate",defaultValue:0.8,minValue:0.0,maxValue:1.0}];}static _g6=[undefined,undefined,2,4,8,16,32,64,128,256,512,1024,2048,4096,8192,16384,32768];constructor(_44){super();this._54();const _64=_44.outputChannelCount[0];this._h6=new Float32Array(_64);this._i6=new Uint32Array(_64);}process(_g4,_h4,parameters){const input=_g4[0];const output=_h4[0];const bypass=parameters.bypass;const gain=parameters.gain;const factor=parameters.factor;
const resolution=parameters.resolution;const mix=parameters.mix;for(let _d4=0;_d4<input.length;++_d4){const _i4=input[_d4];const _j4=output[_d4];for(let _k4=0;_k4<_i4.length;++_k4){_j4[_k4]=_i4[_k4];if(this._i6[_d4]===0)this._h6[_d4]=_i4[_k4];const _25=(factor[_k4]!==undefined)?factor[_k4]:factor[0];++this._i6[_d4];this._i6[_d4]%=_25;const _n4=(bypass[_k4]!==undefined)?bypass[_k4]:bypass[0];if(_n4>0.0){continue;}let _m4=this._h6[_d4];const _35=(gain[_k4]!==undefined)?gain[_k4]:gain[0];_m4*=_35;_m4=Math.max(Math.min(_m4,
1.0),-1.0);const _j6=(resolution[_k4]!==undefined)?resolution[_k4]:resolution[0];const max=(_m4>0.0)?_f6._g6[_j6]-1:_f6._g6[_j6];_m4=Math.round(_m4*max)/max;const _o4=(mix[_k4]!==undefined)?mix[_k4]:mix[0];_j4[_k4]*=(1.0-_o4);_j4[_k4]+=(_m4*_o4);}}return this._p4;}}registerProcessor("bitcrusher-processor",_f6);class _k6 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"rate",automationRate:"a-rate",defaultValue:5.0,
minValue:0.0,maxValue:20.0},{name:"intensity",automationRate:"a-rate",defaultValue:1.0,minValue:0.0,maxValue:1.0},{name:"offset",automationRate:"a-rate",defaultValue:0.0,minValue:0.0,maxValue:1.0},{name:"shape",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:4}];}constructor(_44){super();this._54();const _64=_44.outputChannelCount[0];this._l6=new Array(_64).fill(1.0);this._m6=new Array(_64).fill(0.0);this._n6=new Array(_64).fill(_j5._k5._l5);this._o6=new Array(_64);for(let _d4=0;_d4<_64;++_d4){
this._o6[_d4]=new _K5();this._o6[_d4]._S5(sampleRate);this._o6[_d4]._V5(this._l6[_d4]);this._o6[_d4]._Z5(this._n6[_d4]);if(_d4%2===1){this._o6[_d4]._W5(this._m6[_d4]);}}}process(_g4,_h4,parameters){const input=_g4[0];const output=_h4[0];const bypass=parameters.bypass;const rate=parameters.rate;const intensity=parameters.intensity;const offset=parameters.offset;const shape=parameters.shape;for(let _d4=0;_d4<input.length;++_d4){const _i4=input[_d4];const _j4=output[_d4];for(let _k4=0;_k4<_i4.length;++_k4){_j4[_k4]=_i4[_k4];
const _j6=(rate[_k4]!==undefined)?rate[_k4]:rate[0];const _p6=(offset[_k4]!==undefined)?offset[_k4]:offset[0];const _q6=(shape[_k4]!==undefined)?shape[_k4]:shape[0];this._r6(_d4,_j6,_p6,_q6);const _s6=this._o6[_d4]._C5();const _n4=(bypass[_k4]!==undefined)?bypass[_k4]:bypass[0];if(_n4>0.0){continue;}const _e4=(intensity[_k4]!==undefined)?intensity[_k4]:intensity[0];const out=_i4[_k4]*_s6*_e4;_j4[_k4]*=(1.0-_e4);_j4[_k4]+=out;}}return this._p4;}_r6(_86,_t6,_X5,__5){if(_t6!==this._l6[_86]){this._o6[_86]._V5(_t6);
this._l6[_86]=_t6;}if(_X5!==this._m6[_86]){if(_86%2===1){this._o6[_86]._W5(_X5);}this._m6[_86]=_X5;}if(__5!==this._n6[_86]){this._o6[_86]._Z5(__5);this._n6[_86]=__5;}}}registerProcessor("tremolo-processor",_k6);class _u6{constructor(_96=1e-3){this.setTime(_96);}setTime(_96){this._v6=Math.exp(-1/(_96*sampleRate));}process(_w6,_x6){return _w6+this._v6*(_x6-_w6);}}class _y6{constructor(_z6,_A6){this._B6=new _u6(_z6);this._C6=new _u6(_A6);this._D6=_z6;this._E6=_A6;}_F6(_96){if(_96===this._D6)return;this._B6.setTime(_96);
this._D6=_96;}_G6(_96){if(_96===this._E6)return;this._C6.setTime(_96);this._E6=_96;}process(_w6,_x6){if(_w6>_x6)return this._B6.process(_w6,_x6);else return this._C6.process(_w6,_x6);}}class _H6 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"ingain",automationRate:"a-rate",defaultValue:1,minValue:0},{name:"threshold",automationRate:"a-rate",defaultValue:0.125,minValue:1e-3,maxValue:1},{name:"ratio",
automationRate:"a-rate",defaultValue:4,minValue:1},{name:"attack",automationRate:"a-rate",defaultValue:0.05,minValue:1e-3,maxValue:1e-1},{name:"release",automationRate:"a-rate",defaultValue:0.25,minValue:1e-2,maxValue:1},{name:"outgain",automationRate:"a-rate",defaultValue:1,minValue:0}];}constructor(_I6){super();this._54();const _B6=_H6.parameterDescriptors.find(_J6=>_J6.name==="attack");const _C6=_H6.parameterDescriptors.find(_J6=>_J6.name==="release");this._K6=new _y6(_B6.defaultValue,_C6.defaultValue);
this._L6=0;}process(_M6,_N6,_O6){const input=_M6[0];const output=_N6[0];const bypass=_O6.bypass;const ingain=_O6.ingain;const outgain=_O6.outgain;const threshold=_O6.threshold;const ratio=_O6.ratio;const attack=_O6.attack;const release=_O6.release;if(input.length===0)return this._p4;for(let _k4=0;_k4<input[0].length;++_k4){let _P6=input.map(_Q6=>_Q6[_k4]);output.forEach((_Q6,_R6)=>{_Q6[_k4]=_P6[_R6];});const _S6=(ingain[_k4]!==undefined)?ingain[_k4]:ingain[0];_P6=_P6.map(_T6=>_T6*=_S6);const rect=_P6.map(_T6=>Math.abs(_T6));
const max=Math.max(...rect);const _U6=_V6(max);const _56=(threshold[_k4]!==undefined)?threshold[_k4]:threshold[0];const _W6=_V6(_56);const _X6=Math.max(0,_U6-_W6);const _B6=(attack[_k4]!==undefined)?attack[_k4]:attack[0];const _C6=(release[_k4]!==undefined)?release[_k4]:release[0];this._K6._F6(_B6);this._K6._G6(_C6);this._L6=this._K6.process(_X6,this._L6);const _n4=(bypass[_k4]!==undefined)?bypass[_k4]:bypass[0];if(_n4>0)continue;const _j6=(ratio[_k4]!==undefined)?ratio[_k4]:ratio[0];const _Y6=(this._L6/_j6)-this._L6;
const _35=_Z6(_Y6);_P6=_P6.map(_T6=>_T6*=_35);const __6=(outgain[_k4]!==undefined)?outgain[_k4]:outgain[0];_P6=_P6.map(_T6=>_T6*=__6);output.forEach((_Q6,_R6)=>{_Q6[_k4]=_P6[_R6];});}return this._p4;}}function _V6(_07){return 20*Math.log10(_07);}function _Z6(_07){return Math.pow(10,_07/20);}registerProcessor("compressor-processor",_H6);class _17 extends AudioWorkletProcessor{static get parameterDescriptors(){const __4=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,
minValue:0,maxValue:1},{name:"freq",automationRate:"a-rate",defaultValue:Math.min(500.0,__4),minValue:10.0,maxValue:__4},{name:"q",automationRate:"a-rate",defaultValue:1.0,minValue:1.0,maxValue:100.0},{name:"gain",automationRate:"a-rate",defaultValue:1e-2,minValue:1e-6}];}constructor(_44){super();this._54();const _64=_44.outputChannelCount[0];this._F4=0;this._G4=0;this._H4=0;this._I4=0;this._J4=0;this._K4=new Float32Array(_64);this._L4=new Float32Array(_64);this._M4=new Float32Array(_64);this._N4=new Float32Array(_64);
this._05=-1;this._P4=-1;this._15=-1;}process(_g4,_h4,parameters){const input=_g4[0];const output=_h4[0];const bypass=parameters.bypass;const freq=parameters.freq;const q=parameters.q;const gain=parameters.gain;const _Q4=(freq.length===1&&q.length===1&&gain.length===1);if(_Q4)this._R4(freq[0],q[0],gain[0]);for(let _d4=0;_d4<input.length;++_d4){const _i4=input[_d4];const _j4=output[_d4];for(let _k4=0;_k4<_i4.length;++_k4){if(_Q4===!1){const _25=(freq[_k4]!==undefined)?freq[_k4]:freq[0];const _S4=(q[_k4]!==undefined)?q[_k4]:q[0];
const _35=(gain[_k4]!==undefined)?gain[_k4]:gain[0];this._R4(_25,_S4,_35);}const _T4=this._H4*_i4[_k4]+this._I4*this._K4[_d4]+this._J4*this._L4[_d4]-this._F4*this._M4[_d4]-this._G4*this._N4[_d4];this._L4[_d4]=this._K4[_d4];this._K4[_d4]=_i4[_k4];this._N4[_d4]=this._M4[_d4];this._M4[_d4]=_T4;const _n4=(bypass[_k4]!==undefined)?bypass[_k4]:bypass[0];_j4[_k4]=(_n4>0)?_i4[_k4]:_T4;}}return this._p4;}_R4(_45,_V4,_55){if(_45===this._05&&_V4===this._P4&&_55===this._15)return;const _W4=2*Math.PI*_45/sampleRate;
const _X4=Math.cos(_W4);const _65=Math.sqrt(_55);const _c5=_65+1;const _d5=_65-1;const _e5=_c5*_X4;const _f5=_d5*_X4;const _g5=_c5-_f5;const _h5=_c5+_f5;const alpha=Math.sin(_W4)/(2*_V4);const _i5=(2*Math.sqrt(_65)*alpha);const _Y4=_h5+_i5;const _F4=-2*(_d5+_e5);const _G4=_h5-_i5;const _H4=_65*(_g5+_i5);const _I4=2*_65*(_d5-_e5);const _J4=_65*(_g5-_i5);this._F4=_F4/_Y4;this._G4=_G4/_Y4;this._H4=_H4/_Y4;this._I4=_I4/_Y4;this._J4=_J4/_Y4;this._05=_45;this._P4=_V4;this._15=_55;}}registerProcessor("lo-shelf-processor",
_17);