class _g2{constructor(_h2){this._i2=0;this._j2=0;this.feedback=0;this._k2=0;this.buffer=new Float32Array(_h2);this._l2=0;}process(_m2){const out=this.buffer[this._l2];this._k2=(this._k2*this._i2)+(out*this._j2);this.buffer[this._l2]=_m2+(this._k2*this.feedback);++this._l2;this._l2%=this.buffer.length;return out;}_n2(_o2){this.feedback=Math.min(Math.max(0,_o2),1);}_p2(_q2){this._i2=Math.min(Math.max(0,_q2),1);this._j2=1-this._i2;}}class _r2{constructor(_h2){this.feedback=0;this.buffer=new Float32Array(_h2);
this._l2=0;}process(_m2){const out=this.buffer[this._l2];this.buffer[this._l2]=_m2+(out*this.feedback);++this._l2;this._l2%=this.buffer.length;return(out-_m2);}_n2(_o2){this.feedback=Math.min(Math.max(0,_o2),1);}}class _s2 extends AudioWorkletProcessor{static _t2=8;static _u2=4;static _v2=0.015;static _w2=0.4;static _x2=0.28;static _y2=0.7;static _z2=[1116,1188,1277,1356,1422,1491,1557,1617];static _A2=[1139,1211,1300,1379,1445,1514,1580,1640];static _B2=[556,441,341,225];static _C2=[579,464,364,248];static get parameterDescriptors(){
return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"size",automationRate:"a-rate",defaultValue:0.7,minValue:0.0,maxValue:1.0},{name:"damp",automationRate:"a-rate",defaultValue:0.1,minValue:0.0,maxValue:1.0},{name:"mix",automationRate:"a-rate",defaultValue:0.35,minValue:0.0,maxValue:1.0}];}constructor(_D2){super();this._E2();const _F2=_D2.outputChannelCount[0];this._G2=-1;this._H2=-1;this._I2=new Array(_F2);this._J2=new Array(_F2);const _K2=[_s2._z2,_s2._A2];const _L2=[_s2._B2,
_s2._C2];for(let _M2=0;_M2<_F2;++_M2){this._I2[_M2]=new Array(_s2._t2);this._J2[_M2]=new Array(_s2._u2);for(let _N2=0;_N2<_s2._t2;++_N2)this._I2[_M2][_N2]=new _g2(_K2[_M2%_K2.length][_N2]);for(let _N2=0;_N2<_s2._u2;++_N2)this._J2[_M2][_N2]=new _r2(_L2[_M2%_L2.length][_N2]);}this._O2(0.5);this._p2(0.5);for(let _M2=0;_M2<_F2;++_M2)for(let _N2=0;_N2<_s2._u2;++_N2)this._J2[_M2][_N2]._n2(0.5);}process(_P2,_Q2,parameters){const input=_P2[0];const output=_Q2[0];const bypass=parameters.bypass;const size=parameters.size;
const damp=parameters.damp;const mix=parameters.mix;for(let _M2=0;_M2<input.length;++_M2){const _R2=input[_M2];const _S2=output[_M2];for(let _T2=0;_T2<_R2.length;++_T2){const _T2=(size[_T2]!==undefined)?size[_T2]:size[0];const _U2=(damp[_T2]!==undefined)?damp[_T2]:damp[0];this._O2(_T2);this._p2(_U2);_S2[_T2]=_R2[_T2];let out=0;const _V2=_R2[_T2]*_s2._v2;for(let _N2=0;_N2<_s2._t2;++_N2)out+=this._I2[_M2][_N2].process(_V2);for(let _N2=0;_N2<_s2._u2;++_N2)out=this._J2[_M2][_N2].process(out);const _W2=(bypass[_T2]!==undefined)?bypass[_T2]:bypass[0];
if(_W2>0.0){continue;}const _X2=(mix[_T2]!==undefined)?mix[_T2]:mix[0];_S2[_T2]*=(1-_X2);_S2[_T2]+=(out*_X2);}}return this._Y2;}_O2(_h2){if(_h2===this._G2)return;const size=(_h2*_s2._x2)+_s2._y2;for(let _M2=0;_M2<this._I2.length;++_M2)for(let _N2=0;_N2<_s2._t2;++_N2)this._I2[_M2][_N2]._n2(size);this._G2=_h2;}_p2(_q2){if(_q2===this._H2)return;const damp=_q2*_s2._w2;for(let _M2=0;_M2<this._I2.length;++_M2)for(let _N2=0;_N2<_s2._t2;++_N2)this._I2[_M2][_N2]._p2(damp);this._H2=_q2;}}registerProcessor("reverb1-processor",
_s2);class _Z2 extends AudioWorkletProcessor{static get parameterDescriptors(){return [];}constructor(){super();this._E2();}process(__2,_03,_13){const input=__2[0];const _23=_03[0];const _33=_03[1];for(let _M2=0;_M2<input.length;++_M2){const _R2=input[_M2];const _43=_23[_M2];const _53=_33[_M2];for(let _T2=0;_T2<_R2.length;++_T2){_43[_T2]=_R2[_T2];_53[_T2]=_R2[_T2];}}return this._Y2;}}class _63 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,
minValue:0,maxValue:1}];}constructor(){super();this._E2();}process(__2,_03,_13){const _73=__2[0];const _83=__2[1];const output=_03[0];const bypass=_13.bypass;for(let _M2=0;_M2<_83.length;++_M2){const _93=_73[_M2];const _a3=_83[_M2];const _S2=output[_M2];for(let _T2=0;_T2<_93.length;++_T2){const _W2=(bypass[_T2]!==undefined)?bypass[_T2]:bypass[0];if(_W2>0){_S2[_T2]=_a3[_T2];}else {_S2[_T2]=_93[_T2];}}}return this._Y2;}}registerProcessor("eq-input",_Z2);registerProcessor("eq-output",_63);class _b3 extends AudioWorkletProcessor{
static get parameterDescriptors(){const _c3=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"cutoff",automationRate:"a-rate",defaultValue:Math.min(500.0,_c3),minValue:10.0,maxValue:_c3},{name:"q",automationRate:"a-rate",defaultValue:1.5,minValue:1.0,maxValue:100.0}];}constructor(_D2){super();this._E2();const _F2=_D2.outputChannelCount[0];this._d3=0;this._e3=0;this._f3=0;this._g3=0;this._h3=0;this._i3=new Float32Array(_F2);this._j3=new Float32Array(_F2);
this._k3=new Float32Array(_F2);this._l3=new Float32Array(_F2);this._m3=-1;this._n3=-1;}process(_P2,_Q2,parameters){const input=_P2[0];const output=_Q2[0];const bypass=parameters.bypass;const cutoff=parameters.cutoff;const q=parameters.q;const _o3=(cutoff.length===1&&q.length===1);if(_o3)this._p3(cutoff[0],q[0]);for(let _M2=0;_M2<input.length;++_M2){const _R2=input[_M2];const _S2=output[_M2];for(let _T2=0;_T2<_R2.length;++_T2){if(_o3===!1){const _M2=(cutoff[_T2]!==undefined)?cutoff[_T2]:cutoff[0];const _q3=(q[_T2]!==undefined)?q[_T2]:q[0];
this._p3(_M2,_q3);}const _r3=this._f3*_R2[_T2]+this._g3*this._i3[_M2]+this._h3*this._j3[_M2]-this._d3*this._k3[_M2]-this._e3*this._l3[_M2];this._j3[_M2]=this._i3[_M2];this._i3[_M2]=_R2[_T2];this._l3[_M2]=this._k3[_M2];this._k3[_M2]=_r3;const _W2=(bypass[_T2]!==undefined)?bypass[_T2]:bypass[0];_S2[_T2]=(_W2>0)?_R2[_T2]:_r3;}}return this._Y2;}_p3(_s3,_t3){if(_s3===this._m3&&_t3===this._n3)return;const _u3=2*Math.PI*_s3/sampleRate;const alpha=Math.sin(_u3)/(2*_t3);const _v3=Math.cos(_u3);const _w3=1+alpha;
const _d3=-2*_v3;const _e3=1-alpha;const _f3=(1-_v3)/2;const _g3=1-_v3;const _h3=(1-_v3)/2;this._d3=_d3/_w3;this._e3=_e3/_w3;this._f3=_f3/_w3;this._g3=_g3/_w3;this._h3=_h3/_w3;this._m3=_s3;this._n3=_t3;}}registerProcessor("lpf2-processor",_b3);class _x3 extends AudioWorkletProcessor{static get parameterDescriptors(){const _y3=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"freq",automationRate:"a-rate",defaultValue:Math.min(1500.0,
_y3),minValue:10.0,maxValue:_y3},{name:"q",automationRate:"a-rate",defaultValue:1.0,minValue:1.0,maxValue:100.0},{name:"gain",automationRate:"a-rate",defaultValue:1e-2,minValue:1e-6}];}constructor(_D2){super();this._E2();const _F2=_D2.outputChannelCount[0];this._d3=0;this._e3=0;this._f3=0;this._g3=0;this._h3=0;this._i3=new Float32Array(_F2);this._j3=new Float32Array(_F2);this._k3=new Float32Array(_F2);this._l3=new Float32Array(_F2);this._z3=-1;this._n3=-1;this._A3=-1;}process(_P2,_Q2,parameters){const input=_P2[0];
const output=_Q2[0];const bypass=parameters.bypass;const freq=parameters.freq;const q=parameters.q;const gain=parameters.gain;const _o3=(freq.length===1&&q.length===1&&gain.length===1);if(_o3)this._p3(freq[0],q[0],gain[0]);for(let _M2=0;_M2<input.length;++_M2){const _R2=input[_M2];const _S2=output[_M2];for(let _T2=0;_T2<_R2.length;++_T2){if(_o3===!1){const _B3=(freq[_T2]!==undefined)?freq[_T2]:freq[0];const _q3=(q[_T2]!==undefined)?q[_T2]:q[0];const _C3=(gain[_T2]!==undefined)?gain[_T2]:gain[0];this._p3(_B3,
_q3,_C3);}const _r3=this._f3*_R2[_T2]+this._g3*this._i3[_M2]+this._h3*this._j3[_M2]-this._d3*this._k3[_M2]-this._e3*this._l3[_M2];this._j3[_M2]=this._i3[_M2];this._i3[_M2]=_R2[_T2];this._l3[_M2]=this._k3[_M2];this._k3[_M2]=_r3;const _W2=(bypass[_T2]!==undefined)?bypass[_T2]:bypass[0];_S2[_T2]=(_W2>0)?_R2[_T2]:_r3;}}return this._Y2;}_p3(_D3,_t3,_E3){if(_D3===this._z3&&_t3===this._n3&&_E3===this._A3)return;const _u3=2*Math.PI*_D3/sampleRate;const _v3=Math.cos(_u3);const _F3=Math.sqrt(_E3);const alpha=Math.sin(_u3)/(2*_t3);
const _G3=alpha/_F3;const _H3=alpha*_F3;const _w3=1+_G3;const _d3=-2*_v3;const _e3=1-_G3;const _f3=1+_H3;const _g3=_d3;const _h3=1-_H3;this._d3=_d3/_w3;this._e3=_e3/_w3;this._f3=_f3/_w3;this._g3=_g3/_w3;this._h3=_h3/_w3;this._z3=_D3;this._n3=_t3;this._A3=_E3;}}registerProcessor("peak-eq-processor",_x3);class _I3 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"gain",automationRate:"a-rate",defaultValue:0.5,
minValue:0.0}];}constructor(){super();this._E2();}process(_P2,_Q2,parameters){const input=_P2[0];const output=_Q2[0];const bypass=parameters.bypass;const gain=parameters.gain;for(let _M2=0;_M2<input.length;++_M2){const _R2=input[_M2];const _S2=output[_M2];for(let _T2=0;_T2<_R2.length;++_T2){_S2[_T2]=_R2[_T2];const _W2=(bypass[_T2]!==undefined)?bypass[_T2]:bypass[0];if(_W2>0.0){continue;}const _C3=(gain[_T2]!==undefined)?gain[_T2]:gain[0];_S2[_T2]*=_C3;}}return this._Y2;}}registerProcessor("gain-processor",
_I3);class _J3 extends AudioWorkletProcessor{static get parameterDescriptors(){const _c3=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"cutoff",automationRate:"a-rate",defaultValue:Math.min(1500.0,_c3),minValue:10.0,maxValue:_c3},{name:"q",automationRate:"a-rate",defaultValue:1.5,minValue:1.0,maxValue:100.0}];}constructor(_D2){super();this._E2();const _F2=_D2.outputChannelCount[0];this._d3=0;this._e3=0;this._f3=0;this._g3=0;this._h3=0;
this._i3=new Float32Array(_F2);this._j3=new Float32Array(_F2);this._k3=new Float32Array(_F2);this._l3=new Float32Array(_F2);this._m3=-1;this._n3=-1;}process(_P2,_Q2,parameters){const input=_P2[0];const output=_Q2[0];const bypass=parameters.bypass;const cutoff=parameters.cutoff;const q=parameters.q;const _o3=(cutoff.length===1&&q.length===1);if(_o3)this._p3(cutoff[0],q[0]);for(let _M2=0;_M2<input.length;++_M2){const _R2=input[_M2];const _S2=output[_M2];for(let _T2=0;_T2<_R2.length;++_T2){if(_o3===!1){const _M2=(cutoff[_T2]!==undefined)?cutoff[_T2]:cutoff[0];
const _q3=(q[_T2]!==undefined)?q[_T2]:q[0];this._p3(_M2,_q3);}const _r3=this._f3*_R2[_T2]+this._g3*this._i3[_M2]+this._h3*this._j3[_M2]-this._d3*this._k3[_M2]-this._e3*this._l3[_M2];this._j3[_M2]=this._i3[_M2];this._i3[_M2]=_R2[_T2];this._l3[_M2]=this._k3[_M2];this._k3[_M2]=_r3;const _W2=(bypass[_T2]!==undefined)?bypass[_T2]:bypass[0];_S2[_T2]=(_W2>0)?_R2[_T2]:_r3;}}return this._Y2;}_p3(_s3,_t3){if(_s3===this._m3&&_t3===this._n3)return;const _u3=2*Math.PI*_s3/sampleRate;const alpha=Math.sin(_u3)/(2*_t3);
const _v3=Math.cos(_u3);const _w3=1+alpha;const _d3=-2*_v3;const _e3=1-alpha;const _f3=(1+_v3)/2;const _g3=-1-_v3;const _h3=(1+_v3)/2;this._d3=_d3/_w3;this._e3=_e3/_w3;this._f3=_f3/_w3;this._g3=_g3/_w3;this._h3=_h3/_w3;this._m3=_s3;this._n3=_t3;}}registerProcessor("hpf2-processor",_J3);class _K3 extends AudioWorkletProcessor{static get parameterDescriptors(){const _y3=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"freq",automationRate:"a-rate",
defaultValue:Math.min(5000.0,_y3),minValue:10.0,maxValue:_y3},{name:"q",automationRate:"a-rate",defaultValue:1.0,minValue:1.0,maxValue:100.0},{name:"gain",automationRate:"a-rate",defaultValue:1e-2,minValue:1e-6}];}constructor(_D2){super();this._E2();const _F2=_D2.outputChannelCount[0];this._d3=0;this._e3=0;this._f3=0;this._g3=0;this._h3=0;this._i3=new Float32Array(_F2);this._j3=new Float32Array(_F2);this._k3=new Float32Array(_F2);this._l3=new Float32Array(_F2);this._z3=-1;this._n3=-1;this._A3=-1;}process(_P2,
_Q2,parameters){const input=_P2[0];const output=_Q2[0];const bypass=parameters.bypass;const freq=parameters.freq;const q=parameters.q;const gain=parameters.gain;const _o3=(freq.length===1&&q.length===1&&gain.length===1);if(_o3)this._p3(freq[0],q[0],gain[0]);for(let _M2=0;_M2<input.length;++_M2){const _R2=input[_M2];const _S2=output[_M2];for(let _T2=0;_T2<_R2.length;++_T2){if(_o3===!1){const _B3=(freq[_T2]!==undefined)?freq[_T2]:freq[0];const _q3=(q[_T2]!==undefined)?q[_T2]:q[0];const _C3=(gain[_T2]!==undefined)?gain[_T2]:gain[0];
this._p3(_B3,_q3,_C3);}const _r3=this._f3*_R2[_T2]+this._g3*this._i3[_M2]+this._h3*this._j3[_M2]-this._d3*this._k3[_M2]-this._e3*this._l3[_M2];this._j3[_M2]=this._i3[_M2];this._i3[_M2]=_R2[_T2];this._l3[_M2]=this._k3[_M2];this._k3[_M2]=_r3;const _W2=(bypass[_T2]!==undefined)?bypass[_T2]:bypass[0];_S2[_T2]=(_W2>0)?_R2[_T2]:_r3;}}return this._Y2;}_p3(_D3,_t3,_E3){if(_D3===this._z3&&_t3===this._n3&&_E3===this._A3)return;const _u3=2*Math.PI*_D3/sampleRate;const _v3=Math.cos(_u3);const _F3=Math.sqrt(_E3);const _L3=_F3+1;
const _M3=_F3-1;const _N3=_L3*_v3;const _O3=_M3*_v3;const _P3=_L3-_O3;const _Q3=_L3+_O3;const alpha=Math.sin(_u3)/(2*_t3);const _R3=(2*Math.sqrt(_F3)*alpha);const _w3=_P3+_R3;const _d3=2*(_M3-_N3);const _e3=_P3-_R3;const _f3=_F3*(_Q3+_R3);const _g3=-2*_F3*(_M3+_N3);const _h3=_F3*(_Q3-_R3);this._d3=_d3/_w3;this._e3=_e3/_w3;this._f3=_f3/_w3;this._g3=_g3/_w3;this._h3=_h3/_w3;this._z3=_D3;this._n3=_t3;this._A3=_E3;}}registerProcessor("hi-shelf-processor",_K3);function _S3(){}_S3._T3={_U3:0,_V3:1,_W3:2,_X3:3,_Y3:4,
_Z3:5};_S3.__3=function(_04){return 1.0-_04;};_S3._14=function(_04){return _04;};_S3._24=function(_04){return 0.5*(Math.sin((_04*2.0*Math.PI)-(Math.PI/2.0))+1.0);};_S3._34=function(_04){if(_04<0.5){return 0.0;}return 1.0;};_S3._44=function(_04){if(_04<0.5){return 2.0*_04;}return 2.0-(2.0*_04);};_S3._54=[_S3.__3,_S3._14,_S3._24,_S3._34,_S3._44];_64._74=512;_64._84=1.0/_64._74;function _64(_94){this.data=new Float32Array(_64._74);for(let _N2=0;_N2<_64._74;++_N2){this.data[_N2]=_94(_N2*_64._84);}}_64.prototype._a4=function(_04){
_04=Math.max(0.0,_04);_04=Math.min(_04,1.0);const _b4=_04*_64._74;const _c4=~~_b4;const _d4=_b4-_c4;let _e4=_c4;let _f4=_e4+1;if(_e4>=_64._74){_e4-=_64._74;}if(_f4>=_64._74){_f4-=_64._74;}const _g4=this.data[_e4];const _h4=this.data[_f4];return _g4+(_h4-_g4)*_d4;};;_i4._j4=[];_i4._k4=!1;_i4._l4=0.0;_i4._y3=20.0;function _i4(){this._m4=48000;this.shape=_S3._T3._W3;this.freq=1.0;this._n4=0.0;this._84=0.0;this._o4=0.0;if(_i4._k4==true){return;}for(let _N2=0;_N2<_S3._T3._Z3;++_N2){_i4._j4[_N2]=new _64(_S3._54[_N2]);
}_i4._k4=true;}_i4._p4=function(){return(_i4._k4==!0);};_i4.prototype._q4=function(_r4){this._m4=_r4;this._s4();};;_i4.prototype._t4=function(_D3){_D3=Math.max(_i4._l4,_D3);_D3=Math.min(_D3,_i4._y3);this.freq=_D3;this._s4();};;_i4.prototype._u4=function(_v4){_v4=Math.max(0.0,_v4);_v4=Math.min(_v4,1.0);const _w4=_v4-this._o4;this._o4=_v4;this._n4+=_w4;while(this._n4>=1.0){this._n4-=1.0;}while(this._n4<0.0){this._n4+=1.0;}};;_i4.prototype._x4=function(_y4){_y4=Math.max(0,_y4);_y4=Math.min(_y4,_S3._T3._Z3-1);
this.shape=_y4;};;_i4.prototype._a4=function(){const _z4=_i4._j4[this.shape]._a4(this._n4);this._n4+=this._84;while(this._n4>=1.0){this._n4-=1.0;}return _z4;};;_i4.prototype._s4=function(){this._84=this.freq/this._m4;};;class _A4 extends AudioWorkletProcessor{static _B4=5.0;static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"time",automationRate:"a-rate",defaultValue:0.2,minValue:0.0,maxValue:_A4._B4},{name:"feedback",automationRate:"a-rate",
defaultValue:0.5,minValue:0.0,maxValue:1.0},{name:"mix",automationRate:"a-rate",defaultValue:0.35,minValue:0.0,maxValue:1.0}];}constructor(_D2){super();this._E2();const _F2=_D2.outputChannelCount[0];const _C4=(_A4._B4*sampleRate)+1;this.buffer=new Array(_F2);this._D4=new Uint32Array(_F2);for(let _M2=0;_M2<_F2;++_M2)this.buffer[_M2]=new Float32Array(_C4);}process(_P2,_Q2,parameters){const input=_P2[0];const output=_Q2[0];const bypass=parameters.bypass;const time=parameters.time;const feedback=parameters.feedback;
const mix=parameters.mix;for(let _M2=0;_M2<input.length;++_M2){const _R2=input[_M2];const _S2=output[_M2];for(let _T2=0;_T2<_R2.length;++_T2){_S2[_T2]=_R2[_T2];const _E4=(time[_T2]!==undefined)?time[_T2]:time[0];const _F4=this._a4(_M2,_E4);const _B3=(feedback[_T2]!==undefined)?feedback[_T2]:feedback[0];const _G4=_R2[_T2]+(_F4*_B3);this.write(_M2,_G4);const _W2=(bypass[_T2]!==undefined)?bypass[_T2]:bypass[0];if(_W2>0.0){continue;}const _X2=(mix[_T2]!==undefined)?mix[_T2]:mix[0];_S2[_T2]*=(1-_X2);_S2[_T2]+=(_F4*_X2);
}}return this._Y2;}_a4(_H4,_I4){const _J4=_I4*sampleRate;let _e4=(this._D4[_H4]-~~_J4);let _f4=(_e4-1);while(_e4<0)_e4+=this.buffer[_H4].length;while(_f4<0)_f4+=this.buffer[_H4].length;const _K4=_J4-~~_J4;const _g4=this.buffer[_H4][_e4];const _h4=this.buffer[_H4][_f4];return _g4+(_h4-_g4)*_K4;}write(_H4,_m2){++this._D4[_H4];this._D4[_H4]%=this.buffer[_H4].length;this.buffer[_H4][this._D4[_H4]]=_m2;}}registerProcessor("delay-processor",_A4);AudioWorkletProcessor.prototype._E2=function(){this._Y2=true;this.port.onmessage=(_L4)=>{
if(_L4.data==="kill")this._Y2=false;};};;class _M4 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1}];}constructor(){super();this._E2();}process(_P2,_Q2,parameters){const input=_P2[0];const bypass=parameters.bypass;for(let _M2=0;_M2<input.length;++_M2){const _R2=input[_M2];for(let _T2=0;_T2<_R2.length;++_T2){const _W2=(bypass[_T2]!==undefined)?bypass[_T2]:bypass[0];_Q2[_W2][_M2][_T2]=_R2[_T2];}}return this._Y2;
}}class _N4 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"gain",automationRate:"a-rate",defaultValue:1,minValue:0}];}constructor(){super();this._E2();}process(_P2,_Q2,parameters){const _73=_P2[0];const _83=_P2[1];const output=_Q2[0];const gain=parameters.gain;for(let _M2=0;_M2<_83.length;++_M2){const _R2=_83[_M2];const _S2=output[_M2];for(let _T2=0;_T2<_R2.length;++_T2)_S2[_T2]=_R2[_T2];}for(let _M2=0;_M2<_73.length;++_M2){const _R2=_73[_M2];const _S2=output[_M2];for(let _T2=0;_T2<_R2.length;
++_T2){const _C3=(gain[_T2]!==undefined)?gain[_T2]:gain[0];_S2[_T2]+=_R2[_T2]*_C3;}}return this._Y2;}}registerProcessor("audio-bus-input",_M4);registerProcessor("audio-bus-output",_N4);class _O4 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"gain",automationRate:"a-rate",defaultValue:1.0,minValue:0.0},{name:"factor",automationRate:"a-rate",defaultValue:20,minValue:1,maxValue:100},{name:"resolution",
automationRate:"a-rate",defaultValue:8,minValue:2,maxValue:16},{name:"mix",automationRate:"a-rate",defaultValue:0.8,minValue:0.0,maxValue:1.0}];}static _P4=[undefined,undefined,2,4,8,16,32,64,128,256,512,1024,2048,4096,8192,16384,32768];constructor(_D2){super();this._E2();const _F2=_D2.outputChannelCount[0];this._Q4=new Float32Array(_F2);this._R4=new Uint32Array(_F2);}process(_P2,_Q2,parameters){const input=_P2[0];const output=_Q2[0];const bypass=parameters.bypass;const gain=parameters.gain;const factor=parameters.factor;
const resolution=parameters.resolution;const mix=parameters.mix;for(let _M2=0;_M2<input.length;++_M2){const _R2=input[_M2];const _S2=output[_M2];for(let _T2=0;_T2<_R2.length;++_T2){_S2[_T2]=_R2[_T2];if(this._R4[_M2]===0)this._Q4[_M2]=_R2[_T2];const _B3=(factor[_T2]!==undefined)?factor[_T2]:factor[0];++this._R4[_M2];this._R4[_M2]%=_B3;const _W2=(bypass[_T2]!==undefined)?bypass[_T2]:bypass[0];if(_W2>0.0){continue;}let _V2=this._Q4[_M2];const _C3=(gain[_T2]!==undefined)?gain[_T2]:gain[0];_V2*=_C3;_V2=Math.max(Math.min(_V2,
1.0),-1.0);const _S4=(resolution[_T2]!==undefined)?resolution[_T2]:resolution[0];const max=(_V2>0.0)?_O4._P4[_S4]-1:_O4._P4[_S4];_V2=Math.round(_V2*max)/max;const _X2=(mix[_T2]!==undefined)?mix[_T2]:mix[0];_S2[_T2]*=(1.0-_X2);_S2[_T2]+=(_V2*_X2);}}return this._Y2;}}registerProcessor("bitcrusher-processor",_O4);class _T4 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"rate",automationRate:"a-rate",defaultValue:5.0,
minValue:0.0,maxValue:20.0},{name:"intensity",automationRate:"a-rate",defaultValue:1.0,minValue:0.0,maxValue:1.0},{name:"offset",automationRate:"a-rate",defaultValue:0.0,minValue:0.0,maxValue:1.0},{name:"shape",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:4}];}constructor(_D2){super();this._E2();const _F2=_D2.outputChannelCount[0];this._U4=new Array(_F2).fill(1.0);this._V4=new Array(_F2).fill(0.0);this._W4=new Array(_F2).fill(_S3._T3._U3);this._X4=new Array(_F2);for(let _M2=0;_M2<_F2;++_M2){
this._X4[_M2]=new _i4();this._X4[_M2]._q4(sampleRate);this._X4[_M2]._t4(this._U4[_M2]);this._X4[_M2]._x4(this._W4[_M2]);if(_M2%2===1){this._X4[_M2]._u4(this._V4[_M2]);}}}process(_P2,_Q2,parameters){const input=_P2[0];const output=_Q2[0];const bypass=parameters.bypass;const rate=parameters.rate;const intensity=parameters.intensity;const offset=parameters.offset;const shape=parameters.shape;for(let _M2=0;_M2<input.length;++_M2){const _R2=input[_M2];const _S2=output[_M2];for(let _T2=0;_T2<_R2.length;++_T2){_S2[_T2]=_R2[_T2];
const _S4=(rate[_T2]!==undefined)?rate[_T2]:rate[0];const _Y4=(offset[_T2]!==undefined)?offset[_T2]:offset[0];const _Z4=(shape[_T2]!==undefined)?shape[_T2]:shape[0];this.__4(_M2,_S4,_Y4,_Z4);const _05=this._X4[_M2]._a4();const _W2=(bypass[_T2]!==undefined)?bypass[_T2]:bypass[0];if(_W2>0.0){continue;}const _N2=(intensity[_T2]!==undefined)?intensity[_T2]:intensity[0];const out=_R2[_T2]*_05*_N2;_S2[_T2]*=(1.0-_N2);_S2[_T2]+=out;}}return this._Y2;}__4(_H4,_15,_v4,_y4){if(_15!==this._U4[_H4]){this._X4[_H4]._t4(_15);
this._U4[_H4]=_15;}if(_v4!==this._V4[_H4]){if(_H4%2===1){this._X4[_H4]._u4(_v4);}this._V4[_H4]=_v4;}if(_y4!==this._W4[_H4]){this._X4[_H4]._x4(_y4);this._W4[_H4]=_y4;}}}registerProcessor("tremolo-processor",_T4);class _25{constructor(_I4=1e-3){this.setTime(_I4);}setTime(_I4){this._35=Math.exp(-1/(_I4*sampleRate));}process(_45,_55){return _45+this._35*(_55-_45);}}class _65{constructor(_75,_85){this._95=new _25(_75);this._a5=new _25(_85);this._b5=_75;this._c5=_85;}_d5(_I4){if(_I4===this._b5)return;this._95.setTime(_I4);
this._b5=_I4;}_e5(_I4){if(_I4===this._c5)return;this._a5.setTime(_I4);this._c5=_I4;}process(_45,_55){if(_45>_55)return this._95.process(_45,_55);else return this._a5.process(_45,_55);}}class _f5 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"ingain",automationRate:"a-rate",defaultValue:1,minValue:0},{name:"threshold",automationRate:"a-rate",defaultValue:0.125,minValue:1e-3,maxValue:1},{name:"ratio",
automationRate:"a-rate",defaultValue:4,minValue:1},{name:"attack",automationRate:"a-rate",defaultValue:0.05,minValue:1e-3,maxValue:1e-1},{name:"release",automationRate:"a-rate",defaultValue:0.25,minValue:1e-2,maxValue:1},{name:"outgain",automationRate:"a-rate",defaultValue:1,minValue:0}];}constructor(_g5){super();this._E2();const _95=_f5.parameterDescriptors.find(_h5=>_h5.name==="attack");const _a5=_f5.parameterDescriptors.find(_h5=>_h5.name==="release");this._i5=new _65(_95.defaultValue,_a5.defaultValue);
this._j5=0;}process(_k5,_l5,_m5){const input=_k5[0];const output=_l5[0];const bypass=_m5.bypass;const ingain=_m5.ingain;const outgain=_m5.outgain;const threshold=_m5.threshold;const ratio=_m5.ratio;const attack=_m5.attack;const release=_m5.release;if(input.length===0)return this._Y2;for(let _T2=0;_T2<input[0].length;++_T2){let _n5=input.map(_o5=>_o5[_T2]);output.forEach((_o5,_p5)=>{_o5[_T2]=_n5[_p5];});const _q5=(ingain[_T2]!==undefined)?ingain[_T2]:ingain[0];_n5=_n5.map(_r5=>_r5*=_q5);const rect=_n5.map(_r5=>Math.abs(_r5));
const max=Math.max(...rect);const _s5=_t5(max);const _E4=(threshold[_T2]!==undefined)?threshold[_T2]:threshold[0];const _u5=_t5(_E4);const _v5=Math.max(0,_s5-_u5);const _95=(attack[_T2]!==undefined)?attack[_T2]:attack[0];const _a5=(release[_T2]!==undefined)?release[_T2]:release[0];this._i5._d5(_95);this._i5._e5(_a5);this._j5=this._i5.process(_v5,this._j5);const _W2=(bypass[_T2]!==undefined)?bypass[_T2]:bypass[0];if(_W2>0)continue;const _S4=(ratio[_T2]!==undefined)?ratio[_T2]:ratio[0];const _w5=(this._j5/_S4)-this._j5;
const _C3=_x5(_w5);_n5=_n5.map(_r5=>_r5*=_C3);const _y5=(outgain[_T2]!==undefined)?outgain[_T2]:outgain[0];_n5=_n5.map(_r5=>_r5*=_y5);output.forEach((_o5,_p5)=>{_o5[_T2]=_n5[_p5];});}return this._Y2;}}function _t5(_z5){return 20*Math.log10(_z5);}function _x5(_z5){return Math.pow(10,_z5/20);}registerProcessor("compressor-processor",_f5);class _A5 extends AudioWorkletProcessor{static get parameterDescriptors(){const _y3=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,
minValue:0,maxValue:1},{name:"freq",automationRate:"a-rate",defaultValue:Math.min(500.0,_y3),minValue:10.0,maxValue:_y3},{name:"q",automationRate:"a-rate",defaultValue:1.0,minValue:1.0,maxValue:100.0},{name:"gain",automationRate:"a-rate",defaultValue:1e-2,minValue:1e-6}];}constructor(_D2){super();this._E2();const _F2=_D2.outputChannelCount[0];this._d3=0;this._e3=0;this._f3=0;this._g3=0;this._h3=0;this._i3=new Float32Array(_F2);this._j3=new Float32Array(_F2);this._k3=new Float32Array(_F2);this._l3=new Float32Array(_F2);
this._z3=-1;this._n3=-1;this._A3=-1;}process(_P2,_Q2,parameters){const input=_P2[0];const output=_Q2[0];const bypass=parameters.bypass;const freq=parameters.freq;const q=parameters.q;const gain=parameters.gain;const _o3=(freq.length===1&&q.length===1&&gain.length===1);if(_o3)this._p3(freq[0],q[0],gain[0]);for(let _M2=0;_M2<input.length;++_M2){const _R2=input[_M2];const _S2=output[_M2];for(let _T2=0;_T2<_R2.length;++_T2){if(_o3===!1){const _B3=(freq[_T2]!==undefined)?freq[_T2]:freq[0];const _q3=(q[_T2]!==undefined)?q[_T2]:q[0];
const _C3=(gain[_T2]!==undefined)?gain[_T2]:gain[0];this._p3(_B3,_q3,_C3);}const _r3=this._f3*_R2[_T2]+this._g3*this._i3[_M2]+this._h3*this._j3[_M2]-this._d3*this._k3[_M2]-this._e3*this._l3[_M2];this._j3[_M2]=this._i3[_M2];this._i3[_M2]=_R2[_T2];this._l3[_M2]=this._k3[_M2];this._k3[_M2]=_r3;const _W2=(bypass[_T2]!==undefined)?bypass[_T2]:bypass[0];_S2[_T2]=(_W2>0)?_R2[_T2]:_r3;}}return this._Y2;}_p3(_D3,_t3,_E3){if(_D3===this._z3&&_t3===this._n3&&_E3===this._A3)return;const _u3=2*Math.PI*_D3/sampleRate;
const _v3=Math.cos(_u3);const _F3=Math.sqrt(_E3);const _L3=_F3+1;const _M3=_F3-1;const _N3=_L3*_v3;const _O3=_M3*_v3;const _P3=_L3-_O3;const _Q3=_L3+_O3;const alpha=Math.sin(_u3)/(2*_t3);const _R3=(2*Math.sqrt(_F3)*alpha);const _w3=_Q3+_R3;const _d3=-2*(_M3+_N3);const _e3=_Q3-_R3;const _f3=_F3*(_P3+_R3);const _g3=2*_F3*(_M3-_N3);const _h3=_F3*(_P3-_R3);this._d3=_d3/_w3;this._e3=_e3/_w3;this._f3=_f3/_w3;this._g3=_g3/_w3;this._h3=_h3/_w3;this._z3=_D3;this._n3=_t3;this._A3=_E3;}}registerProcessor("lo-shelf-processor",
_A5);