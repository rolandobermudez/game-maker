class _72{constructor(_82){this._92=0;this._a2=0;this.feedback=0;this._b2=0;this.buffer=new Float32Array(_82);this._c2=0;}process(_d2){const out=this.buffer[this._c2];this._b2=(this._b2*this._92)+(out*this._a2);this.buffer[this._c2]=_d2+(this._b2*this.feedback);++this._c2;this._c2%=this.buffer.length;return out;}_e2(_f2){this.feedback=Math.min(Math.max(0,_f2),1);}_g2(_h2){this._92=Math.min(Math.max(0,_h2),1);this._a2=1-this._92;}}class _i2{constructor(_82){this.feedback=0;this.buffer=new Float32Array(_82);
this._c2=0;}process(_d2){const out=this.buffer[this._c2];this.buffer[this._c2]=_d2+(out*this.feedback);++this._c2;this._c2%=this.buffer.length;return(out-_d2);}_e2(_f2){this.feedback=Math.min(Math.max(0,_f2),1);}}class _j2 extends AudioWorkletProcessor{static _k2=8;static _l2=4;static _m2=0.015;static _n2=0.4;static _o2=0.28;static _p2=0.7;static _q2=[1116,1188,1277,1356,1422,1491,1557,1617];static _r2=[1139,1211,1300,1379,1445,1514,1580,1640];static _s2=[556,441,341,225];static _t2=[579,464,364,248];static get parameterDescriptors(){
return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"size",automationRate:"a-rate",defaultValue:0.7,minValue:0.0,maxValue:1.0},{name:"damp",automationRate:"a-rate",defaultValue:0.1,minValue:0.0,maxValue:1.0},{name:"mix",automationRate:"a-rate",defaultValue:0.35,minValue:0.0,maxValue:1.0}];}constructor(_u2){super();this._v2();const _w2=_u2.outputChannelCount[0];this._x2=-1;this._y2=-1;this._z2=new Array(_w2);this._A2=new Array(_w2);const _B2=[_j2._q2,_j2._r2];const _C2=[_j2._s2,
_j2._t2];for(let _D2=0;_D2<_w2;++_D2){this._z2[_D2]=new Array(_j2._k2);this._A2[_D2]=new Array(_j2._l2);for(let _E2=0;_E2<_j2._k2;++_E2)this._z2[_D2][_E2]=new _72(_B2[_D2%_B2.length][_E2]);for(let _E2=0;_E2<_j2._l2;++_E2)this._A2[_D2][_E2]=new _i2(_C2[_D2%_C2.length][_E2]);}this._F2(0.5);this._g2(0.5);for(let _D2=0;_D2<_w2;++_D2)for(let _E2=0;_E2<_j2._l2;++_E2)this._A2[_D2][_E2]._e2(0.5);}process(_G2,_H2,parameters){const input=_G2[0];const output=_H2[0];const bypass=parameters.bypass;const size=parameters.size;
const damp=parameters.damp;const mix=parameters.mix;for(let _D2=0;_D2<input.length;++_D2){const _I2=input[_D2];const _J2=output[_D2];for(let _K2=0;_K2<_I2.length;++_K2){const _K2=(size[_K2]!==undefined)?size[_K2]:size[0];const _L2=(damp[_K2]!==undefined)?damp[_K2]:damp[0];this._F2(_K2);this._g2(_L2);_J2[_K2]=_I2[_K2];let out=0;const _M2=_I2[_K2]*_j2._m2;for(let _E2=0;_E2<_j2._k2;++_E2)out+=this._z2[_D2][_E2].process(_M2);for(let _E2=0;_E2<_j2._l2;++_E2)out=this._A2[_D2][_E2].process(out);const _N2=(bypass[_K2]!==undefined)?bypass[_K2]:bypass[0];
if(_N2>0.0){continue;}const _O2=(mix[_K2]!==undefined)?mix[_K2]:mix[0];_J2[_K2]*=(1-_O2);_J2[_K2]+=(out*_O2);}}return this._P2;}_F2(_82){if(_82===this._x2)return;const size=(_82*_j2._o2)+_j2._p2;for(let _D2=0;_D2<this._z2.length;++_D2)for(let _E2=0;_E2<_j2._k2;++_E2)this._z2[_D2][_E2]._e2(size);this._x2=_82;}_g2(_h2){if(_h2===this._y2)return;const damp=_h2*_j2._n2;for(let _D2=0;_D2<this._z2.length;++_D2)for(let _E2=0;_E2<_j2._k2;++_E2)this._z2[_D2][_E2]._g2(damp);this._y2=_h2;}}registerProcessor("reverb1-processor",
_j2);class _Q2 extends AudioWorkletProcessor{static get parameterDescriptors(){return [];}constructor(){super();this._v2();}process(_R2,_S2,_T2){const input=_R2[0];const _U2=_S2[0];const _V2=_S2[1];for(let _D2=0;_D2<input.length;++_D2){const _I2=input[_D2];const _W2=_U2[_D2];const _X2=_V2[_D2];for(let _K2=0;_K2<_I2.length;++_K2){_W2[_K2]=_I2[_K2];_X2[_K2]=_I2[_K2];}}return this._P2;}}class _Y2 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,
minValue:0,maxValue:1}];}constructor(){super();this._v2();}process(_R2,_S2,_T2){const _Z2=_R2[0];const __2=_R2[1];const output=_S2[0];const bypass=_T2.bypass;for(let _D2=0;_D2<__2.length;++_D2){const _03=_Z2[_D2];const _13=__2[_D2];const _J2=output[_D2];for(let _K2=0;_K2<_03.length;++_K2){const _N2=(bypass[_K2]!==undefined)?bypass[_K2]:bypass[0];if(_N2>0){_J2[_K2]=_13[_K2];}else {_J2[_K2]=_03[_K2];}}}return this._P2;}}registerProcessor("eq-input",_Q2);registerProcessor("eq-output",_Y2);class _23 extends AudioWorkletProcessor{
static get parameterDescriptors(){const _33=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"cutoff",automationRate:"a-rate",defaultValue:Math.min(500.0,_33),minValue:10.0,maxValue:_33},{name:"q",automationRate:"a-rate",defaultValue:1.5,minValue:1.0,maxValue:100.0}];}constructor(_u2){super();this._v2();const _w2=_u2.outputChannelCount[0];this._43=0;this._53=0;this._63=0;this._73=0;this._83=0;this._93=new Float32Array(_w2);this._a3=new Float32Array(_w2);
this._b3=new Float32Array(_w2);this._c3=new Float32Array(_w2);this._d3=-1;this._e3=-1;}process(_G2,_H2,parameters){const input=_G2[0];const output=_H2[0];const bypass=parameters.bypass;const cutoff=parameters.cutoff;const q=parameters.q;const _f3=(cutoff.length===1&&q.length===1);if(_f3)this._g3(cutoff[0],q[0]);for(let _D2=0;_D2<input.length;++_D2){const _I2=input[_D2];const _J2=output[_D2];for(let _K2=0;_K2<_I2.length;++_K2){if(_f3===!1){const _D2=(cutoff[_K2]!==undefined)?cutoff[_K2]:cutoff[0];const _h3=(q[_K2]!==undefined)?q[_K2]:q[0];
this._g3(_D2,_h3);}const _i3=this._63*_I2[_K2]+this._73*this._93[_D2]+this._83*this._a3[_D2]-this._43*this._b3[_D2]-this._53*this._c3[_D2];this._a3[_D2]=this._93[_D2];this._93[_D2]=_I2[_K2];this._c3[_D2]=this._b3[_D2];this._b3[_D2]=_i3;const _N2=(bypass[_K2]!==undefined)?bypass[_K2]:bypass[0];_J2[_K2]=(_N2>0)?_I2[_K2]:_i3;}}return this._P2;}_g3(_j3,_k3){if(_j3===this._d3&&_k3===this._e3)return;const _l3=2*Math.PI*_j3/sampleRate;const alpha=Math.sin(_l3)/(2*_k3);const _m3=Math.cos(_l3);const _n3=1+alpha;
const _43=-2*_m3;const _53=1-alpha;const _63=(1-_m3)/2;const _73=1-_m3;const _83=(1-_m3)/2;this._43=_43/_n3;this._53=_53/_n3;this._63=_63/_n3;this._73=_73/_n3;this._83=_83/_n3;this._d3=_j3;this._e3=_k3;}}registerProcessor("lpf2-processor",_23);class _o3 extends AudioWorkletProcessor{static get parameterDescriptors(){const _p3=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"freq",automationRate:"a-rate",defaultValue:Math.min(1500.0,
_p3),minValue:10.0,maxValue:_p3},{name:"q",automationRate:"a-rate",defaultValue:1.0,minValue:1.0,maxValue:100.0},{name:"gain",automationRate:"a-rate",defaultValue:1e-2,minValue:1e-6}];}constructor(_u2){super();this._v2();const _w2=_u2.outputChannelCount[0];this._43=0;this._53=0;this._63=0;this._73=0;this._83=0;this._93=new Float32Array(_w2);this._a3=new Float32Array(_w2);this._b3=new Float32Array(_w2);this._c3=new Float32Array(_w2);this._q3=-1;this._e3=-1;this._r3=-1;}process(_G2,_H2,parameters){const input=_G2[0];
const output=_H2[0];const bypass=parameters.bypass;const freq=parameters.freq;const q=parameters.q;const gain=parameters.gain;const _f3=(freq.length===1&&q.length===1&&gain.length===1);if(_f3)this._g3(freq[0],q[0],gain[0]);for(let _D2=0;_D2<input.length;++_D2){const _I2=input[_D2];const _J2=output[_D2];for(let _K2=0;_K2<_I2.length;++_K2){if(_f3===!1){const _s3=(freq[_K2]!==undefined)?freq[_K2]:freq[0];const _h3=(q[_K2]!==undefined)?q[_K2]:q[0];const _t3=(gain[_K2]!==undefined)?gain[_K2]:gain[0];this._g3(_s3,
_h3,_t3);}const _i3=this._63*_I2[_K2]+this._73*this._93[_D2]+this._83*this._a3[_D2]-this._43*this._b3[_D2]-this._53*this._c3[_D2];this._a3[_D2]=this._93[_D2];this._93[_D2]=_I2[_K2];this._c3[_D2]=this._b3[_D2];this._b3[_D2]=_i3;const _N2=(bypass[_K2]!==undefined)?bypass[_K2]:bypass[0];_J2[_K2]=(_N2>0)?_I2[_K2]:_i3;}}return this._P2;}_g3(_u3,_k3,_v3){if(_u3===this._q3&&_k3===this._e3&&_v3===this._r3)return;const _l3=2*Math.PI*_u3/sampleRate;const _m3=Math.cos(_l3);const _w3=Math.sqrt(_v3);const alpha=Math.sin(_l3)/(2*_k3);
const _x3=alpha/_w3;const _y3=alpha*_w3;const _n3=1+_x3;const _43=-2*_m3;const _53=1-_x3;const _63=1+_y3;const _73=_43;const _83=1-_y3;this._43=_43/_n3;this._53=_53/_n3;this._63=_63/_n3;this._73=_73/_n3;this._83=_83/_n3;this._q3=_u3;this._e3=_k3;this._r3=_v3;}}registerProcessor("peak-eq-processor",_o3);class _z3 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"gain",automationRate:"a-rate",defaultValue:0.5,
minValue:0.0}];}constructor(){super();this._v2();}process(_G2,_H2,parameters){const input=_G2[0];const output=_H2[0];const bypass=parameters.bypass;const gain=parameters.gain;for(let _D2=0;_D2<input.length;++_D2){const _I2=input[_D2];const _J2=output[_D2];for(let _K2=0;_K2<_I2.length;++_K2){_J2[_K2]=_I2[_K2];const _N2=(bypass[_K2]!==undefined)?bypass[_K2]:bypass[0];if(_N2>0.0){continue;}const _t3=(gain[_K2]!==undefined)?gain[_K2]:gain[0];_J2[_K2]*=_t3;}}return this._P2;}}registerProcessor("gain-processor",
_z3);class _A3 extends AudioWorkletProcessor{static get parameterDescriptors(){const _33=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"cutoff",automationRate:"a-rate",defaultValue:Math.min(1500.0,_33),minValue:10.0,maxValue:_33},{name:"q",automationRate:"a-rate",defaultValue:1.5,minValue:1.0,maxValue:100.0}];}constructor(_u2){super();this._v2();const _w2=_u2.outputChannelCount[0];this._43=0;this._53=0;this._63=0;this._73=0;this._83=0;
this._93=new Float32Array(_w2);this._a3=new Float32Array(_w2);this._b3=new Float32Array(_w2);this._c3=new Float32Array(_w2);this._d3=-1;this._e3=-1;}process(_G2,_H2,parameters){const input=_G2[0];const output=_H2[0];const bypass=parameters.bypass;const cutoff=parameters.cutoff;const q=parameters.q;const _f3=(cutoff.length===1&&q.length===1);if(_f3)this._g3(cutoff[0],q[0]);for(let _D2=0;_D2<input.length;++_D2){const _I2=input[_D2];const _J2=output[_D2];for(let _K2=0;_K2<_I2.length;++_K2){if(_f3===!1){const _D2=(cutoff[_K2]!==undefined)?cutoff[_K2]:cutoff[0];
const _h3=(q[_K2]!==undefined)?q[_K2]:q[0];this._g3(_D2,_h3);}const _i3=this._63*_I2[_K2]+this._73*this._93[_D2]+this._83*this._a3[_D2]-this._43*this._b3[_D2]-this._53*this._c3[_D2];this._a3[_D2]=this._93[_D2];this._93[_D2]=_I2[_K2];this._c3[_D2]=this._b3[_D2];this._b3[_D2]=_i3;const _N2=(bypass[_K2]!==undefined)?bypass[_K2]:bypass[0];_J2[_K2]=(_N2>0)?_I2[_K2]:_i3;}}return this._P2;}_g3(_j3,_k3){if(_j3===this._d3&&_k3===this._e3)return;const _l3=2*Math.PI*_j3/sampleRate;const alpha=Math.sin(_l3)/(2*_k3);
const _m3=Math.cos(_l3);const _n3=1+alpha;const _43=-2*_m3;const _53=1-alpha;const _63=(1+_m3)/2;const _73=-1-_m3;const _83=(1+_m3)/2;this._43=_43/_n3;this._53=_53/_n3;this._63=_63/_n3;this._73=_73/_n3;this._83=_83/_n3;this._d3=_j3;this._e3=_k3;}}registerProcessor("hpf2-processor",_A3);class _B3 extends AudioWorkletProcessor{static get parameterDescriptors(){const _p3=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"freq",automationRate:"a-rate",
defaultValue:Math.min(5000.0,_p3),minValue:10.0,maxValue:_p3},{name:"q",automationRate:"a-rate",defaultValue:1.0,minValue:1.0,maxValue:100.0},{name:"gain",automationRate:"a-rate",defaultValue:1e-2,minValue:1e-6}];}constructor(_u2){super();this._v2();const _w2=_u2.outputChannelCount[0];this._43=0;this._53=0;this._63=0;this._73=0;this._83=0;this._93=new Float32Array(_w2);this._a3=new Float32Array(_w2);this._b3=new Float32Array(_w2);this._c3=new Float32Array(_w2);this._q3=-1;this._e3=-1;this._r3=-1;}process(_G2,
_H2,parameters){const input=_G2[0];const output=_H2[0];const bypass=parameters.bypass;const freq=parameters.freq;const q=parameters.q;const gain=parameters.gain;const _f3=(freq.length===1&&q.length===1&&gain.length===1);if(_f3)this._g3(freq[0],q[0],gain[0]);for(let _D2=0;_D2<input.length;++_D2){const _I2=input[_D2];const _J2=output[_D2];for(let _K2=0;_K2<_I2.length;++_K2){if(_f3===!1){const _s3=(freq[_K2]!==undefined)?freq[_K2]:freq[0];const _h3=(q[_K2]!==undefined)?q[_K2]:q[0];const _t3=(gain[_K2]!==undefined)?gain[_K2]:gain[0];
this._g3(_s3,_h3,_t3);}const _i3=this._63*_I2[_K2]+this._73*this._93[_D2]+this._83*this._a3[_D2]-this._43*this._b3[_D2]-this._53*this._c3[_D2];this._a3[_D2]=this._93[_D2];this._93[_D2]=_I2[_K2];this._c3[_D2]=this._b3[_D2];this._b3[_D2]=_i3;const _N2=(bypass[_K2]!==undefined)?bypass[_K2]:bypass[0];_J2[_K2]=(_N2>0)?_I2[_K2]:_i3;}}return this._P2;}_g3(_u3,_k3,_v3){if(_u3===this._q3&&_k3===this._e3&&_v3===this._r3)return;const _l3=2*Math.PI*_u3/sampleRate;const _m3=Math.cos(_l3);const _w3=Math.sqrt(_v3);const _C3=_w3+1;
const _D3=_w3-1;const _E3=_C3*_m3;const _F3=_D3*_m3;const _G3=_C3-_F3;const _H3=_C3+_F3;const alpha=Math.sin(_l3)/(2*_k3);const _I3=(2*Math.sqrt(_w3)*alpha);const _n3=_G3+_I3;const _43=2*(_D3-_E3);const _53=_G3-_I3;const _63=_w3*(_H3+_I3);const _73=-2*_w3*(_D3+_E3);const _83=_w3*(_H3-_I3);this._43=_43/_n3;this._53=_53/_n3;this._63=_63/_n3;this._73=_73/_n3;this._83=_83/_n3;this._q3=_u3;this._e3=_k3;this._r3=_v3;}}registerProcessor("hi-shelf-processor",_B3);function _J3(){}_J3._K3={_L3:0,_M3:1,_N3:2,_O3:3,_P3:4,
_Q3:5};_J3._R3=function(_S3){return 1.0-_S3;};_J3._T3=function(_S3){return _S3;};_J3._U3=function(_S3){return 0.5*(Math.sin((_S3*2.0*Math.PI)-(Math.PI/2.0))+1.0);};_J3._V3=function(_S3){if(_S3<0.5){return 0.0;}return 1.0;};_J3._W3=function(_S3){if(_S3<0.5){return 2.0*_S3;}return 2.0-(2.0*_S3);};_J3._X3=[_J3._R3,_J3._T3,_J3._U3,_J3._V3,_J3._W3];_Y3._Z3=512;_Y3.__3=1.0/_Y3._Z3;function _Y3(_04){this.data=new Float32Array(_Y3._Z3);for(let _E2=0;_E2<_Y3._Z3;++_E2){this.data[_E2]=_04(_E2*_Y3.__3);}}_Y3.prototype._14=function(_S3){
_S3=Math.max(0.0,_S3);_S3=Math.min(_S3,1.0);const _24=_S3*_Y3._Z3;const _34=~~_24;const _44=_24-_34;let _54=_34;let _64=_54+1;if(_54>=_Y3._Z3){_54-=_Y3._Z3;}if(_64>=_Y3._Z3){_64-=_Y3._Z3;}const _74=this.data[_54];const _84=this.data[_64];return _74+(_84-_74)*_44;};;_94._a4=[];_94._b4=!1;_94._c4=0.0;_94._p3=20.0;function _94(){this._d4=48000;this.shape=_J3._K3._N3;this.freq=1.0;this._e4=0.0;this.__3=0.0;this._f4=0.0;if(_94._b4==true){return;}for(let _E2=0;_E2<_J3._K3._Q3;++_E2){_94._a4[_E2]=new _Y3(_J3._X3[_E2]);
}_94._b4=true;}_94._g4=function(){return(_94._b4==!0);};_94.prototype._h4=function(_i4){this._d4=_i4;this._j4();};;_94.prototype._k4=function(_u3){_u3=Math.max(_94._c4,_u3);_u3=Math.min(_u3,_94._p3);this.freq=_u3;this._j4();};;_94.prototype._l4=function(_m4){_m4=Math.max(0.0,_m4);_m4=Math.min(_m4,1.0);const _n4=_m4-this._f4;this._f4=_m4;this._e4+=_n4;while(this._e4>=1.0){this._e4-=1.0;}while(this._e4<0.0){this._e4+=1.0;}};;_94.prototype._o4=function(_p4){_p4=Math.max(0,_p4);_p4=Math.min(_p4,_J3._K3._Q3-1);
this.shape=_p4;};;_94.prototype._14=function(){const _q4=_94._a4[this.shape]._14(this._e4);this._e4+=this.__3;while(this._e4>=1.0){this._e4-=1.0;}return _q4;};;_94.prototype._j4=function(){this.__3=this.freq/this._d4;};;class _r4 extends AudioWorkletProcessor{static _s4=5.0;static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"time",automationRate:"a-rate",defaultValue:0.2,minValue:0.0,maxValue:_r4._s4},{name:"feedback",automationRate:"a-rate",
defaultValue:0.5,minValue:0.0,maxValue:1.0},{name:"mix",automationRate:"a-rate",defaultValue:0.35,minValue:0.0,maxValue:1.0}];}constructor(_u2){super();this._v2();const _w2=_u2.outputChannelCount[0];const _t4=(_r4._s4*sampleRate)+1;this.buffer=new Array(_w2);this._u4=new Uint32Array(_w2);for(let _D2=0;_D2<_w2;++_D2)this.buffer[_D2]=new Float32Array(_t4);}process(_G2,_H2,parameters){const input=_G2[0];const output=_H2[0];const bypass=parameters.bypass;const time=parameters.time;const feedback=parameters.feedback;
const mix=parameters.mix;for(let _D2=0;_D2<input.length;++_D2){const _I2=input[_D2];const _J2=output[_D2];for(let _K2=0;_K2<_I2.length;++_K2){_J2[_K2]=_I2[_K2];const _v4=(time[_K2]!==undefined)?time[_K2]:time[0];const _w4=this._14(_D2,_v4);const _s3=(feedback[_K2]!==undefined)?feedback[_K2]:feedback[0];const _x4=_I2[_K2]+(_w4*_s3);this.write(_D2,_x4);const _N2=(bypass[_K2]!==undefined)?bypass[_K2]:bypass[0];if(_N2>0.0){continue;}const _O2=(mix[_K2]!==undefined)?mix[_K2]:mix[0];_J2[_K2]*=(1-_O2);_J2[_K2]+=(_w4*_O2);
}}return this._P2;}_14(_y4,_z4){const _A4=_z4*sampleRate;let _54=(this._u4[_y4]-~~_A4);let _64=(_54-1);while(_54<0)_54+=this.buffer[_y4].length;while(_64<0)_64+=this.buffer[_y4].length;const _B4=_A4-~~_A4;const _74=this.buffer[_y4][_54];const _84=this.buffer[_y4][_64];return _74+(_84-_74)*_B4;}write(_y4,_d2){++this._u4[_y4];this._u4[_y4]%=this.buffer[_y4].length;this.buffer[_y4][this._u4[_y4]]=_d2;}}registerProcessor("delay-processor",_r4);AudioWorkletProcessor.prototype._v2=function(){this._P2=true;this.port.onmessage=(_C4)=>{
if(_C4.data==="kill")this._P2=false;};};;class _D4 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1}];}constructor(){super();this._v2();}process(_G2,_H2,parameters){const input=_G2[0];const bypass=parameters.bypass;for(let _D2=0;_D2<input.length;++_D2){const _I2=input[_D2];for(let _K2=0;_K2<_I2.length;++_K2){const _N2=(bypass[_K2]!==undefined)?bypass[_K2]:bypass[0];_H2[_N2][_D2][_K2]=_I2[_K2];}}return this._P2;
}}class _E4 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"gain",automationRate:"a-rate",defaultValue:1,minValue:0}];}constructor(){super();this._v2();}process(_G2,_H2,parameters){const _Z2=_G2[0];const __2=_G2[1];const output=_H2[0];const gain=parameters.gain;for(let _D2=0;_D2<__2.length;++_D2){const _I2=__2[_D2];const _J2=output[_D2];for(let _K2=0;_K2<_I2.length;++_K2)_J2[_K2]=_I2[_K2];}for(let _D2=0;_D2<_Z2.length;++_D2){const _I2=_Z2[_D2];const _J2=output[_D2];for(let _K2=0;_K2<_I2.length;
++_K2){const _t3=(gain[_K2]!==undefined)?gain[_K2]:gain[0];_J2[_K2]+=_I2[_K2]*_t3;}}return this._P2;}}registerProcessor("audio-bus-input",_D4);registerProcessor("audio-bus-output",_E4);class _F4 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"gain",automationRate:"a-rate",defaultValue:1.0,minValue:0.0},{name:"factor",automationRate:"a-rate",defaultValue:20,minValue:1,maxValue:100},{name:"resolution",
automationRate:"a-rate",defaultValue:8,minValue:2,maxValue:16},{name:"mix",automationRate:"a-rate",defaultValue:0.8,minValue:0.0,maxValue:1.0}];}static _G4=[undefined,undefined,2,4,8,16,32,64,128,256,512,1024,2048,4096,8192,16384,32768];constructor(_u2){super();this._v2();const _w2=_u2.outputChannelCount[0];this._H4=new Float32Array(_w2);this._I4=new Uint32Array(_w2);}process(_G2,_H2,parameters){const input=_G2[0];const output=_H2[0];const bypass=parameters.bypass;const gain=parameters.gain;const factor=parameters.factor;
const resolution=parameters.resolution;const mix=parameters.mix;for(let _D2=0;_D2<input.length;++_D2){const _I2=input[_D2];const _J2=output[_D2];for(let _K2=0;_K2<_I2.length;++_K2){_J2[_K2]=_I2[_K2];if(this._I4[_D2]===0)this._H4[_D2]=_I2[_K2];const _s3=(factor[_K2]!==undefined)?factor[_K2]:factor[0];++this._I4[_D2];this._I4[_D2]%=_s3;const _N2=(bypass[_K2]!==undefined)?bypass[_K2]:bypass[0];if(_N2>0.0){continue;}let _M2=this._H4[_D2];const _t3=(gain[_K2]!==undefined)?gain[_K2]:gain[0];_M2*=_t3;_M2=Math.max(Math.min(_M2,
1.0),-1.0);const _J4=(resolution[_K2]!==undefined)?resolution[_K2]:resolution[0];const max=(_M2>0.0)?_F4._G4[_J4]-1:_F4._G4[_J4];_M2=Math.round(_M2*max)/max;const _O2=(mix[_K2]!==undefined)?mix[_K2]:mix[0];_J2[_K2]*=(1.0-_O2);_J2[_K2]+=(_M2*_O2);}}return this._P2;}}registerProcessor("bitcrusher-processor",_F4);class _K4 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"rate",automationRate:"a-rate",defaultValue:5.0,
minValue:0.0,maxValue:20.0},{name:"intensity",automationRate:"a-rate",defaultValue:1.0,minValue:0.0,maxValue:1.0},{name:"offset",automationRate:"a-rate",defaultValue:0.0,minValue:0.0,maxValue:1.0},{name:"shape",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:4}];}constructor(_u2){super();this._v2();const _w2=_u2.outputChannelCount[0];this._L4=new Array(_w2).fill(1.0);this._M4=new Array(_w2).fill(0.0);this._N4=new Array(_w2).fill(_J3._K3._L3);this._O4=new Array(_w2);for(let _D2=0;_D2<_w2;++_D2){
this._O4[_D2]=new _94();this._O4[_D2]._h4(sampleRate);this._O4[_D2]._k4(this._L4[_D2]);this._O4[_D2]._o4(this._N4[_D2]);if(_D2%2===1){this._O4[_D2]._l4(this._M4[_D2]);}}}process(_G2,_H2,parameters){const input=_G2[0];const output=_H2[0];const bypass=parameters.bypass;const rate=parameters.rate;const intensity=parameters.intensity;const offset=parameters.offset;const shape=parameters.shape;for(let _D2=0;_D2<input.length;++_D2){const _I2=input[_D2];const _J2=output[_D2];for(let _K2=0;_K2<_I2.length;++_K2){_J2[_K2]=_I2[_K2];
const _J4=(rate[_K2]!==undefined)?rate[_K2]:rate[0];const _P4=(offset[_K2]!==undefined)?offset[_K2]:offset[0];const _Q4=(shape[_K2]!==undefined)?shape[_K2]:shape[0];this._R4(_D2,_J4,_P4,_Q4);const _S4=this._O4[_D2]._14();const _N2=(bypass[_K2]!==undefined)?bypass[_K2]:bypass[0];if(_N2>0.0){continue;}const _E2=(intensity[_K2]!==undefined)?intensity[_K2]:intensity[0];const out=_I2[_K2]*_S4*_E2;_J2[_K2]*=(1.0-_E2);_J2[_K2]+=out;}}return this._P2;}_R4(_y4,_T4,_m4,_p4){if(_T4!==this._L4[_y4]){this._O4[_y4]._k4(_T4);
this._L4[_y4]=_T4;}if(_m4!==this._M4[_y4]){if(_y4%2===1){this._O4[_y4]._l4(_m4);}this._M4[_y4]=_m4;}if(_p4!==this._N4[_y4]){this._O4[_y4]._o4(_p4);this._N4[_y4]=_p4;}}}registerProcessor("tremolo-processor",_K4);class _U4{constructor(_z4=1e-3){this.setTime(_z4);}setTime(_z4){this._V4=Math.exp(-1/(_z4*sampleRate));}process(_W4,_X4){return _W4+this._V4*(_X4-_W4);}}class _Y4{constructor(_Z4,__4){this._05=new _U4(_Z4);this._15=new _U4(__4);this._25=_Z4;this._35=__4;}_45(_z4){if(_z4===this._25)return;this._05.setTime(_z4);
this._25=_z4;}_55(_z4){if(_z4===this._35)return;this._15.setTime(_z4);this._35=_z4;}process(_W4,_X4){if(_W4>_X4)return this._05.process(_W4,_X4);else return this._15.process(_W4,_X4);}}class _65 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"ingain",automationRate:"a-rate",defaultValue:1,minValue:0},{name:"threshold",automationRate:"a-rate",defaultValue:0.125,minValue:1e-3,maxValue:1},{name:"ratio",
automationRate:"a-rate",defaultValue:4,minValue:1},{name:"attack",automationRate:"a-rate",defaultValue:0.05,minValue:1e-3,maxValue:1e-1},{name:"release",automationRate:"a-rate",defaultValue:0.25,minValue:1e-2,maxValue:1},{name:"outgain",automationRate:"a-rate",defaultValue:1,minValue:0}];}constructor(_75){super();this._v2();const _05=_65.parameterDescriptors.find(_85=>_85.name==="attack");const _15=_65.parameterDescriptors.find(_85=>_85.name==="release");this._95=new _Y4(_05.defaultValue,_15.defaultValue);
this._a5=0;}process(_b5,_c5,_d5){const input=_b5[0];const output=_c5[0];const bypass=_d5.bypass;const ingain=_d5.ingain;const outgain=_d5.outgain;const threshold=_d5.threshold;const ratio=_d5.ratio;const attack=_d5.attack;const release=_d5.release;if(input.length===0)return this._P2;for(let _K2=0;_K2<input[0].length;++_K2){let _e5=input.map(_f5=>_f5[_K2]);output.forEach((_f5,_g5)=>{_f5[_K2]=_e5[_g5];});const _h5=(ingain[_K2]!==undefined)?ingain[_K2]:ingain[0];_e5=_e5.map(_i5=>_i5*=_h5);const rect=_e5.map(_i5=>Math.abs(_i5));
const max=Math.max(...rect);const _j5=_k5(max);const _v4=(threshold[_K2]!==undefined)?threshold[_K2]:threshold[0];const _l5=_k5(_v4);const _m5=Math.max(0,_j5-_l5);const _05=(attack[_K2]!==undefined)?attack[_K2]:attack[0];const _15=(release[_K2]!==undefined)?release[_K2]:release[0];this._95._45(_05);this._95._55(_15);this._a5=this._95.process(_m5,this._a5);const _N2=(bypass[_K2]!==undefined)?bypass[_K2]:bypass[0];if(_N2>0)continue;const _J4=(ratio[_K2]!==undefined)?ratio[_K2]:ratio[0];const _n5=(this._a5/_J4)-this._a5;
const _t3=_o5(_n5);_e5=_e5.map(_i5=>_i5*=_t3);const _p5=(outgain[_K2]!==undefined)?outgain[_K2]:outgain[0];_e5=_e5.map(_i5=>_i5*=_p5);output.forEach((_f5,_g5)=>{_f5[_K2]=_e5[_g5];});}return this._P2;}}function _k5(_q5){return 20*Math.log10(_q5);}function _o5(_q5){return Math.pow(10,_q5/20);}registerProcessor("compressor-processor",_65);class _r5 extends AudioWorkletProcessor{static get parameterDescriptors(){const _p3=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,
minValue:0,maxValue:1},{name:"freq",automationRate:"a-rate",defaultValue:Math.min(500.0,_p3),minValue:10.0,maxValue:_p3},{name:"q",automationRate:"a-rate",defaultValue:1.0,minValue:1.0,maxValue:100.0},{name:"gain",automationRate:"a-rate",defaultValue:1e-2,minValue:1e-6}];}constructor(_u2){super();this._v2();const _w2=_u2.outputChannelCount[0];this._43=0;this._53=0;this._63=0;this._73=0;this._83=0;this._93=new Float32Array(_w2);this._a3=new Float32Array(_w2);this._b3=new Float32Array(_w2);this._c3=new Float32Array(_w2);
this._q3=-1;this._e3=-1;this._r3=-1;}process(_G2,_H2,parameters){const input=_G2[0];const output=_H2[0];const bypass=parameters.bypass;const freq=parameters.freq;const q=parameters.q;const gain=parameters.gain;const _f3=(freq.length===1&&q.length===1&&gain.length===1);if(_f3)this._g3(freq[0],q[0],gain[0]);for(let _D2=0;_D2<input.length;++_D2){const _I2=input[_D2];const _J2=output[_D2];for(let _K2=0;_K2<_I2.length;++_K2){if(_f3===!1){const _s3=(freq[_K2]!==undefined)?freq[_K2]:freq[0];const _h3=(q[_K2]!==undefined)?q[_K2]:q[0];
const _t3=(gain[_K2]!==undefined)?gain[_K2]:gain[0];this._g3(_s3,_h3,_t3);}const _i3=this._63*_I2[_K2]+this._73*this._93[_D2]+this._83*this._a3[_D2]-this._43*this._b3[_D2]-this._53*this._c3[_D2];this._a3[_D2]=this._93[_D2];this._93[_D2]=_I2[_K2];this._c3[_D2]=this._b3[_D2];this._b3[_D2]=_i3;const _N2=(bypass[_K2]!==undefined)?bypass[_K2]:bypass[0];_J2[_K2]=(_N2>0)?_I2[_K2]:_i3;}}return this._P2;}_g3(_u3,_k3,_v3){if(_u3===this._q3&&_k3===this._e3&&_v3===this._r3)return;const _l3=2*Math.PI*_u3/sampleRate;
const _m3=Math.cos(_l3);const _w3=Math.sqrt(_v3);const _C3=_w3+1;const _D3=_w3-1;const _E3=_C3*_m3;const _F3=_D3*_m3;const _G3=_C3-_F3;const _H3=_C3+_F3;const alpha=Math.sin(_l3)/(2*_k3);const _I3=(2*Math.sqrt(_w3)*alpha);const _n3=_H3+_I3;const _43=-2*(_D3+_E3);const _53=_H3-_I3;const _63=_w3*(_G3+_I3);const _73=2*_w3*(_D3-_E3);const _83=_w3*(_G3-_I3);this._43=_43/_n3;this._53=_53/_n3;this._63=_63/_n3;this._73=_73/_n3;this._83=_83/_n3;this._q3=_u3;this._e3=_k3;this._r3=_v3;}}registerProcessor("lo-shelf-processor",
_r5);