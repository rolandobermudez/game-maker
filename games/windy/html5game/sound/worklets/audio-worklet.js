class _s3{constructor(_t3){this._u3=0;this._v3=0;this.feedback=0;this._w3=0;this.buffer=new Float32Array(_t3);this._x3=0;}process(_y3){const out=this.buffer[this._x3];this._w3=(this._w3*this._u3)+(out*this._v3);this.buffer[this._x3]=_y3+(this._w3*this.feedback);++this._x3;this._x3%=this.buffer.length;return out;}_z3(_A3){this.feedback=Math.min(Math.max(0,_A3),1);}_B3(_C3){this._u3=Math.min(Math.max(0,_C3),1);this._v3=1-this._u3;}}class _D3{constructor(_t3){this.feedback=0;this.buffer=new Float32Array(_t3);
this._x3=0;}process(_y3){const out=this.buffer[this._x3];this.buffer[this._x3]=_y3+(out*this.feedback);++this._x3;this._x3%=this.buffer.length;return(out-_y3);}_z3(_A3){this.feedback=Math.min(Math.max(0,_A3),1);}}class _E3 extends AudioWorkletProcessor{static _F3=8;static _G3=4;static _H3=0.015;static _I3=0.4;static _J3=0.28;static _K3=0.7;static _L3=[1116,1188,1277,1356,1422,1491,1557,1617];static _M3=[1139,1211,1300,1379,1445,1514,1580,1640];static _N3=[556,441,341,225];static _O3=[579,464,364,248];static get parameterDescriptors(){
return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"size",automationRate:"a-rate",defaultValue:0.7,minValue:0.0,maxValue:1.0},{name:"damp",automationRate:"a-rate",defaultValue:0.1,minValue:0.0,maxValue:1.0},{name:"mix",automationRate:"a-rate",defaultValue:0.35,minValue:0.0,maxValue:1.0}];}constructor(_P3){super();this._Q3();const _R3=_P3.outputChannelCount[0];this._S3=-1;this._T3=-1;this._U3=new Array(_R3);this._V3=new Array(_R3);const _W3=[_E3._L3,_E3._M3];const _X3=[_E3._N3,
_E3._O3];for(let _Y3=0;_Y3<_R3;++_Y3){this._U3[_Y3]=new Array(_E3._F3);this._V3[_Y3]=new Array(_E3._G3);for(let _Z3=0;_Z3<_E3._F3;++_Z3)this._U3[_Y3][_Z3]=new _s3(_W3[_Y3%_W3.length][_Z3]);for(let _Z3=0;_Z3<_E3._G3;++_Z3)this._V3[_Y3][_Z3]=new _D3(_X3[_Y3%_X3.length][_Z3]);}this.__3(0.5);this._B3(0.5);for(let _Y3=0;_Y3<_R3;++_Y3)for(let _Z3=0;_Z3<_E3._G3;++_Z3)this._V3[_Y3][_Z3]._z3(0.5);}process(_04,_14,parameters){const input=_04[0];const output=_14[0];const bypass=parameters.bypass;const size=parameters.size;
const damp=parameters.damp;const mix=parameters.mix;for(let _Y3=0;_Y3<input.length;++_Y3){const _24=input[_Y3];const _34=output[_Y3];for(let _44=0;_44<_24.length;++_44){const _44=(size[_44]!==undefined)?size[_44]:size[0];const _54=(damp[_44]!==undefined)?damp[_44]:damp[0];this.__3(_44);this._B3(_54);_34[_44]=_24[_44];let out=0;const _64=_24[_44]*_E3._H3;for(let _Z3=0;_Z3<_E3._F3;++_Z3)out+=this._U3[_Y3][_Z3].process(_64);for(let _Z3=0;_Z3<_E3._G3;++_Z3)out=this._V3[_Y3][_Z3].process(out);const _74=(bypass[_44]!==undefined)?bypass[_44]:bypass[0];
if(_74>0.0){continue;}const _84=(mix[_44]!==undefined)?mix[_44]:mix[0];_34[_44]*=(1-_84);_34[_44]+=(out*_84);}}return this._94;}__3(_t3){if(_t3===this._S3)return;const size=(_t3*_E3._J3)+_E3._K3;for(let _Y3=0;_Y3<this._U3.length;++_Y3)for(let _Z3=0;_Z3<_E3._F3;++_Z3)this._U3[_Y3][_Z3]._z3(size);this._S3=_t3;}_B3(_C3){if(_C3===this._T3)return;const damp=_C3*_E3._I3;for(let _Y3=0;_Y3<this._U3.length;++_Y3)for(let _Z3=0;_Z3<_E3._F3;++_Z3)this._U3[_Y3][_Z3]._B3(damp);this._T3=_C3;}}registerProcessor("reverb1-processor",
_E3);class _a4 extends AudioWorkletProcessor{static get parameterDescriptors(){return [];}constructor(){super();this._Q3();}process(_b4,_c4,_d4){const input=_b4[0];const _e4=_c4[0];const _f4=_c4[1];for(let _Y3=0;_Y3<input.length;++_Y3){const _24=input[_Y3];const _g4=_e4[_Y3];const _h4=_f4[_Y3];for(let _44=0;_44<_24.length;++_44){_g4[_44]=_24[_44];_h4[_44]=_24[_44];}}return this._94;}}class _i4 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,
minValue:0,maxValue:1}];}constructor(){super();this._Q3();}process(_b4,_c4,_d4){const _j4=_b4[0];const _k4=_b4[1];const output=_c4[0];const bypass=_d4.bypass;for(let _Y3=0;_Y3<_k4.length;++_Y3){const _l4=_j4[_Y3];const _m4=_k4[_Y3];const _34=output[_Y3];for(let _44=0;_44<_l4.length;++_44){const _74=(bypass[_44]!==undefined)?bypass[_44]:bypass[0];if(_74>0){_34[_44]=_m4[_44];}else {_34[_44]=_l4[_44];}}}return this._94;}}registerProcessor("eq-input",_a4);registerProcessor("eq-output",_i4);class _n4 extends AudioWorkletProcessor{
static get parameterDescriptors(){const _o4=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"cutoff",automationRate:"a-rate",defaultValue:Math.min(500.0,_o4),minValue:10.0,maxValue:_o4},{name:"q",automationRate:"a-rate",defaultValue:1.5,minValue:1.0,maxValue:100.0}];}constructor(_P3){super();this._Q3();const _R3=_P3.outputChannelCount[0];this._p4=0;this._q4=0;this._r4=0;this._s4=0;this._t4=0;this._u4=new Float32Array(_R3);this._v4=new Float32Array(_R3);
this._w4=new Float32Array(_R3);this._x4=new Float32Array(_R3);this._y4=-1;this._z4=-1;}process(_04,_14,parameters){const input=_04[0];const output=_14[0];const bypass=parameters.bypass;const cutoff=parameters.cutoff;const q=parameters.q;const _A4=(cutoff.length===1&&q.length===1);if(_A4)this._B4(cutoff[0],q[0]);for(let _Y3=0;_Y3<input.length;++_Y3){const _24=input[_Y3];const _34=output[_Y3];for(let _44=0;_44<_24.length;++_44){if(_A4===!1){const _Y3=(cutoff[_44]!==undefined)?cutoff[_44]:cutoff[0];const _C4=(q[_44]!==undefined)?q[_44]:q[0];
this._B4(_Y3,_C4);}const _D4=this._r4*_24[_44]+this._s4*this._u4[_Y3]+this._t4*this._v4[_Y3]-this._p4*this._w4[_Y3]-this._q4*this._x4[_Y3];this._v4[_Y3]=this._u4[_Y3];this._u4[_Y3]=_24[_44];this._x4[_Y3]=this._w4[_Y3];this._w4[_Y3]=_D4;const _74=(bypass[_44]!==undefined)?bypass[_44]:bypass[0];_34[_44]=(_74>0)?_24[_44]:_D4;}}return this._94;}_B4(_E4,_F4){if(_E4===this._y4&&_F4===this._z4)return;const _G4=2*Math.PI*_E4/sampleRate;const alpha=Math.sin(_G4)/(2*_F4);const _H4=Math.cos(_G4);const _I4=1+alpha;
const _p4=-2*_H4;const _q4=1-alpha;const _r4=(1-_H4)/2;const _s4=1-_H4;const _t4=(1-_H4)/2;this._p4=_p4/_I4;this._q4=_q4/_I4;this._r4=_r4/_I4;this._s4=_s4/_I4;this._t4=_t4/_I4;this._y4=_E4;this._z4=_F4;}}registerProcessor("lpf2-processor",_n4);class _J4 extends AudioWorkletProcessor{static get parameterDescriptors(){const _K4=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"freq",automationRate:"a-rate",defaultValue:Math.min(1500.0,
_K4),minValue:10.0,maxValue:_K4},{name:"q",automationRate:"a-rate",defaultValue:1.0,minValue:1.0,maxValue:100.0},{name:"gain",automationRate:"a-rate",defaultValue:1e-2,minValue:1e-6}];}constructor(_P3){super();this._Q3();const _R3=_P3.outputChannelCount[0];this._p4=0;this._q4=0;this._r4=0;this._s4=0;this._t4=0;this._u4=new Float32Array(_R3);this._v4=new Float32Array(_R3);this._w4=new Float32Array(_R3);this._x4=new Float32Array(_R3);this._L4=-1;this._z4=-1;this._M4=-1;}process(_04,_14,parameters){const input=_04[0];
const output=_14[0];const bypass=parameters.bypass;const freq=parameters.freq;const q=parameters.q;const gain=parameters.gain;const _A4=(freq.length===1&&q.length===1&&gain.length===1);if(_A4)this._B4(freq[0],q[0],gain[0]);for(let _Y3=0;_Y3<input.length;++_Y3){const _24=input[_Y3];const _34=output[_Y3];for(let _44=0;_44<_24.length;++_44){if(_A4===!1){const _N4=(freq[_44]!==undefined)?freq[_44]:freq[0];const _C4=(q[_44]!==undefined)?q[_44]:q[0];const _O4=(gain[_44]!==undefined)?gain[_44]:gain[0];this._B4(_N4,
_C4,_O4);}const _D4=this._r4*_24[_44]+this._s4*this._u4[_Y3]+this._t4*this._v4[_Y3]-this._p4*this._w4[_Y3]-this._q4*this._x4[_Y3];this._v4[_Y3]=this._u4[_Y3];this._u4[_Y3]=_24[_44];this._x4[_Y3]=this._w4[_Y3];this._w4[_Y3]=_D4;const _74=(bypass[_44]!==undefined)?bypass[_44]:bypass[0];_34[_44]=(_74>0)?_24[_44]:_D4;}}return this._94;}_B4(_P4,_F4,_Q4){if(_P4===this._L4&&_F4===this._z4&&_Q4===this._M4)return;const _G4=2*Math.PI*_P4/sampleRate;const _H4=Math.cos(_G4);const _R4=Math.sqrt(_Q4);const alpha=Math.sin(_G4)/(2*_F4);
const _S4=alpha/_R4;const _T4=alpha*_R4;const _I4=1+_S4;const _p4=-2*_H4;const _q4=1-_S4;const _r4=1+_T4;const _s4=_p4;const _t4=1-_T4;this._p4=_p4/_I4;this._q4=_q4/_I4;this._r4=_r4/_I4;this._s4=_s4/_I4;this._t4=_t4/_I4;this._L4=_P4;this._z4=_F4;this._M4=_Q4;}}registerProcessor("peak-eq-processor",_J4);class _U4 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"gain",automationRate:"a-rate",defaultValue:0.5,
minValue:0.0}];}constructor(){super();this._Q3();}process(_04,_14,parameters){const input=_04[0];const output=_14[0];const bypass=parameters.bypass;const gain=parameters.gain;for(let _Y3=0;_Y3<input.length;++_Y3){const _24=input[_Y3];const _34=output[_Y3];for(let _44=0;_44<_24.length;++_44){_34[_44]=_24[_44];const _74=(bypass[_44]!==undefined)?bypass[_44]:bypass[0];if(_74>0.0){continue;}const _O4=(gain[_44]!==undefined)?gain[_44]:gain[0];_34[_44]*=_O4;}}return this._94;}}registerProcessor("gain-processor",
_U4);class _V4 extends AudioWorkletProcessor{static get parameterDescriptors(){const _o4=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"cutoff",automationRate:"a-rate",defaultValue:Math.min(1500.0,_o4),minValue:10.0,maxValue:_o4},{name:"q",automationRate:"a-rate",defaultValue:1.5,minValue:1.0,maxValue:100.0}];}constructor(_P3){super();this._Q3();const _R3=_P3.outputChannelCount[0];this._p4=0;this._q4=0;this._r4=0;this._s4=0;this._t4=0;
this._u4=new Float32Array(_R3);this._v4=new Float32Array(_R3);this._w4=new Float32Array(_R3);this._x4=new Float32Array(_R3);this._y4=-1;this._z4=-1;}process(_04,_14,parameters){const input=_04[0];const output=_14[0];const bypass=parameters.bypass;const cutoff=parameters.cutoff;const q=parameters.q;const _A4=(cutoff.length===1&&q.length===1);if(_A4)this._B4(cutoff[0],q[0]);for(let _Y3=0;_Y3<input.length;++_Y3){const _24=input[_Y3];const _34=output[_Y3];for(let _44=0;_44<_24.length;++_44){if(_A4===!1){const _Y3=(cutoff[_44]!==undefined)?cutoff[_44]:cutoff[0];
const _C4=(q[_44]!==undefined)?q[_44]:q[0];this._B4(_Y3,_C4);}const _D4=this._r4*_24[_44]+this._s4*this._u4[_Y3]+this._t4*this._v4[_Y3]-this._p4*this._w4[_Y3]-this._q4*this._x4[_Y3];this._v4[_Y3]=this._u4[_Y3];this._u4[_Y3]=_24[_44];this._x4[_Y3]=this._w4[_Y3];this._w4[_Y3]=_D4;const _74=(bypass[_44]!==undefined)?bypass[_44]:bypass[0];_34[_44]=(_74>0)?_24[_44]:_D4;}}return this._94;}_B4(_E4,_F4){if(_E4===this._y4&&_F4===this._z4)return;const _G4=2*Math.PI*_E4/sampleRate;const alpha=Math.sin(_G4)/(2*_F4);
const _H4=Math.cos(_G4);const _I4=1+alpha;const _p4=-2*_H4;const _q4=1-alpha;const _r4=(1+_H4)/2;const _s4=-1-_H4;const _t4=(1+_H4)/2;this._p4=_p4/_I4;this._q4=_q4/_I4;this._r4=_r4/_I4;this._s4=_s4/_I4;this._t4=_t4/_I4;this._y4=_E4;this._z4=_F4;}}registerProcessor("hpf2-processor",_V4);class _W4 extends AudioWorkletProcessor{static get parameterDescriptors(){const _K4=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"freq",automationRate:"a-rate",
defaultValue:Math.min(5000.0,_K4),minValue:10.0,maxValue:_K4},{name:"q",automationRate:"a-rate",defaultValue:1.0,minValue:1.0,maxValue:100.0},{name:"gain",automationRate:"a-rate",defaultValue:1e-2,minValue:1e-6}];}constructor(_P3){super();this._Q3();const _R3=_P3.outputChannelCount[0];this._p4=0;this._q4=0;this._r4=0;this._s4=0;this._t4=0;this._u4=new Float32Array(_R3);this._v4=new Float32Array(_R3);this._w4=new Float32Array(_R3);this._x4=new Float32Array(_R3);this._L4=-1;this._z4=-1;this._M4=-1;}process(_04,
_14,parameters){const input=_04[0];const output=_14[0];const bypass=parameters.bypass;const freq=parameters.freq;const q=parameters.q;const gain=parameters.gain;const _A4=(freq.length===1&&q.length===1&&gain.length===1);if(_A4)this._B4(freq[0],q[0],gain[0]);for(let _Y3=0;_Y3<input.length;++_Y3){const _24=input[_Y3];const _34=output[_Y3];for(let _44=0;_44<_24.length;++_44){if(_A4===!1){const _N4=(freq[_44]!==undefined)?freq[_44]:freq[0];const _C4=(q[_44]!==undefined)?q[_44]:q[0];const _O4=(gain[_44]!==undefined)?gain[_44]:gain[0];
this._B4(_N4,_C4,_O4);}const _D4=this._r4*_24[_44]+this._s4*this._u4[_Y3]+this._t4*this._v4[_Y3]-this._p4*this._w4[_Y3]-this._q4*this._x4[_Y3];this._v4[_Y3]=this._u4[_Y3];this._u4[_Y3]=_24[_44];this._x4[_Y3]=this._w4[_Y3];this._w4[_Y3]=_D4;const _74=(bypass[_44]!==undefined)?bypass[_44]:bypass[0];_34[_44]=(_74>0)?_24[_44]:_D4;}}return this._94;}_B4(_P4,_F4,_Q4){if(_P4===this._L4&&_F4===this._z4&&_Q4===this._M4)return;const _G4=2*Math.PI*_P4/sampleRate;const _H4=Math.cos(_G4);const _R4=Math.sqrt(_Q4);const _X4=_R4+1;
const _Y4=_R4-1;const _Z4=_X4*_H4;const __4=_Y4*_H4;const _05=_X4-__4;const _15=_X4+__4;const alpha=Math.sin(_G4)/(2*_F4);const _25=(2*Math.sqrt(_R4)*alpha);const _I4=_05+_25;const _p4=2*(_Y4-_Z4);const _q4=_05-_25;const _r4=_R4*(_15+_25);const _s4=-2*_R4*(_Y4+_Z4);const _t4=_R4*(_15-_25);this._p4=_p4/_I4;this._q4=_q4/_I4;this._r4=_r4/_I4;this._s4=_s4/_I4;this._t4=_t4/_I4;this._L4=_P4;this._z4=_F4;this._M4=_Q4;}}registerProcessor("hi-shelf-processor",_W4);function _35(){}_35._45={_55:0,_65:1,_75:2,_85:3,_95:4,
_a5:5};_35._b5=function(_c5){return 1.0-_c5;};_35._d5=function(_c5){return _c5;};_35._e5=function(_c5){return 0.5*(Math.sin((_c5*2.0*Math.PI)-(Math.PI/2.0))+1.0);};_35._f5=function(_c5){if(_c5<0.5){return 0.0;}return 1.0;};_35._g5=function(_c5){if(_c5<0.5){return 2.0*_c5;}return 2.0-(2.0*_c5);};_35._h5=[_35._b5,_35._d5,_35._e5,_35._f5,_35._g5];_i5._j5=512;_i5._k5=1.0/_i5._j5;function _i5(_l5){this.data=new Float32Array(_i5._j5);for(let _Z3=0;_Z3<_i5._j5;++_Z3){this.data[_Z3]=_l5(_Z3*_i5._k5);}}_i5.prototype._m5=function(_c5){
_c5=Math.max(0.0,_c5);_c5=Math.min(_c5,1.0);const _n5=_c5*_i5._j5;const _o5=~~_n5;const _p5=_n5-_o5;let _q5=_o5;let _r5=_q5+1;if(_q5>=_i5._j5){_q5-=_i5._j5;}if(_r5>=_i5._j5){_r5-=_i5._j5;}const _s5=this.data[_q5];const _t5=this.data[_r5];return _s5+(_t5-_s5)*_p5;};;_u5._v5=[];_u5._w5=!1;_u5._x5=0.0;_u5._K4=20.0;function _u5(){this._y5=48000;this.shape=_35._45._75;this.freq=1.0;this._z5=0.0;this._k5=0.0;this._A5=0.0;if(_u5._w5==true){return;}for(let _Z3=0;_Z3<_35._45._a5;++_Z3){_u5._v5[_Z3]=new _i5(_35._h5[_Z3]);
}_u5._w5=true;}_u5._B5=function(){return(_u5._w5==!0);};_u5.prototype._C5=function(_D5){this._y5=_D5;this._E5();};;_u5.prototype._F5=function(_P4){_P4=Math.max(_u5._x5,_P4);_P4=Math.min(_P4,_u5._K4);this.freq=_P4;this._E5();};;_u5.prototype._G5=function(_H5){_H5=Math.max(0.0,_H5);_H5=Math.min(_H5,1.0);const _I5=_H5-this._A5;this._A5=_H5;this._z5+=_I5;while(this._z5>=1.0){this._z5-=1.0;}while(this._z5<0.0){this._z5+=1.0;}};;_u5.prototype._J5=function(_K5){_K5=Math.max(0,_K5);_K5=Math.min(_K5,_35._45._a5-1);
this.shape=_K5;};;_u5.prototype._m5=function(){const _L5=_u5._v5[this.shape]._m5(this._z5);this._z5+=this._k5;while(this._z5>=1.0){this._z5-=1.0;}return _L5;};;_u5.prototype._E5=function(){this._k5=this.freq/this._y5;};;class _M5 extends AudioWorkletProcessor{static _N5=5.0;static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"time",automationRate:"a-rate",defaultValue:0.2,minValue:0.0,maxValue:_M5._N5},{name:"feedback",automationRate:"a-rate",
defaultValue:0.5,minValue:0.0,maxValue:1.0},{name:"mix",automationRate:"a-rate",defaultValue:0.35,minValue:0.0,maxValue:1.0}];}constructor(_P3){super();this._Q3();const _R3=_P3.outputChannelCount[0];const _O5=(_M5._N5*sampleRate)+1;this.buffer=new Array(_R3);this._P5=new Uint32Array(_R3);for(let _Y3=0;_Y3<_R3;++_Y3)this.buffer[_Y3]=new Float32Array(_O5);}process(_04,_14,parameters){const input=_04[0];const output=_14[0];const bypass=parameters.bypass;const time=parameters.time;const feedback=parameters.feedback;
const mix=parameters.mix;for(let _Y3=0;_Y3<input.length;++_Y3){const _24=input[_Y3];const _34=output[_Y3];for(let _44=0;_44<_24.length;++_44){_34[_44]=_24[_44];const _Q5=(time[_44]!==undefined)?time[_44]:time[0];const _R5=this._m5(_Y3,_Q5);const _N4=(feedback[_44]!==undefined)?feedback[_44]:feedback[0];const _S5=_24[_44]+(_R5*_N4);this.write(_Y3,_S5);const _74=(bypass[_44]!==undefined)?bypass[_44]:bypass[0];if(_74>0.0){continue;}const _84=(mix[_44]!==undefined)?mix[_44]:mix[0];_34[_44]*=(1-_84);_34[_44]+=(_R5*_84);
}}return this._94;}_m5(_T5,_U5){const _V5=_U5*sampleRate;let _q5=(this._P5[_T5]-~~_V5);let _r5=(_q5-1);while(_q5<0)_q5+=this.buffer[_T5].length;while(_r5<0)_r5+=this.buffer[_T5].length;const _W5=_V5-~~_V5;const _s5=this.buffer[_T5][_q5];const _t5=this.buffer[_T5][_r5];return _s5+(_t5-_s5)*_W5;}write(_T5,_y3){++this._P5[_T5];this._P5[_T5]%=this.buffer[_T5].length;this.buffer[_T5][this._P5[_T5]]=_y3;}}registerProcessor("delay-processor",_M5);AudioWorkletProcessor.prototype._Q3=function(){this._94=true;this.port.onmessage=(_X5)=>{
if(_X5.data==="kill")this._94=false;};};;class _Y5 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1}];}constructor(){super();this._Q3();}process(_04,_14,parameters){const input=_04[0];const bypass=parameters.bypass;for(let _Y3=0;_Y3<input.length;++_Y3){const _24=input[_Y3];for(let _44=0;_44<_24.length;++_44){const _74=(bypass[_44]!==undefined)?bypass[_44]:bypass[0];_14[_74][_Y3][_44]=_24[_44];}}return this._94;
}}class _Z5 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"gain",automationRate:"a-rate",defaultValue:1,minValue:0}];}constructor(){super();this._Q3();}process(_04,_14,parameters){const _j4=_04[0];const _k4=_04[1];const output=_14[0];const gain=parameters.gain;for(let _Y3=0;_Y3<_k4.length;++_Y3){const _24=_k4[_Y3];const _34=output[_Y3];for(let _44=0;_44<_24.length;++_44)_34[_44]=_24[_44];}for(let _Y3=0;_Y3<_j4.length;++_Y3){const _24=_j4[_Y3];const _34=output[_Y3];for(let _44=0;_44<_24.length;
++_44){const _O4=(gain[_44]!==undefined)?gain[_44]:gain[0];_34[_44]+=_24[_44]*_O4;}}return this._94;}}registerProcessor("audio-bus-input",_Y5);registerProcessor("audio-bus-output",_Z5);class __5 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"gain",automationRate:"a-rate",defaultValue:1.0,minValue:0.0},{name:"factor",automationRate:"a-rate",defaultValue:20,minValue:1,maxValue:100},{name:"resolution",
automationRate:"a-rate",defaultValue:8,minValue:2,maxValue:16},{name:"mix",automationRate:"a-rate",defaultValue:0.8,minValue:0.0,maxValue:1.0}];}static _06=[undefined,undefined,2,4,8,16,32,64,128,256,512,1024,2048,4096,8192,16384,32768];constructor(_P3){super();this._Q3();const _R3=_P3.outputChannelCount[0];this._16=new Float32Array(_R3);this._26=new Uint32Array(_R3);}process(_04,_14,parameters){const input=_04[0];const output=_14[0];const bypass=parameters.bypass;const gain=parameters.gain;const factor=parameters.factor;
const resolution=parameters.resolution;const mix=parameters.mix;for(let _Y3=0;_Y3<input.length;++_Y3){const _24=input[_Y3];const _34=output[_Y3];for(let _44=0;_44<_24.length;++_44){_34[_44]=_24[_44];if(this._26[_Y3]===0)this._16[_Y3]=_24[_44];const _N4=(factor[_44]!==undefined)?factor[_44]:factor[0];++this._26[_Y3];this._26[_Y3]%=_N4;const _74=(bypass[_44]!==undefined)?bypass[_44]:bypass[0];if(_74>0.0){continue;}let _64=this._16[_Y3];const _O4=(gain[_44]!==undefined)?gain[_44]:gain[0];_64*=_O4;_64=Math.max(Math.min(_64,
1.0),-1.0);const _36=(resolution[_44]!==undefined)?resolution[_44]:resolution[0];const max=(_64>0.0)?__5._06[_36]-1:__5._06[_36];_64=Math.round(_64*max)/max;const _84=(mix[_44]!==undefined)?mix[_44]:mix[0];_34[_44]*=(1.0-_84);_34[_44]+=(_64*_84);}}return this._94;}}registerProcessor("bitcrusher-processor",__5);class _46 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"rate",automationRate:"a-rate",defaultValue:5.0,
minValue:0.0,maxValue:20.0},{name:"intensity",automationRate:"a-rate",defaultValue:1.0,minValue:0.0,maxValue:1.0},{name:"offset",automationRate:"a-rate",defaultValue:0.0,minValue:0.0,maxValue:1.0},{name:"shape",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:4}];}constructor(_P3){super();this._Q3();const _R3=_P3.outputChannelCount[0];this._56=new Array(_R3).fill(1.0);this._66=new Array(_R3).fill(0.0);this._76=new Array(_R3).fill(_35._45._55);this._86=new Array(_R3);for(let _Y3=0;_Y3<_R3;++_Y3){
this._86[_Y3]=new _u5();this._86[_Y3]._C5(sampleRate);this._86[_Y3]._F5(this._56[_Y3]);this._86[_Y3]._J5(this._76[_Y3]);if(_Y3%2===1){this._86[_Y3]._G5(this._66[_Y3]);}}}process(_04,_14,parameters){const input=_04[0];const output=_14[0];const bypass=parameters.bypass;const rate=parameters.rate;const intensity=parameters.intensity;const offset=parameters.offset;const shape=parameters.shape;for(let _Y3=0;_Y3<input.length;++_Y3){const _24=input[_Y3];const _34=output[_Y3];for(let _44=0;_44<_24.length;++_44){_34[_44]=_24[_44];
const _36=(rate[_44]!==undefined)?rate[_44]:rate[0];const _96=(offset[_44]!==undefined)?offset[_44]:offset[0];const _a6=(shape[_44]!==undefined)?shape[_44]:shape[0];this._b6(_Y3,_36,_96,_a6);const _c6=this._86[_Y3]._m5();const _74=(bypass[_44]!==undefined)?bypass[_44]:bypass[0];if(_74>0.0){continue;}const _Z3=(intensity[_44]!==undefined)?intensity[_44]:intensity[0];const out=_24[_44]*_c6*_Z3;_34[_44]*=(1.0-_Z3);_34[_44]+=out;}}return this._94;}_b6(_T5,_d6,_H5,_K5){if(_d6!==this._56[_T5]){this._86[_T5]._F5(_d6);
this._56[_T5]=_d6;}if(_H5!==this._66[_T5]){if(_T5%2===1){this._86[_T5]._G5(_H5);}this._66[_T5]=_H5;}if(_K5!==this._76[_T5]){this._86[_T5]._J5(_K5);this._76[_T5]=_K5;}}}registerProcessor("tremolo-processor",_46);class _e6{constructor(_U5=1e-3){this.setTime(_U5);}setTime(_U5){this._f6=Math.exp(-1/(_U5*sampleRate));}process(_g6,_h6){return _g6+this._f6*(_h6-_g6);}}class _i6{constructor(_j6,_k6){this._l6=new _e6(_j6);this._m6=new _e6(_k6);this._n6=_j6;this._o6=_k6;}_p6(_U5){if(_U5===this._n6)return;this._l6.setTime(_U5);
this._n6=_U5;}_q6(_U5){if(_U5===this._o6)return;this._m6.setTime(_U5);this._o6=_U5;}process(_g6,_h6){if(_g6>_h6)return this._l6.process(_g6,_h6);else return this._m6.process(_g6,_h6);}}class _r6 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"ingain",automationRate:"a-rate",defaultValue:1,minValue:0},{name:"threshold",automationRate:"a-rate",defaultValue:0.125,minValue:1e-3,maxValue:1},{name:"ratio",
automationRate:"a-rate",defaultValue:4,minValue:1},{name:"attack",automationRate:"a-rate",defaultValue:0.05,minValue:1e-3,maxValue:1e-1},{name:"release",automationRate:"a-rate",defaultValue:0.25,minValue:1e-2,maxValue:1},{name:"outgain",automationRate:"a-rate",defaultValue:1,minValue:0}];}constructor(_s6){super();this._Q3();const _l6=_r6.parameterDescriptors.find(_t6=>_t6.name==="attack");const _m6=_r6.parameterDescriptors.find(_t6=>_t6.name==="release");this._u6=new _i6(_l6.defaultValue,_m6.defaultValue);
this._v6=0;}process(_w6,_x6,_y6){const input=_w6[0];const output=_x6[0];const bypass=_y6.bypass;const ingain=_y6.ingain;const outgain=_y6.outgain;const threshold=_y6.threshold;const ratio=_y6.ratio;const attack=_y6.attack;const release=_y6.release;if(input.length===0)return this._94;for(let _44=0;_44<input[0].length;++_44){let _z6=input.map(_A6=>_A6[_44]);output.forEach((_A6,_B6)=>{_A6[_44]=_z6[_B6];});const _C6=(ingain[_44]!==undefined)?ingain[_44]:ingain[0];_z6=_z6.map(_D6=>_D6*=_C6);const rect=_z6.map(_D6=>Math.abs(_D6));
const max=Math.max(...rect);const _E6=_F6(max);const _Q5=(threshold[_44]!==undefined)?threshold[_44]:threshold[0];const _G6=_F6(_Q5);const _H6=Math.max(0,_E6-_G6);const _l6=(attack[_44]!==undefined)?attack[_44]:attack[0];const _m6=(release[_44]!==undefined)?release[_44]:release[0];this._u6._p6(_l6);this._u6._q6(_m6);this._v6=this._u6.process(_H6,this._v6);const _74=(bypass[_44]!==undefined)?bypass[_44]:bypass[0];if(_74>0)continue;const _36=(ratio[_44]!==undefined)?ratio[_44]:ratio[0];const _I6=(this._v6/_36)-this._v6;
const _O4=_J6(_I6);_z6=_z6.map(_D6=>_D6*=_O4);const _K6=(outgain[_44]!==undefined)?outgain[_44]:outgain[0];_z6=_z6.map(_D6=>_D6*=_K6);output.forEach((_A6,_B6)=>{_A6[_44]=_z6[_B6];});}return this._94;}}function _F6(_L6){return 20*Math.log10(_L6);}function _J6(_L6){return Math.pow(10,_L6/20);}registerProcessor("compressor-processor",_r6);class _M6 extends AudioWorkletProcessor{static get parameterDescriptors(){const _K4=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,
minValue:0,maxValue:1},{name:"freq",automationRate:"a-rate",defaultValue:Math.min(500.0,_K4),minValue:10.0,maxValue:_K4},{name:"q",automationRate:"a-rate",defaultValue:1.0,minValue:1.0,maxValue:100.0},{name:"gain",automationRate:"a-rate",defaultValue:1e-2,minValue:1e-6}];}constructor(_P3){super();this._Q3();const _R3=_P3.outputChannelCount[0];this._p4=0;this._q4=0;this._r4=0;this._s4=0;this._t4=0;this._u4=new Float32Array(_R3);this._v4=new Float32Array(_R3);this._w4=new Float32Array(_R3);this._x4=new Float32Array(_R3);
this._L4=-1;this._z4=-1;this._M4=-1;}process(_04,_14,parameters){const input=_04[0];const output=_14[0];const bypass=parameters.bypass;const freq=parameters.freq;const q=parameters.q;const gain=parameters.gain;const _A4=(freq.length===1&&q.length===1&&gain.length===1);if(_A4)this._B4(freq[0],q[0],gain[0]);for(let _Y3=0;_Y3<input.length;++_Y3){const _24=input[_Y3];const _34=output[_Y3];for(let _44=0;_44<_24.length;++_44){if(_A4===!1){const _N4=(freq[_44]!==undefined)?freq[_44]:freq[0];const _C4=(q[_44]!==undefined)?q[_44]:q[0];
const _O4=(gain[_44]!==undefined)?gain[_44]:gain[0];this._B4(_N4,_C4,_O4);}const _D4=this._r4*_24[_44]+this._s4*this._u4[_Y3]+this._t4*this._v4[_Y3]-this._p4*this._w4[_Y3]-this._q4*this._x4[_Y3];this._v4[_Y3]=this._u4[_Y3];this._u4[_Y3]=_24[_44];this._x4[_Y3]=this._w4[_Y3];this._w4[_Y3]=_D4;const _74=(bypass[_44]!==undefined)?bypass[_44]:bypass[0];_34[_44]=(_74>0)?_24[_44]:_D4;}}return this._94;}_B4(_P4,_F4,_Q4){if(_P4===this._L4&&_F4===this._z4&&_Q4===this._M4)return;const _G4=2*Math.PI*_P4/sampleRate;
const _H4=Math.cos(_G4);const _R4=Math.sqrt(_Q4);const _X4=_R4+1;const _Y4=_R4-1;const _Z4=_X4*_H4;const __4=_Y4*_H4;const _05=_X4-__4;const _15=_X4+__4;const alpha=Math.sin(_G4)/(2*_F4);const _25=(2*Math.sqrt(_R4)*alpha);const _I4=_15+_25;const _p4=-2*(_Y4+_Z4);const _q4=_15-_25;const _r4=_R4*(_05+_25);const _s4=2*_R4*(_Y4-_Z4);const _t4=_R4*(_05-_25);this._p4=_p4/_I4;this._q4=_q4/_I4;this._r4=_r4/_I4;this._s4=_s4/_I4;this._t4=_t4/_I4;this._L4=_P4;this._z4=_F4;this._M4=_Q4;}}registerProcessor("lo-shelf-processor",
_M6);