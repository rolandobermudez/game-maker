class _L1{constructor(_M1){this._N1=0;this._O1=0;this.feedback=0;this._P1=0;this.buffer=new Float32Array(_M1);this._Q1=0;}process(_R1){const out=this.buffer[this._Q1];this._P1=(this._P1*this._N1)+(out*this._O1);this.buffer[this._Q1]=_R1+(this._P1*this.feedback);++this._Q1;this._Q1%=this.buffer.length;return out;}_S1(_T1){this.feedback=Math.min(Math.max(0,_T1),1);}_U1(_V1){this._N1=Math.min(Math.max(0,_V1),1);this._O1=1-this._N1;}}class _W1{constructor(_M1){this.feedback=0;this.buffer=new Float32Array(_M1);
this._Q1=0;}process(_R1){const out=this.buffer[this._Q1];this.buffer[this._Q1]=_R1+(out*this.feedback);++this._Q1;this._Q1%=this.buffer.length;return(out-_R1);}_S1(_T1){this.feedback=Math.min(Math.max(0,_T1),1);}}class _X1 extends AudioWorkletProcessor{static _Y1=8;static _Z1=4;static __1=0.015;static _02=0.4;static _12=0.28;static _22=0.7;static _32=[1116,1188,1277,1356,1422,1491,1557,1617];static _42=[1139,1211,1300,1379,1445,1514,1580,1640];static _52=[556,441,341,225];static _62=[579,464,364,248];static get parameterDescriptors(){
return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"size",automationRate:"a-rate",defaultValue:0.7,minValue:0.0,maxValue:1.0},{name:"damp",automationRate:"a-rate",defaultValue:0.1,minValue:0.0,maxValue:1.0},{name:"mix",automationRate:"a-rate",defaultValue:0.35,minValue:0.0,maxValue:1.0}];}constructor(_72){super();this._82();const _92=_72.outputChannelCount[0];this._a2=-1;this._b2=-1;this._c2=new Array(_92);this._d2=new Array(_92);const _e2=[_X1._32,_X1._42];const _f2=[_X1._52,
_X1._62];for(let _g2=0;_g2<_92;++_g2){this._c2[_g2]=new Array(_X1._Y1);this._d2[_g2]=new Array(_X1._Z1);for(let _h2=0;_h2<_X1._Y1;++_h2)this._c2[_g2][_h2]=new _L1(_e2[_g2%_e2.length][_h2]);for(let _h2=0;_h2<_X1._Z1;++_h2)this._d2[_g2][_h2]=new _W1(_f2[_g2%_f2.length][_h2]);}this._i2(0.5);this._U1(0.5);for(let _g2=0;_g2<_92;++_g2)for(let _h2=0;_h2<_X1._Z1;++_h2)this._d2[_g2][_h2]._S1(0.5);}process(_j2,_k2,parameters){const input=_j2[0];const output=_k2[0];const bypass=parameters.bypass;const size=parameters.size;
const damp=parameters.damp;const mix=parameters.mix;for(let _g2=0;_g2<input.length;++_g2){const _l2=input[_g2];const _m2=output[_g2];for(let _n2=0;_n2<_l2.length;++_n2){const _n2=(size[_n2]!==undefined)?size[_n2]:size[0];const _o2=(damp[_n2]!==undefined)?damp[_n2]:damp[0];this._i2(_n2);this._U1(_o2);_m2[_n2]=_l2[_n2];let out=0;const _p2=_l2[_n2]*_X1.__1;for(let _h2=0;_h2<_X1._Y1;++_h2)out+=this._c2[_g2][_h2].process(_p2);for(let _h2=0;_h2<_X1._Z1;++_h2)out=this._d2[_g2][_h2].process(out);const _q2=(bypass[_n2]!==undefined)?bypass[_n2]:bypass[0];
if(_q2>0.0){continue;}const _r2=(mix[_n2]!==undefined)?mix[_n2]:mix[0];_m2[_n2]*=(1-_r2);_m2[_n2]+=(out*_r2);}}return this._s2;}_i2(_M1){if(_M1===this._a2)return;const size=(_M1*_X1._12)+_X1._22;for(let _g2=0;_g2<this._c2.length;++_g2)for(let _h2=0;_h2<_X1._Y1;++_h2)this._c2[_g2][_h2]._S1(size);this._a2=_M1;}_U1(_V1){if(_V1===this._b2)return;const damp=_V1*_X1._02;for(let _g2=0;_g2<this._c2.length;++_g2)for(let _h2=0;_h2<_X1._Y1;++_h2)this._c2[_g2][_h2]._U1(damp);this._b2=_V1;}}registerProcessor("reverb1-processor",
_X1);class _t2 extends AudioWorkletProcessor{static get parameterDescriptors(){return [];}constructor(){super();this._82();}process(_u2,_v2,_w2){const input=_u2[0];const _x2=_v2[0];const _y2=_v2[1];for(let _g2=0;_g2<input.length;++_g2){const _l2=input[_g2];const _z2=_x2[_g2];const _A2=_y2[_g2];for(let _n2=0;_n2<_l2.length;++_n2){_z2[_n2]=_l2[_n2];_A2[_n2]=_l2[_n2];}}return this._s2;}}class _B2 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,
minValue:0,maxValue:1}];}constructor(){super();this._82();}process(_u2,_v2,_w2){const _C2=_u2[0];const _D2=_u2[1];const output=_v2[0];const bypass=_w2.bypass;for(let _g2=0;_g2<_D2.length;++_g2){const _E2=_C2[_g2];const _F2=_D2[_g2];const _m2=output[_g2];for(let _n2=0;_n2<_E2.length;++_n2){const _q2=(bypass[_n2]!==undefined)?bypass[_n2]:bypass[0];if(_q2>0){_m2[_n2]=_F2[_n2];}else {_m2[_n2]=_E2[_n2];}}}return this._s2;}}registerProcessor("eq-input",_t2);registerProcessor("eq-output",_B2);class _G2 extends AudioWorkletProcessor{
static get parameterDescriptors(){const _H2=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"cutoff",automationRate:"a-rate",defaultValue:Math.min(500.0,_H2),minValue:10.0,maxValue:_H2},{name:"q",automationRate:"a-rate",defaultValue:1.5,minValue:1.0,maxValue:100.0}];}constructor(_72){super();this._82();const _92=_72.outputChannelCount[0];this._I2=0;this._J2=0;this._K2=0;this._L2=0;this._M2=0;this._N2=new Float32Array(_92);this._O2=new Float32Array(_92);
this._P2=new Float32Array(_92);this._Q2=new Float32Array(_92);this._R2=-1;this._S2=-1;}process(_j2,_k2,parameters){const input=_j2[0];const output=_k2[0];const bypass=parameters.bypass;const cutoff=parameters.cutoff;const q=parameters.q;const _T2=(cutoff.length===1&&q.length===1);if(_T2)this._U2(cutoff[0],q[0]);for(let _g2=0;_g2<input.length;++_g2){const _l2=input[_g2];const _m2=output[_g2];for(let _n2=0;_n2<_l2.length;++_n2){if(_T2===!1){const _g2=(cutoff[_n2]!==undefined)?cutoff[_n2]:cutoff[0];const _V2=(q[_n2]!==undefined)?q[_n2]:q[0];
this._U2(_g2,_V2);}const _W2=this._K2*_l2[_n2]+this._L2*this._N2[_g2]+this._M2*this._O2[_g2]-this._I2*this._P2[_g2]-this._J2*this._Q2[_g2];this._O2[_g2]=this._N2[_g2];this._N2[_g2]=_l2[_n2];this._Q2[_g2]=this._P2[_g2];this._P2[_g2]=_W2;const _q2=(bypass[_n2]!==undefined)?bypass[_n2]:bypass[0];_m2[_n2]=(_q2>0)?_l2[_n2]:_W2;}}return this._s2;}_U2(_X2,_Y2){if(_X2===this._R2&&_Y2===this._S2)return;const _Z2=2*Math.PI*_X2/sampleRate;const alpha=Math.sin(_Z2)/(2*_Y2);const __2=Math.cos(_Z2);const _03=1+alpha;
const _I2=-2*__2;const _J2=1-alpha;const _K2=(1-__2)/2;const _L2=1-__2;const _M2=(1-__2)/2;this._I2=_I2/_03;this._J2=_J2/_03;this._K2=_K2/_03;this._L2=_L2/_03;this._M2=_M2/_03;this._R2=_X2;this._S2=_Y2;}}registerProcessor("lpf2-processor",_G2);class _13 extends AudioWorkletProcessor{static get parameterDescriptors(){const _23=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"freq",automationRate:"a-rate",defaultValue:Math.min(1500.0,
_23),minValue:10.0,maxValue:_23},{name:"q",automationRate:"a-rate",defaultValue:1.0,minValue:1.0,maxValue:100.0},{name:"gain",automationRate:"a-rate",defaultValue:1e-2,minValue:1e-6}];}constructor(_72){super();this._82();const _92=_72.outputChannelCount[0];this._I2=0;this._J2=0;this._K2=0;this._L2=0;this._M2=0;this._N2=new Float32Array(_92);this._O2=new Float32Array(_92);this._P2=new Float32Array(_92);this._Q2=new Float32Array(_92);this._33=-1;this._S2=-1;this._43=-1;}process(_j2,_k2,parameters){const input=_j2[0];
const output=_k2[0];const bypass=parameters.bypass;const freq=parameters.freq;const q=parameters.q;const gain=parameters.gain;const _T2=(freq.length===1&&q.length===1&&gain.length===1);if(_T2)this._U2(freq[0],q[0],gain[0]);for(let _g2=0;_g2<input.length;++_g2){const _l2=input[_g2];const _m2=output[_g2];for(let _n2=0;_n2<_l2.length;++_n2){if(_T2===!1){const _53=(freq[_n2]!==undefined)?freq[_n2]:freq[0];const _V2=(q[_n2]!==undefined)?q[_n2]:q[0];const _63=(gain[_n2]!==undefined)?gain[_n2]:gain[0];this._U2(_53,
_V2,_63);}const _W2=this._K2*_l2[_n2]+this._L2*this._N2[_g2]+this._M2*this._O2[_g2]-this._I2*this._P2[_g2]-this._J2*this._Q2[_g2];this._O2[_g2]=this._N2[_g2];this._N2[_g2]=_l2[_n2];this._Q2[_g2]=this._P2[_g2];this._P2[_g2]=_W2;const _q2=(bypass[_n2]!==undefined)?bypass[_n2]:bypass[0];_m2[_n2]=(_q2>0)?_l2[_n2]:_W2;}}return this._s2;}_U2(_73,_Y2,_83){if(_73===this._33&&_Y2===this._S2&&_83===this._43)return;const _Z2=2*Math.PI*_73/sampleRate;const __2=Math.cos(_Z2);const _93=Math.sqrt(_83);const alpha=Math.sin(_Z2)/(2*_Y2);
const _a3=alpha/_93;const _b3=alpha*_93;const _03=1+_a3;const _I2=-2*__2;const _J2=1-_a3;const _K2=1+_b3;const _L2=_I2;const _M2=1-_b3;this._I2=_I2/_03;this._J2=_J2/_03;this._K2=_K2/_03;this._L2=_L2/_03;this._M2=_M2/_03;this._33=_73;this._S2=_Y2;this._43=_83;}}registerProcessor("peak-eq-processor",_13);class _c3 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"gain",automationRate:"a-rate",defaultValue:0.5,
minValue:0.0}];}constructor(){super();this._82();}process(_j2,_k2,parameters){const input=_j2[0];const output=_k2[0];const bypass=parameters.bypass;const gain=parameters.gain;for(let _g2=0;_g2<input.length;++_g2){const _l2=input[_g2];const _m2=output[_g2];for(let _n2=0;_n2<_l2.length;++_n2){_m2[_n2]=_l2[_n2];const _q2=(bypass[_n2]!==undefined)?bypass[_n2]:bypass[0];if(_q2>0.0){continue;}const _63=(gain[_n2]!==undefined)?gain[_n2]:gain[0];_m2[_n2]*=_63;}}return this._s2;}}registerProcessor("gain-processor",
_c3);class _d3 extends AudioWorkletProcessor{static get parameterDescriptors(){const _H2=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"cutoff",automationRate:"a-rate",defaultValue:Math.min(1500.0,_H2),minValue:10.0,maxValue:_H2},{name:"q",automationRate:"a-rate",defaultValue:1.5,minValue:1.0,maxValue:100.0}];}constructor(_72){super();this._82();const _92=_72.outputChannelCount[0];this._I2=0;this._J2=0;this._K2=0;this._L2=0;this._M2=0;
this._N2=new Float32Array(_92);this._O2=new Float32Array(_92);this._P2=new Float32Array(_92);this._Q2=new Float32Array(_92);this._R2=-1;this._S2=-1;}process(_j2,_k2,parameters){const input=_j2[0];const output=_k2[0];const bypass=parameters.bypass;const cutoff=parameters.cutoff;const q=parameters.q;const _T2=(cutoff.length===1&&q.length===1);if(_T2)this._U2(cutoff[0],q[0]);for(let _g2=0;_g2<input.length;++_g2){const _l2=input[_g2];const _m2=output[_g2];for(let _n2=0;_n2<_l2.length;++_n2){if(_T2===!1){const _g2=(cutoff[_n2]!==undefined)?cutoff[_n2]:cutoff[0];
const _V2=(q[_n2]!==undefined)?q[_n2]:q[0];this._U2(_g2,_V2);}const _W2=this._K2*_l2[_n2]+this._L2*this._N2[_g2]+this._M2*this._O2[_g2]-this._I2*this._P2[_g2]-this._J2*this._Q2[_g2];this._O2[_g2]=this._N2[_g2];this._N2[_g2]=_l2[_n2];this._Q2[_g2]=this._P2[_g2];this._P2[_g2]=_W2;const _q2=(bypass[_n2]!==undefined)?bypass[_n2]:bypass[0];_m2[_n2]=(_q2>0)?_l2[_n2]:_W2;}}return this._s2;}_U2(_X2,_Y2){if(_X2===this._R2&&_Y2===this._S2)return;const _Z2=2*Math.PI*_X2/sampleRate;const alpha=Math.sin(_Z2)/(2*_Y2);
const __2=Math.cos(_Z2);const _03=1+alpha;const _I2=-2*__2;const _J2=1-alpha;const _K2=(1+__2)/2;const _L2=-1-__2;const _M2=(1+__2)/2;this._I2=_I2/_03;this._J2=_J2/_03;this._K2=_K2/_03;this._L2=_L2/_03;this._M2=_M2/_03;this._R2=_X2;this._S2=_Y2;}}registerProcessor("hpf2-processor",_d3);class _e3 extends AudioWorkletProcessor{static get parameterDescriptors(){const _23=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"freq",automationRate:"a-rate",
defaultValue:Math.min(5000.0,_23),minValue:10.0,maxValue:_23},{name:"q",automationRate:"a-rate",defaultValue:1.0,minValue:1.0,maxValue:100.0},{name:"gain",automationRate:"a-rate",defaultValue:1e-2,minValue:1e-6}];}constructor(_72){super();this._82();const _92=_72.outputChannelCount[0];this._I2=0;this._J2=0;this._K2=0;this._L2=0;this._M2=0;this._N2=new Float32Array(_92);this._O2=new Float32Array(_92);this._P2=new Float32Array(_92);this._Q2=new Float32Array(_92);this._33=-1;this._S2=-1;this._43=-1;}process(_j2,
_k2,parameters){const input=_j2[0];const output=_k2[0];const bypass=parameters.bypass;const freq=parameters.freq;const q=parameters.q;const gain=parameters.gain;const _T2=(freq.length===1&&q.length===1&&gain.length===1);if(_T2)this._U2(freq[0],q[0],gain[0]);for(let _g2=0;_g2<input.length;++_g2){const _l2=input[_g2];const _m2=output[_g2];for(let _n2=0;_n2<_l2.length;++_n2){if(_T2===!1){const _53=(freq[_n2]!==undefined)?freq[_n2]:freq[0];const _V2=(q[_n2]!==undefined)?q[_n2]:q[0];const _63=(gain[_n2]!==undefined)?gain[_n2]:gain[0];
this._U2(_53,_V2,_63);}const _W2=this._K2*_l2[_n2]+this._L2*this._N2[_g2]+this._M2*this._O2[_g2]-this._I2*this._P2[_g2]-this._J2*this._Q2[_g2];this._O2[_g2]=this._N2[_g2];this._N2[_g2]=_l2[_n2];this._Q2[_g2]=this._P2[_g2];this._P2[_g2]=_W2;const _q2=(bypass[_n2]!==undefined)?bypass[_n2]:bypass[0];_m2[_n2]=(_q2>0)?_l2[_n2]:_W2;}}return this._s2;}_U2(_73,_Y2,_83){if(_73===this._33&&_Y2===this._S2&&_83===this._43)return;const _Z2=2*Math.PI*_73/sampleRate;const __2=Math.cos(_Z2);const _93=Math.sqrt(_83);const _f3=_93+1;
const _g3=_93-1;const _h3=_f3*__2;const _i3=_g3*__2;const _j3=_f3-_i3;const _k3=_f3+_i3;const alpha=Math.sin(_Z2)/(2*_Y2);const _l3=(2*Math.sqrt(_93)*alpha);const _03=_j3+_l3;const _I2=2*(_g3-_h3);const _J2=_j3-_l3;const _K2=_93*(_k3+_l3);const _L2=-2*_93*(_g3+_h3);const _M2=_93*(_k3-_l3);this._I2=_I2/_03;this._J2=_J2/_03;this._K2=_K2/_03;this._L2=_L2/_03;this._M2=_M2/_03;this._33=_73;this._S2=_Y2;this._43=_83;}}registerProcessor("hi-shelf-processor",_e3);function _m3(){}_m3._n3={_o3:0,_p3:1,_q3:2,_r3:3,_s3:4,
_t3:5};_m3._u3=function(_v3){return 1.0-_v3;};_m3._w3=function(_v3){return _v3;};_m3._x3=function(_v3){return 0.5*(Math.sin((_v3*2.0*Math.PI)-(Math.PI/2.0))+1.0);};_m3._y3=function(_v3){if(_v3<0.5){return 0.0;}return 1.0;};_m3._z3=function(_v3){if(_v3<0.5){return 2.0*_v3;}return 2.0-(2.0*_v3);};_m3._A3=[_m3._u3,_m3._w3,_m3._x3,_m3._y3,_m3._z3];_B3._C3=512;_B3._D3=1.0/_B3._C3;function _B3(_E3){this.data=new Float32Array(_B3._C3);for(let _h2=0;_h2<_B3._C3;++_h2){this.data[_h2]=_E3(_h2*_B3._D3);}}_B3.prototype._F3=function(_v3){
_v3=Math.max(0.0,_v3);_v3=Math.min(_v3,1.0);const _G3=_v3*_B3._C3;const _H3=~~_G3;const _I3=_G3-_H3;let _J3=_H3;let _K3=_J3+1;if(_J3>=_B3._C3){_J3-=_B3._C3;}if(_K3>=_B3._C3){_K3-=_B3._C3;}const _L3=this.data[_J3];const _M3=this.data[_K3];return _L3+(_M3-_L3)*_I3;};;_N3._O3=[];_N3._P3=!1;_N3._Q3=0.0;_N3._23=20.0;function _N3(){this._R3=48000;this.shape=_m3._n3._q3;this.freq=1.0;this._S3=0.0;this._D3=0.0;this._T3=0.0;if(_N3._P3==true){return;}for(let _h2=0;_h2<_m3._n3._t3;++_h2){_N3._O3[_h2]=new _B3(_m3._A3[_h2]);
}_N3._P3=true;}_N3._U3=function(){return(_N3._P3==!0);};_N3.prototype._V3=function(_W3){this._R3=_W3;this._X3();};;_N3.prototype._Y3=function(_73){_73=Math.max(_N3._Q3,_73);_73=Math.min(_73,_N3._23);this.freq=_73;this._X3();};;_N3.prototype._Z3=function(__3){__3=Math.max(0.0,__3);__3=Math.min(__3,1.0);const _04=__3-this._T3;this._T3=__3;this._S3+=_04;while(this._S3>=1.0){this._S3-=1.0;}while(this._S3<0.0){this._S3+=1.0;}};;_N3.prototype._14=function(_24){_24=Math.max(0,_24);_24=Math.min(_24,_m3._n3._t3-1);
this.shape=_24;};;_N3.prototype._F3=function(){const _34=_N3._O3[this.shape]._F3(this._S3);this._S3+=this._D3;while(this._S3>=1.0){this._S3-=1.0;}return _34;};;_N3.prototype._X3=function(){this._D3=this.freq/this._R3;};;class _44 extends AudioWorkletProcessor{static _54=5.0;static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"time",automationRate:"a-rate",defaultValue:0.2,minValue:0.0,maxValue:_44._54},{name:"feedback",automationRate:"a-rate",
defaultValue:0.5,minValue:0.0,maxValue:1.0},{name:"mix",automationRate:"a-rate",defaultValue:0.35,minValue:0.0,maxValue:1.0}];}constructor(_72){super();this._82();const _92=_72.outputChannelCount[0];const _64=(_44._54*sampleRate)+1;this.buffer=new Array(_92);this._74=new Uint32Array(_92);for(let _g2=0;_g2<_92;++_g2)this.buffer[_g2]=new Float32Array(_64);}process(_j2,_k2,parameters){const input=_j2[0];const output=_k2[0];const bypass=parameters.bypass;const time=parameters.time;const feedback=parameters.feedback;
const mix=parameters.mix;for(let _g2=0;_g2<input.length;++_g2){const _l2=input[_g2];const _m2=output[_g2];for(let _n2=0;_n2<_l2.length;++_n2){_m2[_n2]=_l2[_n2];const _84=(time[_n2]!==undefined)?time[_n2]:time[0];const _94=this._F3(_g2,_84);const _53=(feedback[_n2]!==undefined)?feedback[_n2]:feedback[0];const _a4=_l2[_n2]+(_94*_53);this.write(_g2,_a4);const _q2=(bypass[_n2]!==undefined)?bypass[_n2]:bypass[0];if(_q2>0.0){continue;}const _r2=(mix[_n2]!==undefined)?mix[_n2]:mix[0];_m2[_n2]*=(1-_r2);_m2[_n2]+=(_94*_r2);
}}return this._s2;}_F3(_b4,_c4){const _d4=_c4*sampleRate;let _J3=(this._74[_b4]-~~_d4);let _K3=(_J3-1);while(_J3<0)_J3+=this.buffer[_b4].length;while(_K3<0)_K3+=this.buffer[_b4].length;const _e4=_d4-~~_d4;const _L3=this.buffer[_b4][_J3];const _M3=this.buffer[_b4][_K3];return _L3+(_M3-_L3)*_e4;}write(_b4,_R1){++this._74[_b4];this._74[_b4]%=this.buffer[_b4].length;this.buffer[_b4][this._74[_b4]]=_R1;}}registerProcessor("delay-processor",_44);AudioWorkletProcessor.prototype._82=function(){this._s2=true;this.port.onmessage=(_f4)=>{
if(_f4.data==="kill")this._s2=false;};};;class _g4 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1}];}constructor(){super();this._82();}process(_j2,_k2,parameters){const input=_j2[0];const bypass=parameters.bypass;for(let _g2=0;_g2<input.length;++_g2){const _l2=input[_g2];for(let _n2=0;_n2<_l2.length;++_n2){const _q2=(bypass[_n2]!==undefined)?bypass[_n2]:bypass[0];_k2[_q2][_g2][_n2]=_l2[_n2];}}return this._s2;
}}class _h4 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"gain",automationRate:"a-rate",defaultValue:1,minValue:0}];}constructor(){super();this._82();}process(_j2,_k2,parameters){const _C2=_j2[0];const _D2=_j2[1];const output=_k2[0];const gain=parameters.gain;for(let _g2=0;_g2<_D2.length;++_g2){const _l2=_D2[_g2];const _m2=output[_g2];for(let _n2=0;_n2<_l2.length;++_n2)_m2[_n2]=_l2[_n2];}for(let _g2=0;_g2<_C2.length;++_g2){const _l2=_C2[_g2];const _m2=output[_g2];for(let _n2=0;_n2<_l2.length;
++_n2){const _63=(gain[_n2]!==undefined)?gain[_n2]:gain[0];_m2[_n2]+=_l2[_n2]*_63;}}return this._s2;}}registerProcessor("audio-bus-input",_g4);registerProcessor("audio-bus-output",_h4);class _i4 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"gain",automationRate:"a-rate",defaultValue:1.0,minValue:0.0},{name:"factor",automationRate:"a-rate",defaultValue:20,minValue:1,maxValue:100},{name:"resolution",
automationRate:"a-rate",defaultValue:8,minValue:2,maxValue:16},{name:"mix",automationRate:"a-rate",defaultValue:0.8,minValue:0.0,maxValue:1.0}];}static _j4=[undefined,undefined,2,4,8,16,32,64,128,256,512,1024,2048,4096,8192,16384,32768];constructor(_72){super();this._82();const _92=_72.outputChannelCount[0];this._k4=new Float32Array(_92);this._l4=new Uint32Array(_92);}process(_j2,_k2,parameters){const input=_j2[0];const output=_k2[0];const bypass=parameters.bypass;const gain=parameters.gain;const factor=parameters.factor;
const resolution=parameters.resolution;const mix=parameters.mix;for(let _g2=0;_g2<input.length;++_g2){const _l2=input[_g2];const _m2=output[_g2];for(let _n2=0;_n2<_l2.length;++_n2){_m2[_n2]=_l2[_n2];if(this._l4[_g2]===0)this._k4[_g2]=_l2[_n2];const _53=(factor[_n2]!==undefined)?factor[_n2]:factor[0];++this._l4[_g2];this._l4[_g2]%=_53;const _q2=(bypass[_n2]!==undefined)?bypass[_n2]:bypass[0];if(_q2>0.0){continue;}let _p2=this._k4[_g2];const _63=(gain[_n2]!==undefined)?gain[_n2]:gain[0];_p2*=_63;_p2=Math.max(Math.min(_p2,
1.0),-1.0);const _m4=(resolution[_n2]!==undefined)?resolution[_n2]:resolution[0];const max=(_p2>0.0)?_i4._j4[_m4]-1:_i4._j4[_m4];_p2=Math.round(_p2*max)/max;const _r2=(mix[_n2]!==undefined)?mix[_n2]:mix[0];_m2[_n2]*=(1.0-_r2);_m2[_n2]+=(_p2*_r2);}}return this._s2;}}registerProcessor("bitcrusher-processor",_i4);class _n4 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"rate",automationRate:"a-rate",defaultValue:5.0,
minValue:0.0,maxValue:20.0},{name:"intensity",automationRate:"a-rate",defaultValue:1.0,minValue:0.0,maxValue:1.0},{name:"offset",automationRate:"a-rate",defaultValue:0.0,minValue:0.0,maxValue:1.0},{name:"shape",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:4}];}constructor(_72){super();this._82();const _92=_72.outputChannelCount[0];this._o4=new Array(_92).fill(1.0);this._p4=new Array(_92).fill(0.0);this._q4=new Array(_92).fill(_m3._n3._o3);this._r4=new Array(_92);for(let _g2=0;_g2<_92;++_g2){
this._r4[_g2]=new _N3();this._r4[_g2]._V3(sampleRate);this._r4[_g2]._Y3(this._o4[_g2]);this._r4[_g2]._14(this._q4[_g2]);if(_g2%2===1){this._r4[_g2]._Z3(this._p4[_g2]);}}}process(_j2,_k2,parameters){const input=_j2[0];const output=_k2[0];const bypass=parameters.bypass;const rate=parameters.rate;const intensity=parameters.intensity;const offset=parameters.offset;const shape=parameters.shape;for(let _g2=0;_g2<input.length;++_g2){const _l2=input[_g2];const _m2=output[_g2];for(let _n2=0;_n2<_l2.length;++_n2){_m2[_n2]=_l2[_n2];
const _m4=(rate[_n2]!==undefined)?rate[_n2]:rate[0];const _s4=(offset[_n2]!==undefined)?offset[_n2]:offset[0];const _t4=(shape[_n2]!==undefined)?shape[_n2]:shape[0];this._u4(_g2,_m4,_s4,_t4);const _v4=this._r4[_g2]._F3();const _q2=(bypass[_n2]!==undefined)?bypass[_n2]:bypass[0];if(_q2>0.0){continue;}const _h2=(intensity[_n2]!==undefined)?intensity[_n2]:intensity[0];const out=_l2[_n2]*_v4*_h2;_m2[_n2]*=(1.0-_h2);_m2[_n2]+=out;}}return this._s2;}_u4(_b4,_w4,__3,_24){if(_w4!==this._o4[_b4]){this._r4[_b4]._Y3(_w4);
this._o4[_b4]=_w4;}if(__3!==this._p4[_b4]){if(_b4%2===1){this._r4[_b4]._Z3(__3);}this._p4[_b4]=__3;}if(_24!==this._q4[_b4]){this._r4[_b4]._14(_24);this._q4[_b4]=_24;}}}registerProcessor("tremolo-processor",_n4);class _x4{constructor(_c4=1e-3){this.setTime(_c4);}setTime(_c4){this._y4=Math.exp(-1/(_c4*sampleRate));}process(_z4,_A4){return _z4+this._y4*(_A4-_z4);}}class _B4{constructor(_C4,_D4){this._E4=new _x4(_C4);this._F4=new _x4(_D4);this._G4=_C4;this._H4=_D4;}_I4(_c4){if(_c4===this._G4)return;this._E4.setTime(_c4);
this._G4=_c4;}_J4(_c4){if(_c4===this._H4)return;this._F4.setTime(_c4);this._H4=_c4;}process(_z4,_A4){if(_z4>_A4)return this._E4.process(_z4,_A4);else return this._F4.process(_z4,_A4);}}class _K4 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"ingain",automationRate:"a-rate",defaultValue:1,minValue:0},{name:"threshold",automationRate:"a-rate",defaultValue:0.125,minValue:1e-3,maxValue:1},{name:"ratio",
automationRate:"a-rate",defaultValue:4,minValue:1},{name:"attack",automationRate:"a-rate",defaultValue:0.05,minValue:1e-3,maxValue:1e-1},{name:"release",automationRate:"a-rate",defaultValue:0.25,minValue:1e-2,maxValue:1},{name:"outgain",automationRate:"a-rate",defaultValue:1,minValue:0}];}constructor(_L4){super();this._82();const _E4=_K4.parameterDescriptors.find(_M4=>_M4.name==="attack");const _F4=_K4.parameterDescriptors.find(_M4=>_M4.name==="release");this._N4=new _B4(_E4.defaultValue,_F4.defaultValue);
this._O4=0;}process(_P4,_Q4,_R4){const input=_P4[0];const output=_Q4[0];const bypass=_R4.bypass;const ingain=_R4.ingain;const outgain=_R4.outgain;const threshold=_R4.threshold;const ratio=_R4.ratio;const attack=_R4.attack;const release=_R4.release;if(input.length===0)return this._s2;for(let _n2=0;_n2<input[0].length;++_n2){let _S4=input.map(_T4=>_T4[_n2]);output.forEach((_T4,_U4)=>{_T4[_n2]=_S4[_U4];});const _V4=(ingain[_n2]!==undefined)?ingain[_n2]:ingain[0];_S4=_S4.map(_W4=>_W4*=_V4);const rect=_S4.map(_W4=>Math.abs(_W4));
const max=Math.max(...rect);const _X4=_Y4(max);const _84=(threshold[_n2]!==undefined)?threshold[_n2]:threshold[0];const _Z4=_Y4(_84);const __4=Math.max(0,_X4-_Z4);const _E4=(attack[_n2]!==undefined)?attack[_n2]:attack[0];const _F4=(release[_n2]!==undefined)?release[_n2]:release[0];this._N4._I4(_E4);this._N4._J4(_F4);this._O4=this._N4.process(__4,this._O4);const _q2=(bypass[_n2]!==undefined)?bypass[_n2]:bypass[0];if(_q2>0)continue;const _m4=(ratio[_n2]!==undefined)?ratio[_n2]:ratio[0];const _05=(this._O4/_m4)-this._O4;
const _63=_15(_05);_S4=_S4.map(_W4=>_W4*=_63);const _25=(outgain[_n2]!==undefined)?outgain[_n2]:outgain[0];_S4=_S4.map(_W4=>_W4*=_25);output.forEach((_T4,_U4)=>{_T4[_n2]=_S4[_U4];});}return this._s2;}}function _Y4(_35){return 20*Math.log10(_35);}function _15(_35){return Math.pow(10,_35/20);}registerProcessor("compressor-processor",_K4);class _45 extends AudioWorkletProcessor{static get parameterDescriptors(){const _23=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,
minValue:0,maxValue:1},{name:"freq",automationRate:"a-rate",defaultValue:Math.min(500.0,_23),minValue:10.0,maxValue:_23},{name:"q",automationRate:"a-rate",defaultValue:1.0,minValue:1.0,maxValue:100.0},{name:"gain",automationRate:"a-rate",defaultValue:1e-2,minValue:1e-6}];}constructor(_72){super();this._82();const _92=_72.outputChannelCount[0];this._I2=0;this._J2=0;this._K2=0;this._L2=0;this._M2=0;this._N2=new Float32Array(_92);this._O2=new Float32Array(_92);this._P2=new Float32Array(_92);this._Q2=new Float32Array(_92);
this._33=-1;this._S2=-1;this._43=-1;}process(_j2,_k2,parameters){const input=_j2[0];const output=_k2[0];const bypass=parameters.bypass;const freq=parameters.freq;const q=parameters.q;const gain=parameters.gain;const _T2=(freq.length===1&&q.length===1&&gain.length===1);if(_T2)this._U2(freq[0],q[0],gain[0]);for(let _g2=0;_g2<input.length;++_g2){const _l2=input[_g2];const _m2=output[_g2];for(let _n2=0;_n2<_l2.length;++_n2){if(_T2===!1){const _53=(freq[_n2]!==undefined)?freq[_n2]:freq[0];const _V2=(q[_n2]!==undefined)?q[_n2]:q[0];
const _63=(gain[_n2]!==undefined)?gain[_n2]:gain[0];this._U2(_53,_V2,_63);}const _W2=this._K2*_l2[_n2]+this._L2*this._N2[_g2]+this._M2*this._O2[_g2]-this._I2*this._P2[_g2]-this._J2*this._Q2[_g2];this._O2[_g2]=this._N2[_g2];this._N2[_g2]=_l2[_n2];this._Q2[_g2]=this._P2[_g2];this._P2[_g2]=_W2;const _q2=(bypass[_n2]!==undefined)?bypass[_n2]:bypass[0];_m2[_n2]=(_q2>0)?_l2[_n2]:_W2;}}return this._s2;}_U2(_73,_Y2,_83){if(_73===this._33&&_Y2===this._S2&&_83===this._43)return;const _Z2=2*Math.PI*_73/sampleRate;
const __2=Math.cos(_Z2);const _93=Math.sqrt(_83);const _f3=_93+1;const _g3=_93-1;const _h3=_f3*__2;const _i3=_g3*__2;const _j3=_f3-_i3;const _k3=_f3+_i3;const alpha=Math.sin(_Z2)/(2*_Y2);const _l3=(2*Math.sqrt(_93)*alpha);const _03=_k3+_l3;const _I2=-2*(_g3+_h3);const _J2=_k3-_l3;const _K2=_93*(_j3+_l3);const _L2=2*_93*(_g3-_h3);const _M2=_93*(_j3-_l3);this._I2=_I2/_03;this._J2=_J2/_03;this._K2=_K2/_03;this._L2=_L2/_03;this._M2=_M2/_03;this._33=_73;this._S2=_Y2;this._43=_83;}}registerProcessor("lo-shelf-processor",
_45);