class _N2{constructor(_O2){this._P2=0;this._Q2=0;this.feedback=0;this._R2=0;this.buffer=new Float32Array(_O2);this._S2=0;}process(_T2){const out=this.buffer[this._S2];this._R2=(this._R2*this._P2)+(out*this._Q2);this.buffer[this._S2]=_T2+(this._R2*this.feedback);++this._S2;this._S2%=this.buffer.length;return out;}_U2(_V2){this.feedback=Math.min(Math.max(0,_V2),1);}_W2(_X2){this._P2=Math.min(Math.max(0,_X2),1);this._Q2=1-this._P2;}}class _Y2{constructor(_O2){this.feedback=0;this.buffer=new Float32Array(_O2);
this._S2=0;}process(_T2){const out=this.buffer[this._S2];this.buffer[this._S2]=_T2+(out*this.feedback);++this._S2;this._S2%=this.buffer.length;return(out-_T2);}_U2(_V2){this.feedback=Math.min(Math.max(0,_V2),1);}}class _Z2 extends AudioWorkletProcessor{static __2=8;static _03=4;static _13=0.015;static _23=0.4;static _33=0.28;static _43=0.7;static _53=[1116,1188,1277,1356,1422,1491,1557,1617];static _63=[1139,1211,1300,1379,1445,1514,1580,1640];static _73=[556,441,341,225];static _83=[579,464,364,248];static get parameterDescriptors(){
return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"size",automationRate:"a-rate",defaultValue:0.7,minValue:0.0,maxValue:1.0},{name:"damp",automationRate:"a-rate",defaultValue:0.1,minValue:0.0,maxValue:1.0},{name:"mix",automationRate:"a-rate",defaultValue:0.35,minValue:0.0,maxValue:1.0}];}constructor(_93){super();this._a3();const _b3=_93.outputChannelCount[0];this._c3=-1;this._d3=-1;this._e3=new Array(_b3);this._f3=new Array(_b3);const _g3=[_Z2._53,_Z2._63];const _h3=[_Z2._73,
_Z2._83];for(let _i3=0;_i3<_b3;++_i3){this._e3[_i3]=new Array(_Z2.__2);this._f3[_i3]=new Array(_Z2._03);for(let _j3=0;_j3<_Z2.__2;++_j3)this._e3[_i3][_j3]=new _N2(_g3[_i3%_g3.length][_j3]);for(let _j3=0;_j3<_Z2._03;++_j3)this._f3[_i3][_j3]=new _Y2(_h3[_i3%_h3.length][_j3]);}this._k3(0.5);this._W2(0.5);for(let _i3=0;_i3<_b3;++_i3)for(let _j3=0;_j3<_Z2._03;++_j3)this._f3[_i3][_j3]._U2(0.5);}process(_l3,_m3,parameters){const input=_l3[0];const output=_m3[0];const bypass=parameters.bypass;const size=parameters.size;
const damp=parameters.damp;const mix=parameters.mix;for(let _i3=0;_i3<input.length;++_i3){const _n3=input[_i3];const _o3=output[_i3];for(let _p3=0;_p3<_n3.length;++_p3){const _p3=(size[_p3]!==undefined)?size[_p3]:size[0];const _q3=(damp[_p3]!==undefined)?damp[_p3]:damp[0];this._k3(_p3);this._W2(_q3);_o3[_p3]=_n3[_p3];let out=0;const _r3=_n3[_p3]*_Z2._13;for(let _j3=0;_j3<_Z2.__2;++_j3)out+=this._e3[_i3][_j3].process(_r3);for(let _j3=0;_j3<_Z2._03;++_j3)out=this._f3[_i3][_j3].process(out);const _s3=(bypass[_p3]!==undefined)?bypass[_p3]:bypass[0];
if(_s3>0.0){continue;}const _t3=(mix[_p3]!==undefined)?mix[_p3]:mix[0];_o3[_p3]*=(1-_t3);_o3[_p3]+=(out*_t3);}}return this._u3;}_k3(_O2){if(_O2===this._c3)return;const size=(_O2*_Z2._33)+_Z2._43;for(let _i3=0;_i3<this._e3.length;++_i3)for(let _j3=0;_j3<_Z2.__2;++_j3)this._e3[_i3][_j3]._U2(size);this._c3=_O2;}_W2(_X2){if(_X2===this._d3)return;const damp=_X2*_Z2._23;for(let _i3=0;_i3<this._e3.length;++_i3)for(let _j3=0;_j3<_Z2.__2;++_j3)this._e3[_i3][_j3]._W2(damp);this._d3=_X2;}}registerProcessor("reverb1-processor",
_Z2);class _v3 extends AudioWorkletProcessor{static get parameterDescriptors(){return [];}constructor(){super();this._a3();}process(_w3,_x3,_y3){const input=_w3[0];const _z3=_x3[0];const _A3=_x3[1];for(let _i3=0;_i3<input.length;++_i3){const _n3=input[_i3];const _B3=_z3[_i3];const _C3=_A3[_i3];for(let _p3=0;_p3<_n3.length;++_p3){_B3[_p3]=_n3[_p3];_C3[_p3]=_n3[_p3];}}return this._u3;}}class _D3 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,
minValue:0,maxValue:1}];}constructor(){super();this._a3();}process(_w3,_x3,_y3){const _E3=_w3[0];const _F3=_w3[1];const output=_x3[0];const bypass=_y3.bypass;for(let _i3=0;_i3<_F3.length;++_i3){const _G3=_E3[_i3];const _H3=_F3[_i3];const _o3=output[_i3];for(let _p3=0;_p3<_G3.length;++_p3){const _s3=(bypass[_p3]!==undefined)?bypass[_p3]:bypass[0];if(_s3>0){_o3[_p3]=_H3[_p3];}else {_o3[_p3]=_G3[_p3];}}}return this._u3;}}registerProcessor("eq-input",_v3);registerProcessor("eq-output",_D3);class _I3 extends AudioWorkletProcessor{
static get parameterDescriptors(){const _J3=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"cutoff",automationRate:"a-rate",defaultValue:Math.min(500.0,_J3),minValue:10.0,maxValue:_J3},{name:"q",automationRate:"a-rate",defaultValue:1.5,minValue:1.0,maxValue:100.0}];}constructor(_93){super();this._a3();const _b3=_93.outputChannelCount[0];this._K3=0;this._L3=0;this._M3=0;this._N3=0;this._O3=0;this._P3=new Float32Array(_b3);this._Q3=new Float32Array(_b3);
this._R3=new Float32Array(_b3);this._S3=new Float32Array(_b3);this._T3=-1;this._U3=-1;}process(_l3,_m3,parameters){const input=_l3[0];const output=_m3[0];const bypass=parameters.bypass;const cutoff=parameters.cutoff;const q=parameters.q;const _V3=(cutoff.length===1&&q.length===1);if(_V3)this._W3(cutoff[0],q[0]);for(let _i3=0;_i3<input.length;++_i3){const _n3=input[_i3];const _o3=output[_i3];for(let _p3=0;_p3<_n3.length;++_p3){if(_V3===!1){const _i3=(cutoff[_p3]!==undefined)?cutoff[_p3]:cutoff[0];const _X3=(q[_p3]!==undefined)?q[_p3]:q[0];
this._W3(_i3,_X3);}const _Y3=this._M3*_n3[_p3]+this._N3*this._P3[_i3]+this._O3*this._Q3[_i3]-this._K3*this._R3[_i3]-this._L3*this._S3[_i3];this._Q3[_i3]=this._P3[_i3];this._P3[_i3]=_n3[_p3];this._S3[_i3]=this._R3[_i3];this._R3[_i3]=_Y3;const _s3=(bypass[_p3]!==undefined)?bypass[_p3]:bypass[0];_o3[_p3]=(_s3>0)?_n3[_p3]:_Y3;}}return this._u3;}_W3(_Z3,__3){if(_Z3===this._T3&&__3===this._U3)return;const _04=2*Math.PI*_Z3/sampleRate;const alpha=Math.sin(_04)/(2*__3);const _14=Math.cos(_04);const _24=1+alpha;
const _K3=-2*_14;const _L3=1-alpha;const _M3=(1-_14)/2;const _N3=1-_14;const _O3=(1-_14)/2;this._K3=_K3/_24;this._L3=_L3/_24;this._M3=_M3/_24;this._N3=_N3/_24;this._O3=_O3/_24;this._T3=_Z3;this._U3=__3;}}registerProcessor("lpf2-processor",_I3);class _34 extends AudioWorkletProcessor{static get parameterDescriptors(){const _44=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"freq",automationRate:"a-rate",defaultValue:Math.min(1500.0,
_44),minValue:10.0,maxValue:_44},{name:"q",automationRate:"a-rate",defaultValue:1.0,minValue:1.0,maxValue:100.0},{name:"gain",automationRate:"a-rate",defaultValue:1e-2,minValue:1e-6}];}constructor(_93){super();this._a3();const _b3=_93.outputChannelCount[0];this._K3=0;this._L3=0;this._M3=0;this._N3=0;this._O3=0;this._P3=new Float32Array(_b3);this._Q3=new Float32Array(_b3);this._R3=new Float32Array(_b3);this._S3=new Float32Array(_b3);this._54=-1;this._U3=-1;this._64=-1;}process(_l3,_m3,parameters){const input=_l3[0];
const output=_m3[0];const bypass=parameters.bypass;const freq=parameters.freq;const q=parameters.q;const gain=parameters.gain;const _V3=(freq.length===1&&q.length===1&&gain.length===1);if(_V3)this._W3(freq[0],q[0],gain[0]);for(let _i3=0;_i3<input.length;++_i3){const _n3=input[_i3];const _o3=output[_i3];for(let _p3=0;_p3<_n3.length;++_p3){if(_V3===!1){const _74=(freq[_p3]!==undefined)?freq[_p3]:freq[0];const _X3=(q[_p3]!==undefined)?q[_p3]:q[0];const _84=(gain[_p3]!==undefined)?gain[_p3]:gain[0];this._W3(_74,
_X3,_84);}const _Y3=this._M3*_n3[_p3]+this._N3*this._P3[_i3]+this._O3*this._Q3[_i3]-this._K3*this._R3[_i3]-this._L3*this._S3[_i3];this._Q3[_i3]=this._P3[_i3];this._P3[_i3]=_n3[_p3];this._S3[_i3]=this._R3[_i3];this._R3[_i3]=_Y3;const _s3=(bypass[_p3]!==undefined)?bypass[_p3]:bypass[0];_o3[_p3]=(_s3>0)?_n3[_p3]:_Y3;}}return this._u3;}_W3(_94,__3,_a4){if(_94===this._54&&__3===this._U3&&_a4===this._64)return;const _04=2*Math.PI*_94/sampleRate;const _14=Math.cos(_04);const _b4=Math.sqrt(_a4);const alpha=Math.sin(_04)/(2*__3);
const _c4=alpha/_b4;const _d4=alpha*_b4;const _24=1+_c4;const _K3=-2*_14;const _L3=1-_c4;const _M3=1+_d4;const _N3=_K3;const _O3=1-_d4;this._K3=_K3/_24;this._L3=_L3/_24;this._M3=_M3/_24;this._N3=_N3/_24;this._O3=_O3/_24;this._54=_94;this._U3=__3;this._64=_a4;}}registerProcessor("peak-eq-processor",_34);class _e4 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"gain",automationRate:"a-rate",defaultValue:0.5,
minValue:0.0}];}constructor(){super();this._a3();}process(_l3,_m3,parameters){const input=_l3[0];const output=_m3[0];const bypass=parameters.bypass;const gain=parameters.gain;for(let _i3=0;_i3<input.length;++_i3){const _n3=input[_i3];const _o3=output[_i3];for(let _p3=0;_p3<_n3.length;++_p3){_o3[_p3]=_n3[_p3];const _s3=(bypass[_p3]!==undefined)?bypass[_p3]:bypass[0];if(_s3>0.0){continue;}const _84=(gain[_p3]!==undefined)?gain[_p3]:gain[0];_o3[_p3]*=_84;}}return this._u3;}}registerProcessor("gain-processor",
_e4);class _f4 extends AudioWorkletProcessor{static get parameterDescriptors(){const _J3=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"cutoff",automationRate:"a-rate",defaultValue:Math.min(1500.0,_J3),minValue:10.0,maxValue:_J3},{name:"q",automationRate:"a-rate",defaultValue:1.5,minValue:1.0,maxValue:100.0}];}constructor(_93){super();this._a3();const _b3=_93.outputChannelCount[0];this._K3=0;this._L3=0;this._M3=0;this._N3=0;this._O3=0;
this._P3=new Float32Array(_b3);this._Q3=new Float32Array(_b3);this._R3=new Float32Array(_b3);this._S3=new Float32Array(_b3);this._T3=-1;this._U3=-1;}process(_l3,_m3,parameters){const input=_l3[0];const output=_m3[0];const bypass=parameters.bypass;const cutoff=parameters.cutoff;const q=parameters.q;const _V3=(cutoff.length===1&&q.length===1);if(_V3)this._W3(cutoff[0],q[0]);for(let _i3=0;_i3<input.length;++_i3){const _n3=input[_i3];const _o3=output[_i3];for(let _p3=0;_p3<_n3.length;++_p3){if(_V3===!1){const _i3=(cutoff[_p3]!==undefined)?cutoff[_p3]:cutoff[0];
const _X3=(q[_p3]!==undefined)?q[_p3]:q[0];this._W3(_i3,_X3);}const _Y3=this._M3*_n3[_p3]+this._N3*this._P3[_i3]+this._O3*this._Q3[_i3]-this._K3*this._R3[_i3]-this._L3*this._S3[_i3];this._Q3[_i3]=this._P3[_i3];this._P3[_i3]=_n3[_p3];this._S3[_i3]=this._R3[_i3];this._R3[_i3]=_Y3;const _s3=(bypass[_p3]!==undefined)?bypass[_p3]:bypass[0];_o3[_p3]=(_s3>0)?_n3[_p3]:_Y3;}}return this._u3;}_W3(_Z3,__3){if(_Z3===this._T3&&__3===this._U3)return;const _04=2*Math.PI*_Z3/sampleRate;const alpha=Math.sin(_04)/(2*__3);
const _14=Math.cos(_04);const _24=1+alpha;const _K3=-2*_14;const _L3=1-alpha;const _M3=(1+_14)/2;const _N3=-1-_14;const _O3=(1+_14)/2;this._K3=_K3/_24;this._L3=_L3/_24;this._M3=_M3/_24;this._N3=_N3/_24;this._O3=_O3/_24;this._T3=_Z3;this._U3=__3;}}registerProcessor("hpf2-processor",_f4);class _g4 extends AudioWorkletProcessor{static get parameterDescriptors(){const _44=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"freq",automationRate:"a-rate",
defaultValue:Math.min(5000.0,_44),minValue:10.0,maxValue:_44},{name:"q",automationRate:"a-rate",defaultValue:1.0,minValue:1.0,maxValue:100.0},{name:"gain",automationRate:"a-rate",defaultValue:1e-2,minValue:1e-6}];}constructor(_93){super();this._a3();const _b3=_93.outputChannelCount[0];this._K3=0;this._L3=0;this._M3=0;this._N3=0;this._O3=0;this._P3=new Float32Array(_b3);this._Q3=new Float32Array(_b3);this._R3=new Float32Array(_b3);this._S3=new Float32Array(_b3);this._54=-1;this._U3=-1;this._64=-1;}process(_l3,
_m3,parameters){const input=_l3[0];const output=_m3[0];const bypass=parameters.bypass;const freq=parameters.freq;const q=parameters.q;const gain=parameters.gain;const _V3=(freq.length===1&&q.length===1&&gain.length===1);if(_V3)this._W3(freq[0],q[0],gain[0]);for(let _i3=0;_i3<input.length;++_i3){const _n3=input[_i3];const _o3=output[_i3];for(let _p3=0;_p3<_n3.length;++_p3){if(_V3===!1){const _74=(freq[_p3]!==undefined)?freq[_p3]:freq[0];const _X3=(q[_p3]!==undefined)?q[_p3]:q[0];const _84=(gain[_p3]!==undefined)?gain[_p3]:gain[0];
this._W3(_74,_X3,_84);}const _Y3=this._M3*_n3[_p3]+this._N3*this._P3[_i3]+this._O3*this._Q3[_i3]-this._K3*this._R3[_i3]-this._L3*this._S3[_i3];this._Q3[_i3]=this._P3[_i3];this._P3[_i3]=_n3[_p3];this._S3[_i3]=this._R3[_i3];this._R3[_i3]=_Y3;const _s3=(bypass[_p3]!==undefined)?bypass[_p3]:bypass[0];_o3[_p3]=(_s3>0)?_n3[_p3]:_Y3;}}return this._u3;}_W3(_94,__3,_a4){if(_94===this._54&&__3===this._U3&&_a4===this._64)return;const _04=2*Math.PI*_94/sampleRate;const _14=Math.cos(_04);const _b4=Math.sqrt(_a4);const _h4=_b4+1;
const _i4=_b4-1;const _j4=_h4*_14;const _k4=_i4*_14;const _l4=_h4-_k4;const _m4=_h4+_k4;const alpha=Math.sin(_04)/(2*__3);const _n4=(2*Math.sqrt(_b4)*alpha);const _24=_l4+_n4;const _K3=2*(_i4-_j4);const _L3=_l4-_n4;const _M3=_b4*(_m4+_n4);const _N3=-2*_b4*(_i4+_j4);const _O3=_b4*(_m4-_n4);this._K3=_K3/_24;this._L3=_L3/_24;this._M3=_M3/_24;this._N3=_N3/_24;this._O3=_O3/_24;this._54=_94;this._U3=__3;this._64=_a4;}}registerProcessor("hi-shelf-processor",_g4);function _o4(){}_o4._p4={_q4:0,_r4:1,_s4:2,_t4:3,_u4:4,
_v4:5};_o4._w4=function(_x4){return 1.0-_x4;};_o4._y4=function(_x4){return _x4;};_o4._z4=function(_x4){return 0.5*(Math.sin((_x4*2.0*Math.PI)-(Math.PI/2.0))+1.0);};_o4._A4=function(_x4){if(_x4<0.5){return 0.0;}return 1.0;};_o4._B4=function(_x4){if(_x4<0.5){return 2.0*_x4;}return 2.0-(2.0*_x4);};_o4._C4=[_o4._w4,_o4._y4,_o4._z4,_o4._A4,_o4._B4];_D4._E4=512;_D4._F4=1.0/_D4._E4;function _D4(_G4){this.data=new Float32Array(_D4._E4);for(let _j3=0;_j3<_D4._E4;++_j3){this.data[_j3]=_G4(_j3*_D4._F4);}}_D4.prototype._H4=function(_x4){
_x4=Math.max(0.0,_x4);_x4=Math.min(_x4,1.0);const _I4=_x4*_D4._E4;const _J4=~~_I4;const _K4=_I4-_J4;let _L4=_J4;let _M4=_L4+1;if(_L4>=_D4._E4){_L4-=_D4._E4;}if(_M4>=_D4._E4){_M4-=_D4._E4;}const _N4=this.data[_L4];const _O4=this.data[_M4];return _N4+(_O4-_N4)*_K4;};;_P4._Q4=[];_P4._R4=!1;_P4._S4=0.0;_P4._44=20.0;function _P4(){this._T4=48000;this.shape=_o4._p4._s4;this.freq=1.0;this._U4=0.0;this._F4=0.0;this._V4=0.0;if(_P4._R4==true){return;}for(let _j3=0;_j3<_o4._p4._v4;++_j3){_P4._Q4[_j3]=new _D4(_o4._C4[_j3]);
}_P4._R4=true;}_P4._W4=function(){return(_P4._R4==!0);};_P4.prototype._X4=function(_Y4){this._T4=_Y4;this._Z4();};;_P4.prototype.__4=function(_94){_94=Math.max(_P4._S4,_94);_94=Math.min(_94,_P4._44);this.freq=_94;this._Z4();};;_P4.prototype._05=function(_15){_15=Math.max(0.0,_15);_15=Math.min(_15,1.0);const _25=_15-this._V4;this._V4=_15;this._U4+=_25;while(this._U4>=1.0){this._U4-=1.0;}while(this._U4<0.0){this._U4+=1.0;}};;_P4.prototype._35=function(_45){_45=Math.max(0,_45);_45=Math.min(_45,_o4._p4._v4-1);
this.shape=_45;};;_P4.prototype._H4=function(){const _55=_P4._Q4[this.shape]._H4(this._U4);this._U4+=this._F4;while(this._U4>=1.0){this._U4-=1.0;}return _55;};;_P4.prototype._Z4=function(){this._F4=this.freq/this._T4;};;class _65 extends AudioWorkletProcessor{static _75=5.0;static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"time",automationRate:"a-rate",defaultValue:0.2,minValue:0.0,maxValue:_65._75},{name:"feedback",automationRate:"a-rate",
defaultValue:0.5,minValue:0.0,maxValue:1.0},{name:"mix",automationRate:"a-rate",defaultValue:0.35,minValue:0.0,maxValue:1.0}];}constructor(_93){super();this._a3();const _b3=_93.outputChannelCount[0];const _85=(_65._75*sampleRate)+1;this.buffer=new Array(_b3);this._95=new Uint32Array(_b3);for(let _i3=0;_i3<_b3;++_i3)this.buffer[_i3]=new Float32Array(_85);}process(_l3,_m3,parameters){const input=_l3[0];const output=_m3[0];const bypass=parameters.bypass;const time=parameters.time;const feedback=parameters.feedback;
const mix=parameters.mix;for(let _i3=0;_i3<input.length;++_i3){const _n3=input[_i3];const _o3=output[_i3];for(let _p3=0;_p3<_n3.length;++_p3){_o3[_p3]=_n3[_p3];const _a5=(time[_p3]!==undefined)?time[_p3]:time[0];const _b5=this._H4(_i3,_a5);const _74=(feedback[_p3]!==undefined)?feedback[_p3]:feedback[0];const _c5=_n3[_p3]+(_b5*_74);this.write(_i3,_c5);const _s3=(bypass[_p3]!==undefined)?bypass[_p3]:bypass[0];if(_s3>0.0){continue;}const _t3=(mix[_p3]!==undefined)?mix[_p3]:mix[0];_o3[_p3]*=(1-_t3);_o3[_p3]+=(_b5*_t3);
}}return this._u3;}_H4(_d5,_e5){const _f5=_e5*sampleRate;let _L4=(this._95[_d5]-~~_f5);let _M4=(_L4-1);while(_L4<0)_L4+=this.buffer[_d5].length;while(_M4<0)_M4+=this.buffer[_d5].length;const _g5=_f5-~~_f5;const _N4=this.buffer[_d5][_L4];const _O4=this.buffer[_d5][_M4];return _N4+(_O4-_N4)*_g5;}write(_d5,_T2){++this._95[_d5];this._95[_d5]%=this.buffer[_d5].length;this.buffer[_d5][this._95[_d5]]=_T2;}}registerProcessor("delay-processor",_65);AudioWorkletProcessor.prototype._a3=function(){this._u3=true;this.port.onmessage=(_h5)=>{
if(_h5.data==="kill")this._u3=false;};};;class _i5 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1}];}constructor(){super();this._a3();}process(_l3,_m3,parameters){const input=_l3[0];const bypass=parameters.bypass;for(let _i3=0;_i3<input.length;++_i3){const _n3=input[_i3];for(let _p3=0;_p3<_n3.length;++_p3){const _s3=(bypass[_p3]!==undefined)?bypass[_p3]:bypass[0];_m3[_s3][_i3][_p3]=_n3[_p3];}}return this._u3;
}}class _j5 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"gain",automationRate:"a-rate",defaultValue:1,minValue:0}];}constructor(){super();this._a3();}process(_l3,_m3,parameters){const _E3=_l3[0];const _F3=_l3[1];const output=_m3[0];const gain=parameters.gain;for(let _i3=0;_i3<_F3.length;++_i3){const _n3=_F3[_i3];const _o3=output[_i3];for(let _p3=0;_p3<_n3.length;++_p3)_o3[_p3]=_n3[_p3];}for(let _i3=0;_i3<_E3.length;++_i3){const _n3=_E3[_i3];const _o3=output[_i3];for(let _p3=0;_p3<_n3.length;
++_p3){const _84=(gain[_p3]!==undefined)?gain[_p3]:gain[0];_o3[_p3]+=_n3[_p3]*_84;}}return this._u3;}}registerProcessor("audio-bus-input",_i5);registerProcessor("audio-bus-output",_j5);class _k5 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"gain",automationRate:"a-rate",defaultValue:1.0,minValue:0.0},{name:"factor",automationRate:"a-rate",defaultValue:20,minValue:1,maxValue:100},{name:"resolution",
automationRate:"a-rate",defaultValue:8,minValue:2,maxValue:16},{name:"mix",automationRate:"a-rate",defaultValue:0.8,minValue:0.0,maxValue:1.0}];}static _l5=[undefined,undefined,2,4,8,16,32,64,128,256,512,1024,2048,4096,8192,16384,32768];constructor(_93){super();this._a3();const _b3=_93.outputChannelCount[0];this._m5=new Float32Array(_b3);this._n5=new Uint32Array(_b3);}process(_l3,_m3,parameters){const input=_l3[0];const output=_m3[0];const bypass=parameters.bypass;const gain=parameters.gain;const factor=parameters.factor;
const resolution=parameters.resolution;const mix=parameters.mix;for(let _i3=0;_i3<input.length;++_i3){const _n3=input[_i3];const _o3=output[_i3];for(let _p3=0;_p3<_n3.length;++_p3){_o3[_p3]=_n3[_p3];if(this._n5[_i3]===0)this._m5[_i3]=_n3[_p3];const _74=(factor[_p3]!==undefined)?factor[_p3]:factor[0];++this._n5[_i3];this._n5[_i3]%=_74;const _s3=(bypass[_p3]!==undefined)?bypass[_p3]:bypass[0];if(_s3>0.0){continue;}let _r3=this._m5[_i3];const _84=(gain[_p3]!==undefined)?gain[_p3]:gain[0];_r3*=_84;_r3=Math.max(Math.min(_r3,
1.0),-1.0);const _o5=(resolution[_p3]!==undefined)?resolution[_p3]:resolution[0];const max=(_r3>0.0)?_k5._l5[_o5]-1:_k5._l5[_o5];_r3=Math.round(_r3*max)/max;const _t3=(mix[_p3]!==undefined)?mix[_p3]:mix[0];_o3[_p3]*=(1.0-_t3);_o3[_p3]+=(_r3*_t3);}}return this._u3;}}registerProcessor("bitcrusher-processor",_k5);class _p5 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"rate",automationRate:"a-rate",defaultValue:5.0,
minValue:0.0,maxValue:20.0},{name:"intensity",automationRate:"a-rate",defaultValue:1.0,minValue:0.0,maxValue:1.0},{name:"offset",automationRate:"a-rate",defaultValue:0.0,minValue:0.0,maxValue:1.0},{name:"shape",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:4}];}constructor(_93){super();this._a3();const _b3=_93.outputChannelCount[0];this._q5=new Array(_b3).fill(1.0);this._r5=new Array(_b3).fill(0.0);this._s5=new Array(_b3).fill(_o4._p4._q4);this._t5=new Array(_b3);for(let _i3=0;_i3<_b3;++_i3){
this._t5[_i3]=new _P4();this._t5[_i3]._X4(sampleRate);this._t5[_i3].__4(this._q5[_i3]);this._t5[_i3]._35(this._s5[_i3]);if(_i3%2===1){this._t5[_i3]._05(this._r5[_i3]);}}}process(_l3,_m3,parameters){const input=_l3[0];const output=_m3[0];const bypass=parameters.bypass;const rate=parameters.rate;const intensity=parameters.intensity;const offset=parameters.offset;const shape=parameters.shape;for(let _i3=0;_i3<input.length;++_i3){const _n3=input[_i3];const _o3=output[_i3];for(let _p3=0;_p3<_n3.length;++_p3){_o3[_p3]=_n3[_p3];
const _o5=(rate[_p3]!==undefined)?rate[_p3]:rate[0];const _u5=(offset[_p3]!==undefined)?offset[_p3]:offset[0];const _v5=(shape[_p3]!==undefined)?shape[_p3]:shape[0];this._w5(_i3,_o5,_u5,_v5);const _x5=this._t5[_i3]._H4();const _s3=(bypass[_p3]!==undefined)?bypass[_p3]:bypass[0];if(_s3>0.0){continue;}const _j3=(intensity[_p3]!==undefined)?intensity[_p3]:intensity[0];const out=_n3[_p3]*_x5*_j3;_o3[_p3]*=(1.0-_j3);_o3[_p3]+=out;}}return this._u3;}_w5(_d5,_y5,_15,_45){if(_y5!==this._q5[_d5]){this._t5[_d5].__4(_y5);
this._q5[_d5]=_y5;}if(_15!==this._r5[_d5]){if(_d5%2===1){this._t5[_d5]._05(_15);}this._r5[_d5]=_15;}if(_45!==this._s5[_d5]){this._t5[_d5]._35(_45);this._s5[_d5]=_45;}}}registerProcessor("tremolo-processor",_p5);class _z5{constructor(_e5=1e-3){this.setTime(_e5);}setTime(_e5){this._A5=Math.exp(-1/(_e5*sampleRate));}process(_B5,_C5){return _B5+this._A5*(_C5-_B5);}}class _D5{constructor(_E5,_F5){this._G5=new _z5(_E5);this._H5=new _z5(_F5);this._I5=_E5;this._J5=_F5;}_K5(_e5){if(_e5===this._I5)return;this._G5.setTime(_e5);
this._I5=_e5;}_L5(_e5){if(_e5===this._J5)return;this._H5.setTime(_e5);this._J5=_e5;}process(_B5,_C5){if(_B5>_C5)return this._G5.process(_B5,_C5);else return this._H5.process(_B5,_C5);}}class _M5 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"ingain",automationRate:"a-rate",defaultValue:1,minValue:0},{name:"threshold",automationRate:"a-rate",defaultValue:0.125,minValue:1e-3,maxValue:1},{name:"ratio",
automationRate:"a-rate",defaultValue:4,minValue:1},{name:"attack",automationRate:"a-rate",defaultValue:0.05,minValue:1e-3,maxValue:1e-1},{name:"release",automationRate:"a-rate",defaultValue:0.25,minValue:1e-2,maxValue:1},{name:"outgain",automationRate:"a-rate",defaultValue:1,minValue:0}];}constructor(_N5){super();this._a3();const _G5=_M5.parameterDescriptors.find(_O5=>_O5.name==="attack");const _H5=_M5.parameterDescriptors.find(_O5=>_O5.name==="release");this._P5=new _D5(_G5.defaultValue,_H5.defaultValue);
this._Q5=0;}process(_R5,_S5,_T5){const input=_R5[0];const output=_S5[0];const bypass=_T5.bypass;const ingain=_T5.ingain;const outgain=_T5.outgain;const threshold=_T5.threshold;const ratio=_T5.ratio;const attack=_T5.attack;const release=_T5.release;if(input.length===0)return this._u3;for(let _p3=0;_p3<input[0].length;++_p3){let _U5=input.map(_V5=>_V5[_p3]);output.forEach((_V5,_W5)=>{_V5[_p3]=_U5[_W5];});const _X5=(ingain[_p3]!==undefined)?ingain[_p3]:ingain[0];_U5=_U5.map(_Y5=>_Y5*=_X5);const rect=_U5.map(_Y5=>Math.abs(_Y5));
const max=Math.max(...rect);const _Z5=__5(max);const _a5=(threshold[_p3]!==undefined)?threshold[_p3]:threshold[0];const _06=__5(_a5);const _16=Math.max(0,_Z5-_06);const _G5=(attack[_p3]!==undefined)?attack[_p3]:attack[0];const _H5=(release[_p3]!==undefined)?release[_p3]:release[0];this._P5._K5(_G5);this._P5._L5(_H5);this._Q5=this._P5.process(_16,this._Q5);const _s3=(bypass[_p3]!==undefined)?bypass[_p3]:bypass[0];if(_s3>0)continue;const _o5=(ratio[_p3]!==undefined)?ratio[_p3]:ratio[0];const _26=(this._Q5/_o5)-this._Q5;
const _84=_36(_26);_U5=_U5.map(_Y5=>_Y5*=_84);const _46=(outgain[_p3]!==undefined)?outgain[_p3]:outgain[0];_U5=_U5.map(_Y5=>_Y5*=_46);output.forEach((_V5,_W5)=>{_V5[_p3]=_U5[_W5];});}return this._u3;}}function __5(_56){return 20*Math.log10(_56);}function _36(_56){return Math.pow(10,_56/20);}registerProcessor("compressor-processor",_M5);class _66 extends AudioWorkletProcessor{static get parameterDescriptors(){const _44=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,
minValue:0,maxValue:1},{name:"freq",automationRate:"a-rate",defaultValue:Math.min(500.0,_44),minValue:10.0,maxValue:_44},{name:"q",automationRate:"a-rate",defaultValue:1.0,minValue:1.0,maxValue:100.0},{name:"gain",automationRate:"a-rate",defaultValue:1e-2,minValue:1e-6}];}constructor(_93){super();this._a3();const _b3=_93.outputChannelCount[0];this._K3=0;this._L3=0;this._M3=0;this._N3=0;this._O3=0;this._P3=new Float32Array(_b3);this._Q3=new Float32Array(_b3);this._R3=new Float32Array(_b3);this._S3=new Float32Array(_b3);
this._54=-1;this._U3=-1;this._64=-1;}process(_l3,_m3,parameters){const input=_l3[0];const output=_m3[0];const bypass=parameters.bypass;const freq=parameters.freq;const q=parameters.q;const gain=parameters.gain;const _V3=(freq.length===1&&q.length===1&&gain.length===1);if(_V3)this._W3(freq[0],q[0],gain[0]);for(let _i3=0;_i3<input.length;++_i3){const _n3=input[_i3];const _o3=output[_i3];for(let _p3=0;_p3<_n3.length;++_p3){if(_V3===!1){const _74=(freq[_p3]!==undefined)?freq[_p3]:freq[0];const _X3=(q[_p3]!==undefined)?q[_p3]:q[0];
const _84=(gain[_p3]!==undefined)?gain[_p3]:gain[0];this._W3(_74,_X3,_84);}const _Y3=this._M3*_n3[_p3]+this._N3*this._P3[_i3]+this._O3*this._Q3[_i3]-this._K3*this._R3[_i3]-this._L3*this._S3[_i3];this._Q3[_i3]=this._P3[_i3];this._P3[_i3]=_n3[_p3];this._S3[_i3]=this._R3[_i3];this._R3[_i3]=_Y3;const _s3=(bypass[_p3]!==undefined)?bypass[_p3]:bypass[0];_o3[_p3]=(_s3>0)?_n3[_p3]:_Y3;}}return this._u3;}_W3(_94,__3,_a4){if(_94===this._54&&__3===this._U3&&_a4===this._64)return;const _04=2*Math.PI*_94/sampleRate;
const _14=Math.cos(_04);const _b4=Math.sqrt(_a4);const _h4=_b4+1;const _i4=_b4-1;const _j4=_h4*_14;const _k4=_i4*_14;const _l4=_h4-_k4;const _m4=_h4+_k4;const alpha=Math.sin(_04)/(2*__3);const _n4=(2*Math.sqrt(_b4)*alpha);const _24=_m4+_n4;const _K3=-2*(_i4+_j4);const _L3=_m4-_n4;const _M3=_b4*(_l4+_n4);const _N3=2*_b4*(_i4-_j4);const _O3=_b4*(_l4-_n4);this._K3=_K3/_24;this._L3=_L3/_24;this._M3=_M3/_24;this._N3=_N3/_24;this._O3=_O3/_24;this._54=_94;this._U3=__3;this._64=_a4;}}registerProcessor("lo-shelf-processor",
_66);