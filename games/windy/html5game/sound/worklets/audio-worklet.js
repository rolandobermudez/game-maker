class _u1{constructor(_v1){this._w1=0;this._x1=0;this.feedback=0;this._y1=0;this.buffer=new Float32Array(_v1);this._z1=0;}process(_A1){const out=this.buffer[this._z1];this._y1=(this._y1*this._w1)+(out*this._x1);this.buffer[this._z1]=_A1+(this._y1*this.feedback);++this._z1;this._z1%=this.buffer.length;return out;}_B1(_C1){this.feedback=Math.min(Math.max(0,_C1),1);}_D1(_E1){this._w1=Math.min(Math.max(0,_E1),1);this._x1=1-this._w1;}}class _F1{constructor(_v1){this.feedback=0;this.buffer=new Float32Array(_v1);
this._z1=0;}process(_A1){const out=this.buffer[this._z1];this.buffer[this._z1]=_A1+(out*this.feedback);++this._z1;this._z1%=this.buffer.length;return(out-_A1);}_B1(_C1){this.feedback=Math.min(Math.max(0,_C1),1);}}class _G1 extends AudioWorkletProcessor{static _H1=8;static _I1=4;static _J1=0.015;static _K1=0.4;static _L1=0.28;static _M1=0.7;static _N1=[1116,1188,1277,1356,1422,1491,1557,1617];static _O1=[1139,1211,1300,1379,1445,1514,1580,1640];static _P1=[556,441,341,225];static _Q1=[579,464,364,248];static get parameterDescriptors(){
return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"size",automationRate:"a-rate",defaultValue:0.7,minValue:0.0,maxValue:1.0},{name:"damp",automationRate:"a-rate",defaultValue:0.1,minValue:0.0,maxValue:1.0},{name:"mix",automationRate:"a-rate",defaultValue:0.35,minValue:0.0,maxValue:1.0}];}constructor(_R1){super();this._S1();const _T1=_R1.outputChannelCount[0];this._U1=-1;this._V1=-1;this._W1=new Array(_T1);this._X1=new Array(_T1);const _Y1=[_G1._N1,_G1._O1];const _Z1=[_G1._P1,
_G1._Q1];for(let __1=0;__1<_T1;++__1){this._W1[__1]=new Array(_G1._H1);this._X1[__1]=new Array(_G1._I1);for(let _02=0;_02<_G1._H1;++_02)this._W1[__1][_02]=new _u1(_Y1[__1%_Y1.length][_02]);for(let _02=0;_02<_G1._I1;++_02)this._X1[__1][_02]=new _F1(_Z1[__1%_Z1.length][_02]);}this._12(0.5);this._D1(0.5);for(let __1=0;__1<_T1;++__1)for(let _02=0;_02<_G1._I1;++_02)this._X1[__1][_02]._B1(0.5);}process(_22,_32,parameters){const input=_22[0];const output=_32[0];const bypass=parameters.bypass;const size=parameters.size;
const damp=parameters.damp;const mix=parameters.mix;for(let __1=0;__1<input.length;++__1){const _42=input[__1];const _52=output[__1];for(let _62=0;_62<_42.length;++_62){const _62=(size[_62]!==undefined)?size[_62]:size[0];const _72=(damp[_62]!==undefined)?damp[_62]:damp[0];this._12(_62);this._D1(_72);_52[_62]=_42[_62];let out=0;const _82=_42[_62]*_G1._J1;for(let _02=0;_02<_G1._H1;++_02)out+=this._W1[__1][_02].process(_82);for(let _02=0;_02<_G1._I1;++_02)out=this._X1[__1][_02].process(out);const _92=(bypass[_62]!==undefined)?bypass[_62]:bypass[0];
if(_92>0.0){continue;}const _a2=(mix[_62]!==undefined)?mix[_62]:mix[0];_52[_62]*=(1-_a2);_52[_62]+=(out*_a2);}}return this._b2;}_12(_v1){if(_v1===this._U1)return;const size=(_v1*_G1._L1)+_G1._M1;for(let __1=0;__1<this._W1.length;++__1)for(let _02=0;_02<_G1._H1;++_02)this._W1[__1][_02]._B1(size);this._U1=_v1;}_D1(_E1){if(_E1===this._V1)return;const damp=_E1*_G1._K1;for(let __1=0;__1<this._W1.length;++__1)for(let _02=0;_02<_G1._H1;++_02)this._W1[__1][_02]._D1(damp);this._V1=_E1;}}registerProcessor("reverb1-processor",
_G1);class _c2 extends AudioWorkletProcessor{static get parameterDescriptors(){return [];}constructor(){super();this._S1();}process(_d2,_e2,_f2){const input=_d2[0];const _g2=_e2[0];const _h2=_e2[1];for(let __1=0;__1<input.length;++__1){const _42=input[__1];const _i2=_g2[__1];const _j2=_h2[__1];for(let _62=0;_62<_42.length;++_62){_i2[_62]=_42[_62];_j2[_62]=_42[_62];}}return this._b2;}}class _k2 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,
minValue:0,maxValue:1}];}constructor(){super();this._S1();}process(_d2,_e2,_f2){const _l2=_d2[0];const _m2=_d2[1];const output=_e2[0];const bypass=_f2.bypass;for(let __1=0;__1<_m2.length;++__1){const _n2=_l2[__1];const _o2=_m2[__1];const _52=output[__1];for(let _62=0;_62<_n2.length;++_62){const _92=(bypass[_62]!==undefined)?bypass[_62]:bypass[0];if(_92>0){_52[_62]=_o2[_62];}else {_52[_62]=_n2[_62];}}}return this._b2;}}registerProcessor("eq-input",_c2);registerProcessor("eq-output",_k2);class _p2 extends AudioWorkletProcessor{
static get parameterDescriptors(){const _q2=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"cutoff",automationRate:"a-rate",defaultValue:Math.min(500.0,_q2),minValue:10.0,maxValue:_q2},{name:"q",automationRate:"a-rate",defaultValue:1.5,minValue:1.0,maxValue:100.0}];}constructor(_R1){super();this._S1();const _T1=_R1.outputChannelCount[0];this._r2=0;this._s2=0;this._t2=0;this._u2=0;this._v2=0;this._w2=new Float32Array(_T1);this._x2=new Float32Array(_T1);
this._y2=new Float32Array(_T1);this._z2=new Float32Array(_T1);this._A2=-1;this._B2=-1;}process(_22,_32,parameters){const input=_22[0];const output=_32[0];const bypass=parameters.bypass;const cutoff=parameters.cutoff;const q=parameters.q;const _C2=(cutoff.length===1&&q.length===1);if(_C2)this._D2(cutoff[0],q[0]);for(let __1=0;__1<input.length;++__1){const _42=input[__1];const _52=output[__1];for(let _62=0;_62<_42.length;++_62){if(_C2===!1){const __1=(cutoff[_62]!==undefined)?cutoff[_62]:cutoff[0];const _E2=(q[_62]!==undefined)?q[_62]:q[0];
this._D2(__1,_E2);}const _F2=this._t2*_42[_62]+this._u2*this._w2[__1]+this._v2*this._x2[__1]-this._r2*this._y2[__1]-this._s2*this._z2[__1];this._x2[__1]=this._w2[__1];this._w2[__1]=_42[_62];this._z2[__1]=this._y2[__1];this._y2[__1]=_F2;const _92=(bypass[_62]!==undefined)?bypass[_62]:bypass[0];_52[_62]=(_92>0)?_42[_62]:_F2;}}return this._b2;}_D2(_G2,_H2){if(_G2===this._A2&&_H2===this._B2)return;const _I2=2*Math.PI*_G2/sampleRate;const alpha=Math.sin(_I2)/(2*_H2);const _J2=Math.cos(_I2);const _K2=1+alpha;
const _r2=-2*_J2;const _s2=1-alpha;const _t2=(1-_J2)/2;const _u2=1-_J2;const _v2=(1-_J2)/2;this._r2=_r2/_K2;this._s2=_s2/_K2;this._t2=_t2/_K2;this._u2=_u2/_K2;this._v2=_v2/_K2;this._A2=_G2;this._B2=_H2;}}registerProcessor("lpf2-processor",_p2);class _L2 extends AudioWorkletProcessor{static get parameterDescriptors(){const _M2=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"freq",automationRate:"a-rate",defaultValue:Math.min(1500.0,
_M2),minValue:10.0,maxValue:_M2},{name:"q",automationRate:"a-rate",defaultValue:1.0,minValue:1.0,maxValue:100.0},{name:"gain",automationRate:"a-rate",defaultValue:1e-2,minValue:1e-6}];}constructor(_R1){super();this._S1();const _T1=_R1.outputChannelCount[0];this._r2=0;this._s2=0;this._t2=0;this._u2=0;this._v2=0;this._w2=new Float32Array(_T1);this._x2=new Float32Array(_T1);this._y2=new Float32Array(_T1);this._z2=new Float32Array(_T1);this._N2=-1;this._B2=-1;this._O2=-1;}process(_22,_32,parameters){const input=_22[0];
const output=_32[0];const bypass=parameters.bypass;const freq=parameters.freq;const q=parameters.q;const gain=parameters.gain;const _C2=(freq.length===1&&q.length===1&&gain.length===1);if(_C2)this._D2(freq[0],q[0],gain[0]);for(let __1=0;__1<input.length;++__1){const _42=input[__1];const _52=output[__1];for(let _62=0;_62<_42.length;++_62){if(_C2===!1){const _P2=(freq[_62]!==undefined)?freq[_62]:freq[0];const _E2=(q[_62]!==undefined)?q[_62]:q[0];const _Q2=(gain[_62]!==undefined)?gain[_62]:gain[0];this._D2(_P2,
_E2,_Q2);}const _F2=this._t2*_42[_62]+this._u2*this._w2[__1]+this._v2*this._x2[__1]-this._r2*this._y2[__1]-this._s2*this._z2[__1];this._x2[__1]=this._w2[__1];this._w2[__1]=_42[_62];this._z2[__1]=this._y2[__1];this._y2[__1]=_F2;const _92=(bypass[_62]!==undefined)?bypass[_62]:bypass[0];_52[_62]=(_92>0)?_42[_62]:_F2;}}return this._b2;}_D2(_R2,_H2,_S2){if(_R2===this._N2&&_H2===this._B2&&_S2===this._O2)return;const _I2=2*Math.PI*_R2/sampleRate;const _J2=Math.cos(_I2);const _T2=Math.sqrt(_S2);const alpha=Math.sin(_I2)/(2*_H2);
const _U2=alpha/_T2;const _V2=alpha*_T2;const _K2=1+_U2;const _r2=-2*_J2;const _s2=1-_U2;const _t2=1+_V2;const _u2=_r2;const _v2=1-_V2;this._r2=_r2/_K2;this._s2=_s2/_K2;this._t2=_t2/_K2;this._u2=_u2/_K2;this._v2=_v2/_K2;this._N2=_R2;this._B2=_H2;this._O2=_S2;}}registerProcessor("peak-eq-processor",_L2);class _W2 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"gain",automationRate:"a-rate",defaultValue:0.5,
minValue:0.0}];}constructor(){super();this._S1();}process(_22,_32,parameters){const input=_22[0];const output=_32[0];const bypass=parameters.bypass;const gain=parameters.gain;for(let __1=0;__1<input.length;++__1){const _42=input[__1];const _52=output[__1];for(let _62=0;_62<_42.length;++_62){_52[_62]=_42[_62];const _92=(bypass[_62]!==undefined)?bypass[_62]:bypass[0];if(_92>0.0){continue;}const _Q2=(gain[_62]!==undefined)?gain[_62]:gain[0];_52[_62]*=_Q2;}}return this._b2;}}registerProcessor("gain-processor",
_W2);class _X2 extends AudioWorkletProcessor{static get parameterDescriptors(){const _q2=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"cutoff",automationRate:"a-rate",defaultValue:Math.min(1500.0,_q2),minValue:10.0,maxValue:_q2},{name:"q",automationRate:"a-rate",defaultValue:1.5,minValue:1.0,maxValue:100.0}];}constructor(_R1){super();this._S1();const _T1=_R1.outputChannelCount[0];this._r2=0;this._s2=0;this._t2=0;this._u2=0;this._v2=0;
this._w2=new Float32Array(_T1);this._x2=new Float32Array(_T1);this._y2=new Float32Array(_T1);this._z2=new Float32Array(_T1);this._A2=-1;this._B2=-1;}process(_22,_32,parameters){const input=_22[0];const output=_32[0];const bypass=parameters.bypass;const cutoff=parameters.cutoff;const q=parameters.q;const _C2=(cutoff.length===1&&q.length===1);if(_C2)this._D2(cutoff[0],q[0]);for(let __1=0;__1<input.length;++__1){const _42=input[__1];const _52=output[__1];for(let _62=0;_62<_42.length;++_62){if(_C2===!1){const __1=(cutoff[_62]!==undefined)?cutoff[_62]:cutoff[0];
const _E2=(q[_62]!==undefined)?q[_62]:q[0];this._D2(__1,_E2);}const _F2=this._t2*_42[_62]+this._u2*this._w2[__1]+this._v2*this._x2[__1]-this._r2*this._y2[__1]-this._s2*this._z2[__1];this._x2[__1]=this._w2[__1];this._w2[__1]=_42[_62];this._z2[__1]=this._y2[__1];this._y2[__1]=_F2;const _92=(bypass[_62]!==undefined)?bypass[_62]:bypass[0];_52[_62]=(_92>0)?_42[_62]:_F2;}}return this._b2;}_D2(_G2,_H2){if(_G2===this._A2&&_H2===this._B2)return;const _I2=2*Math.PI*_G2/sampleRate;const alpha=Math.sin(_I2)/(2*_H2);
const _J2=Math.cos(_I2);const _K2=1+alpha;const _r2=-2*_J2;const _s2=1-alpha;const _t2=(1+_J2)/2;const _u2=-1-_J2;const _v2=(1+_J2)/2;this._r2=_r2/_K2;this._s2=_s2/_K2;this._t2=_t2/_K2;this._u2=_u2/_K2;this._v2=_v2/_K2;this._A2=_G2;this._B2=_H2;}}registerProcessor("hpf2-processor",_X2);class _Y2 extends AudioWorkletProcessor{static get parameterDescriptors(){const _M2=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"freq",automationRate:"a-rate",
defaultValue:Math.min(5000.0,_M2),minValue:10.0,maxValue:_M2},{name:"q",automationRate:"a-rate",defaultValue:1.0,minValue:1.0,maxValue:100.0},{name:"gain",automationRate:"a-rate",defaultValue:1e-2,minValue:1e-6}];}constructor(_R1){super();this._S1();const _T1=_R1.outputChannelCount[0];this._r2=0;this._s2=0;this._t2=0;this._u2=0;this._v2=0;this._w2=new Float32Array(_T1);this._x2=new Float32Array(_T1);this._y2=new Float32Array(_T1);this._z2=new Float32Array(_T1);this._N2=-1;this._B2=-1;this._O2=-1;}process(_22,
_32,parameters){const input=_22[0];const output=_32[0];const bypass=parameters.bypass;const freq=parameters.freq;const q=parameters.q;const gain=parameters.gain;const _C2=(freq.length===1&&q.length===1&&gain.length===1);if(_C2)this._D2(freq[0],q[0],gain[0]);for(let __1=0;__1<input.length;++__1){const _42=input[__1];const _52=output[__1];for(let _62=0;_62<_42.length;++_62){if(_C2===!1){const _P2=(freq[_62]!==undefined)?freq[_62]:freq[0];const _E2=(q[_62]!==undefined)?q[_62]:q[0];const _Q2=(gain[_62]!==undefined)?gain[_62]:gain[0];
this._D2(_P2,_E2,_Q2);}const _F2=this._t2*_42[_62]+this._u2*this._w2[__1]+this._v2*this._x2[__1]-this._r2*this._y2[__1]-this._s2*this._z2[__1];this._x2[__1]=this._w2[__1];this._w2[__1]=_42[_62];this._z2[__1]=this._y2[__1];this._y2[__1]=_F2;const _92=(bypass[_62]!==undefined)?bypass[_62]:bypass[0];_52[_62]=(_92>0)?_42[_62]:_F2;}}return this._b2;}_D2(_R2,_H2,_S2){if(_R2===this._N2&&_H2===this._B2&&_S2===this._O2)return;const _I2=2*Math.PI*_R2/sampleRate;const _J2=Math.cos(_I2);const _T2=Math.sqrt(_S2);const _Z2=_T2+1;
const __2=_T2-1;const _03=_Z2*_J2;const _13=__2*_J2;const _23=_Z2-_13;const _33=_Z2+_13;const alpha=Math.sin(_I2)/(2*_H2);const _43=(2*Math.sqrt(_T2)*alpha);const _K2=_23+_43;const _r2=2*(__2-_03);const _s2=_23-_43;const _t2=_T2*(_33+_43);const _u2=-2*_T2*(__2+_03);const _v2=_T2*(_33-_43);this._r2=_r2/_K2;this._s2=_s2/_K2;this._t2=_t2/_K2;this._u2=_u2/_K2;this._v2=_v2/_K2;this._N2=_R2;this._B2=_H2;this._O2=_S2;}}registerProcessor("hi-shelf-processor",_Y2);function _53(){}_53._63={_73:0,_83:1,_93:2,_a3:3,_b3:4,
_c3:5};_53._d3=function(_e3){return 1.0-_e3;};_53._f3=function(_e3){return _e3;};_53._g3=function(_e3){return 0.5*(Math.sin((_e3*2.0*Math.PI)-(Math.PI/2.0))+1.0);};_53._h3=function(_e3){if(_e3<0.5){return 0.0;}return 1.0;};_53._i3=function(_e3){if(_e3<0.5){return 2.0*_e3;}return 2.0-(2.0*_e3);};_53._j3=[_53._d3,_53._f3,_53._g3,_53._h3,_53._i3];_k3._l3=512;_k3._m3=1.0/_k3._l3;function _k3(_n3){this.data=new Float32Array(_k3._l3);for(let _02=0;_02<_k3._l3;++_02){this.data[_02]=_n3(_02*_k3._m3);}}_k3.prototype._o3=function(_e3){
_e3=Math.max(0.0,_e3);_e3=Math.min(_e3,1.0);const _p3=_e3*_k3._l3;const _q3=~~_p3;const _r3=_p3-_q3;let _s3=_q3;let _t3=_s3+1;if(_s3>=_k3._l3){_s3-=_k3._l3;}if(_t3>=_k3._l3){_t3-=_k3._l3;}const _u3=this.data[_s3];const _v3=this.data[_t3];return _u3+(_v3-_u3)*_r3;};;_w3._x3=[];_w3._y3=!1;_w3._z3=0.0;_w3._M2=20.0;function _w3(){this._A3=48000;this.shape=_53._63._93;this.freq=1.0;this._B3=0.0;this._m3=0.0;this._C3=0.0;if(_w3._y3==true){return;}for(let _02=0;_02<_53._63._c3;++_02){_w3._x3[_02]=new _k3(_53._j3[_02]);
}_w3._y3=true;}_w3._D3=function(){return(_w3._y3==!0);};_w3.prototype._E3=function(_F3){this._A3=_F3;this._G3();};;_w3.prototype._H3=function(_R2){_R2=Math.max(_w3._z3,_R2);_R2=Math.min(_R2,_w3._M2);this.freq=_R2;this._G3();};;_w3.prototype._I3=function(_J3){_J3=Math.max(0.0,_J3);_J3=Math.min(_J3,1.0);const _K3=_J3-this._C3;this._C3=_J3;this._B3+=_K3;while(this._B3>=1.0){this._B3-=1.0;}while(this._B3<0.0){this._B3+=1.0;}};;_w3.prototype._L3=function(_M3){_M3=Math.max(0,_M3);_M3=Math.min(_M3,_53._63._c3-1);
this.shape=_M3;};;_w3.prototype._o3=function(){const _N3=_w3._x3[this.shape]._o3(this._B3);this._B3+=this._m3;while(this._B3>=1.0){this._B3-=1.0;}return _N3;};;_w3.prototype._G3=function(){this._m3=this.freq/this._A3;};;class _O3 extends AudioWorkletProcessor{static _P3=5.0;static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"time",automationRate:"a-rate",defaultValue:0.2,minValue:0.0,maxValue:_O3._P3},{name:"feedback",automationRate:"a-rate",
defaultValue:0.5,minValue:0.0,maxValue:1.0},{name:"mix",automationRate:"a-rate",defaultValue:0.35,minValue:0.0,maxValue:1.0}];}constructor(_R1){super();this._S1();const _T1=_R1.outputChannelCount[0];const _Q3=(_O3._P3*sampleRate)+1;this.buffer=new Array(_T1);this._R3=new Uint32Array(_T1);for(let __1=0;__1<_T1;++__1)this.buffer[__1]=new Float32Array(_Q3);}process(_22,_32,parameters){const input=_22[0];const output=_32[0];const bypass=parameters.bypass;const time=parameters.time;const feedback=parameters.feedback;
const mix=parameters.mix;for(let __1=0;__1<input.length;++__1){const _42=input[__1];const _52=output[__1];for(let _62=0;_62<_42.length;++_62){_52[_62]=_42[_62];const _S3=(time[_62]!==undefined)?time[_62]:time[0];const _T3=this._o3(__1,_S3);const _P2=(feedback[_62]!==undefined)?feedback[_62]:feedback[0];const _U3=_42[_62]+(_T3*_P2);this.write(__1,_U3);const _92=(bypass[_62]!==undefined)?bypass[_62]:bypass[0];if(_92>0.0){continue;}const _a2=(mix[_62]!==undefined)?mix[_62]:mix[0];_52[_62]*=(1-_a2);_52[_62]+=(_T3*_a2);
}}return this._b2;}_o3(_V3,_W3){const _X3=_W3*sampleRate;let _s3=(this._R3[_V3]-~~_X3);let _t3=(_s3-1);while(_s3<0)_s3+=this.buffer[_V3].length;while(_t3<0)_t3+=this.buffer[_V3].length;const _Y3=_X3-~~_X3;const _u3=this.buffer[_V3][_s3];const _v3=this.buffer[_V3][_t3];return _u3+(_v3-_u3)*_Y3;}write(_V3,_A1){++this._R3[_V3];this._R3[_V3]%=this.buffer[_V3].length;this.buffer[_V3][this._R3[_V3]]=_A1;}}registerProcessor("delay-processor",_O3);AudioWorkletProcessor.prototype._S1=function(){this._b2=true;this.port.onmessage=(_Z3)=>{
if(_Z3.data==="kill")this._b2=false;};};;class __3 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1}];}constructor(){super();this._S1();}process(_22,_32,parameters){const input=_22[0];const bypass=parameters.bypass;for(let __1=0;__1<input.length;++__1){const _42=input[__1];for(let _62=0;_62<_42.length;++_62){const _92=(bypass[_62]!==undefined)?bypass[_62]:bypass[0];_32[_92][__1][_62]=_42[_62];}}return this._b2;
}}class _04 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"gain",automationRate:"a-rate",defaultValue:1,minValue:0}];}constructor(){super();this._S1();}process(_22,_32,parameters){const _l2=_22[0];const _m2=_22[1];const output=_32[0];const gain=parameters.gain;for(let __1=0;__1<_m2.length;++__1){const _42=_m2[__1];const _52=output[__1];for(let _62=0;_62<_42.length;++_62)_52[_62]=_42[_62];}for(let __1=0;__1<_l2.length;++__1){const _42=_l2[__1];const _52=output[__1];for(let _62=0;_62<_42.length;
++_62){const _Q2=(gain[_62]!==undefined)?gain[_62]:gain[0];_52[_62]+=_42[_62]*_Q2;}}return this._b2;}}registerProcessor("audio-bus-input",__3);registerProcessor("audio-bus-output",_04);class _14 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"gain",automationRate:"a-rate",defaultValue:1.0,minValue:0.0},{name:"factor",automationRate:"a-rate",defaultValue:20,minValue:1,maxValue:100},{name:"resolution",
automationRate:"a-rate",defaultValue:8,minValue:2,maxValue:16},{name:"mix",automationRate:"a-rate",defaultValue:0.8,minValue:0.0,maxValue:1.0}];}static _24=[undefined,undefined,2,4,8,16,32,64,128,256,512,1024,2048,4096,8192,16384,32768];constructor(_R1){super();this._S1();const _T1=_R1.outputChannelCount[0];this._34=new Float32Array(_T1);this._44=new Uint32Array(_T1);}process(_22,_32,parameters){const input=_22[0];const output=_32[0];const bypass=parameters.bypass;const gain=parameters.gain;const factor=parameters.factor;
const resolution=parameters.resolution;const mix=parameters.mix;for(let __1=0;__1<input.length;++__1){const _42=input[__1];const _52=output[__1];for(let _62=0;_62<_42.length;++_62){_52[_62]=_42[_62];if(this._44[__1]===0)this._34[__1]=_42[_62];const _P2=(factor[_62]!==undefined)?factor[_62]:factor[0];++this._44[__1];this._44[__1]%=_P2;const _92=(bypass[_62]!==undefined)?bypass[_62]:bypass[0];if(_92>0.0){continue;}let _82=this._34[__1];const _Q2=(gain[_62]!==undefined)?gain[_62]:gain[0];_82*=_Q2;_82=Math.max(Math.min(_82,
1.0),-1.0);const _54=(resolution[_62]!==undefined)?resolution[_62]:resolution[0];const max=(_82>0.0)?_14._24[_54]-1:_14._24[_54];_82=Math.round(_82*max)/max;const _a2=(mix[_62]!==undefined)?mix[_62]:mix[0];_52[_62]*=(1.0-_a2);_52[_62]+=(_82*_a2);}}return this._b2;}}registerProcessor("bitcrusher-processor",_14);class _64 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"rate",automationRate:"a-rate",defaultValue:5.0,
minValue:0.0,maxValue:20.0},{name:"intensity",automationRate:"a-rate",defaultValue:1.0,minValue:0.0,maxValue:1.0},{name:"offset",automationRate:"a-rate",defaultValue:0.0,minValue:0.0,maxValue:1.0},{name:"shape",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:4}];}constructor(_R1){super();this._S1();const _T1=_R1.outputChannelCount[0];this._74=new Array(_T1).fill(1.0);this._84=new Array(_T1).fill(0.0);this._94=new Array(_T1).fill(_53._63._73);this._a4=new Array(_T1);for(let __1=0;__1<_T1;++__1){
this._a4[__1]=new _w3();this._a4[__1]._E3(sampleRate);this._a4[__1]._H3(this._74[__1]);this._a4[__1]._L3(this._94[__1]);if(__1%2===1){this._a4[__1]._I3(this._84[__1]);}}}process(_22,_32,parameters){const input=_22[0];const output=_32[0];const bypass=parameters.bypass;const rate=parameters.rate;const intensity=parameters.intensity;const offset=parameters.offset;const shape=parameters.shape;for(let __1=0;__1<input.length;++__1){const _42=input[__1];const _52=output[__1];for(let _62=0;_62<_42.length;++_62){_52[_62]=_42[_62];
const _54=(rate[_62]!==undefined)?rate[_62]:rate[0];const _b4=(offset[_62]!==undefined)?offset[_62]:offset[0];const _c4=(shape[_62]!==undefined)?shape[_62]:shape[0];this._d4(__1,_54,_b4,_c4);const _e4=this._a4[__1]._o3();const _92=(bypass[_62]!==undefined)?bypass[_62]:bypass[0];if(_92>0.0){continue;}const _02=(intensity[_62]!==undefined)?intensity[_62]:intensity[0];const out=_42[_62]*_e4*_02;_52[_62]*=(1.0-_02);_52[_62]+=out;}}return this._b2;}_d4(_V3,_f4,_J3,_M3){if(_f4!==this._74[_V3]){this._a4[_V3]._H3(_f4);
this._74[_V3]=_f4;}if(_J3!==this._84[_V3]){if(_V3%2===1){this._a4[_V3]._I3(_J3);}this._84[_V3]=_J3;}if(_M3!==this._94[_V3]){this._a4[_V3]._L3(_M3);this._94[_V3]=_M3;}}}registerProcessor("tremolo-processor",_64);class _g4{constructor(_W3=1e-3){this.setTime(_W3);}setTime(_W3){this._h4=Math.exp(-1/(_W3*sampleRate));}process(_i4,_j4){return _i4+this._h4*(_j4-_i4);}}class _k4{constructor(_l4,_m4){this._n4=new _g4(_l4);this._o4=new _g4(_m4);this._p4=_l4;this._q4=_m4;}_r4(_W3){if(_W3===this._p4)return;this._n4.setTime(_W3);
this._p4=_W3;}_s4(_W3){if(_W3===this._q4)return;this._o4.setTime(_W3);this._q4=_W3;}process(_i4,_j4){if(_i4>_j4)return this._n4.process(_i4,_j4);else return this._o4.process(_i4,_j4);}}class _t4 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"ingain",automationRate:"a-rate",defaultValue:1,minValue:0},{name:"threshold",automationRate:"a-rate",defaultValue:0.125,minValue:1e-3,maxValue:1},{name:"ratio",
automationRate:"a-rate",defaultValue:4,minValue:1},{name:"attack",automationRate:"a-rate",defaultValue:0.05,minValue:1e-3,maxValue:1e-1},{name:"release",automationRate:"a-rate",defaultValue:0.25,minValue:1e-2,maxValue:1},{name:"outgain",automationRate:"a-rate",defaultValue:1,minValue:0}];}constructor(_u4){super();this._S1();const _n4=_t4.parameterDescriptors.find(_v4=>_v4.name==="attack");const _o4=_t4.parameterDescriptors.find(_v4=>_v4.name==="release");this._w4=new _k4(_n4.defaultValue,_o4.defaultValue);
this._x4=0;}process(_y4,_z4,_A4){const input=_y4[0];const output=_z4[0];const bypass=_A4.bypass;const ingain=_A4.ingain;const outgain=_A4.outgain;const threshold=_A4.threshold;const ratio=_A4.ratio;const attack=_A4.attack;const release=_A4.release;if(input.length===0)return this._b2;for(let _62=0;_62<input[0].length;++_62){let _B4=input.map(_C4=>_C4[_62]);output.forEach((_C4,_D4)=>{_C4[_62]=_B4[_D4];});const _E4=(ingain[_62]!==undefined)?ingain[_62]:ingain[0];_B4=_B4.map(_F4=>_F4*=_E4);const rect=_B4.map(_F4=>Math.abs(_F4));
const max=Math.max(...rect);const _G4=_H4(max);const _S3=(threshold[_62]!==undefined)?threshold[_62]:threshold[0];const _I4=_H4(_S3);const _J4=Math.max(0,_G4-_I4);const _n4=(attack[_62]!==undefined)?attack[_62]:attack[0];const _o4=(release[_62]!==undefined)?release[_62]:release[0];this._w4._r4(_n4);this._w4._s4(_o4);this._x4=this._w4.process(_J4,this._x4);const _92=(bypass[_62]!==undefined)?bypass[_62]:bypass[0];if(_92>0)continue;const _54=(ratio[_62]!==undefined)?ratio[_62]:ratio[0];const _K4=(this._x4/_54)-this._x4;
const _Q2=_L4(_K4);_B4=_B4.map(_F4=>_F4*=_Q2);const _M4=(outgain[_62]!==undefined)?outgain[_62]:outgain[0];_B4=_B4.map(_F4=>_F4*=_M4);output.forEach((_C4,_D4)=>{_C4[_62]=_B4[_D4];});}return this._b2;}}function _H4(_N4){return 20*Math.log10(_N4);}function _L4(_N4){return Math.pow(10,_N4/20);}registerProcessor("compressor-processor",_t4);class _O4 extends AudioWorkletProcessor{static get parameterDescriptors(){const _M2=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,
minValue:0,maxValue:1},{name:"freq",automationRate:"a-rate",defaultValue:Math.min(500.0,_M2),minValue:10.0,maxValue:_M2},{name:"q",automationRate:"a-rate",defaultValue:1.0,minValue:1.0,maxValue:100.0},{name:"gain",automationRate:"a-rate",defaultValue:1e-2,minValue:1e-6}];}constructor(_R1){super();this._S1();const _T1=_R1.outputChannelCount[0];this._r2=0;this._s2=0;this._t2=0;this._u2=0;this._v2=0;this._w2=new Float32Array(_T1);this._x2=new Float32Array(_T1);this._y2=new Float32Array(_T1);this._z2=new Float32Array(_T1);
this._N2=-1;this._B2=-1;this._O2=-1;}process(_22,_32,parameters){const input=_22[0];const output=_32[0];const bypass=parameters.bypass;const freq=parameters.freq;const q=parameters.q;const gain=parameters.gain;const _C2=(freq.length===1&&q.length===1&&gain.length===1);if(_C2)this._D2(freq[0],q[0],gain[0]);for(let __1=0;__1<input.length;++__1){const _42=input[__1];const _52=output[__1];for(let _62=0;_62<_42.length;++_62){if(_C2===!1){const _P2=(freq[_62]!==undefined)?freq[_62]:freq[0];const _E2=(q[_62]!==undefined)?q[_62]:q[0];
const _Q2=(gain[_62]!==undefined)?gain[_62]:gain[0];this._D2(_P2,_E2,_Q2);}const _F2=this._t2*_42[_62]+this._u2*this._w2[__1]+this._v2*this._x2[__1]-this._r2*this._y2[__1]-this._s2*this._z2[__1];this._x2[__1]=this._w2[__1];this._w2[__1]=_42[_62];this._z2[__1]=this._y2[__1];this._y2[__1]=_F2;const _92=(bypass[_62]!==undefined)?bypass[_62]:bypass[0];_52[_62]=(_92>0)?_42[_62]:_F2;}}return this._b2;}_D2(_R2,_H2,_S2){if(_R2===this._N2&&_H2===this._B2&&_S2===this._O2)return;const _I2=2*Math.PI*_R2/sampleRate;
const _J2=Math.cos(_I2);const _T2=Math.sqrt(_S2);const _Z2=_T2+1;const __2=_T2-1;const _03=_Z2*_J2;const _13=__2*_J2;const _23=_Z2-_13;const _33=_Z2+_13;const alpha=Math.sin(_I2)/(2*_H2);const _43=(2*Math.sqrt(_T2)*alpha);const _K2=_33+_43;const _r2=-2*(__2+_03);const _s2=_33-_43;const _t2=_T2*(_23+_43);const _u2=2*_T2*(__2-_03);const _v2=_T2*(_23-_43);this._r2=_r2/_K2;this._s2=_s2/_K2;this._t2=_t2/_K2;this._u2=_u2/_K2;this._v2=_v2/_K2;this._N2=_R2;this._B2=_H2;this._O2=_S2;}}registerProcessor("lo-shelf-processor",
_O4);