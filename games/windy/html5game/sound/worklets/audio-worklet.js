class _E3{constructor(_F3){this._G3=0;this._H3=0;this.feedback=0;this._I3=0;this.buffer=new Float32Array(_F3);this._J3=0;}process(_K3){const out=this.buffer[this._J3];this._I3=(this._I3*this._G3)+(out*this._H3);this.buffer[this._J3]=_K3+(this._I3*this.feedback);++this._J3;this._J3%=this.buffer.length;return out;}_L3(_M3){this.feedback=Math.min(Math.max(0,_M3),1);}_N3(_O3){this._G3=Math.min(Math.max(0,_O3),1);this._H3=1-this._G3;}}class _P3{constructor(_F3){this.feedback=0;this.buffer=new Float32Array(_F3);
this._J3=0;}process(_K3){const out=this.buffer[this._J3];this.buffer[this._J3]=_K3+(out*this.feedback);++this._J3;this._J3%=this.buffer.length;return(out-_K3);}_L3(_M3){this.feedback=Math.min(Math.max(0,_M3),1);}}class _Q3 extends AudioWorkletProcessor{static _R3=8;static _S3=4;static _T3=0.015;static _U3=0.4;static _V3=0.28;static _W3=0.7;static _X3=[1116,1188,1277,1356,1422,1491,1557,1617];static _Y3=[1139,1211,1300,1379,1445,1514,1580,1640];static _Z3=[556,441,341,225];static __3=[579,464,364,248];static get parameterDescriptors(){
return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"size",automationRate:"a-rate",defaultValue:0.7,minValue:0.0,maxValue:1.0},{name:"damp",automationRate:"a-rate",defaultValue:0.1,minValue:0.0,maxValue:1.0},{name:"mix",automationRate:"a-rate",defaultValue:0.35,minValue:0.0,maxValue:1.0}];}constructor(_04){super();this._14();const _24=_04.outputChannelCount[0];this._34=-1;this._44=-1;this._54=new Array(_24);this._64=new Array(_24);const _74=[_Q3._X3,_Q3._Y3];const _84=[_Q3._Z3,
_Q3.__3];for(let _94=0;_94<_24;++_94){this._54[_94]=new Array(_Q3._R3);this._64[_94]=new Array(_Q3._S3);for(let _a4=0;_a4<_Q3._R3;++_a4)this._54[_94][_a4]=new _E3(_74[_94%_74.length][_a4]);for(let _a4=0;_a4<_Q3._S3;++_a4)this._64[_94][_a4]=new _P3(_84[_94%_84.length][_a4]);}this._b4(0.5);this._N3(0.5);for(let _94=0;_94<_24;++_94)for(let _a4=0;_a4<_Q3._S3;++_a4)this._64[_94][_a4]._L3(0.5);}process(_c4,_d4,parameters){const input=_c4[0];const output=_d4[0];const bypass=parameters.bypass;const size=parameters.size;
const damp=parameters.damp;const mix=parameters.mix;for(let _94=0;_94<input.length;++_94){const _e4=input[_94];const _f4=output[_94];for(let _g4=0;_g4<_e4.length;++_g4){const _g4=(size[_g4]!==undefined)?size[_g4]:size[0];const _h4=(damp[_g4]!==undefined)?damp[_g4]:damp[0];this._b4(_g4);this._N3(_h4);_f4[_g4]=_e4[_g4];let out=0;const _i4=_e4[_g4]*_Q3._T3;for(let _a4=0;_a4<_Q3._R3;++_a4)out+=this._54[_94][_a4].process(_i4);for(let _a4=0;_a4<_Q3._S3;++_a4)out=this._64[_94][_a4].process(out);const _j4=(bypass[_g4]!==undefined)?bypass[_g4]:bypass[0];
if(_j4>0.0){continue;}const _k4=(mix[_g4]!==undefined)?mix[_g4]:mix[0];_f4[_g4]*=(1-_k4);_f4[_g4]+=(out*_k4);}}return this._l4;}_b4(_F3){if(_F3===this._34)return;const size=(_F3*_Q3._V3)+_Q3._W3;for(let _94=0;_94<this._54.length;++_94)for(let _a4=0;_a4<_Q3._R3;++_a4)this._54[_94][_a4]._L3(size);this._34=_F3;}_N3(_O3){if(_O3===this._44)return;const damp=_O3*_Q3._U3;for(let _94=0;_94<this._54.length;++_94)for(let _a4=0;_a4<_Q3._R3;++_a4)this._54[_94][_a4]._N3(damp);this._44=_O3;}}registerProcessor("reverb1-processor",
_Q3);class _m4 extends AudioWorkletProcessor{static get parameterDescriptors(){return [];}constructor(){super();this._14();}process(_n4,_o4,_p4){const input=_n4[0];const _q4=_o4[0];const _r4=_o4[1];for(let _94=0;_94<input.length;++_94){const _e4=input[_94];const _s4=_q4[_94];const _t4=_r4[_94];for(let _g4=0;_g4<_e4.length;++_g4){_s4[_g4]=_e4[_g4];_t4[_g4]=_e4[_g4];}}return this._l4;}}class _u4 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,
minValue:0,maxValue:1}];}constructor(){super();this._14();}process(_n4,_o4,_p4){const _v4=_n4[0];const _w4=_n4[1];const output=_o4[0];const bypass=_p4.bypass;for(let _94=0;_94<_w4.length;++_94){const _x4=_v4[_94];const _y4=_w4[_94];const _f4=output[_94];for(let _g4=0;_g4<_x4.length;++_g4){const _j4=(bypass[_g4]!==undefined)?bypass[_g4]:bypass[0];if(_j4>0){_f4[_g4]=_y4[_g4];}else {_f4[_g4]=_x4[_g4];}}}return this._l4;}}registerProcessor("eq-input",_m4);registerProcessor("eq-output",_u4);class _z4 extends AudioWorkletProcessor{
static get parameterDescriptors(){const _A4=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"cutoff",automationRate:"a-rate",defaultValue:Math.min(500.0,_A4),minValue:10.0,maxValue:_A4},{name:"q",automationRate:"a-rate",defaultValue:1.5,minValue:1.0,maxValue:100.0}];}constructor(_04){super();this._14();const _24=_04.outputChannelCount[0];this._B4=0;this._C4=0;this._D4=0;this._E4=0;this._F4=0;this._G4=new Float32Array(_24);this._H4=new Float32Array(_24);
this._I4=new Float32Array(_24);this._J4=new Float32Array(_24);this._K4=-1;this._L4=-1;}process(_c4,_d4,parameters){const input=_c4[0];const output=_d4[0];const bypass=parameters.bypass;const cutoff=parameters.cutoff;const q=parameters.q;const _M4=(cutoff.length===1&&q.length===1);if(_M4)this._N4(cutoff[0],q[0]);for(let _94=0;_94<input.length;++_94){const _e4=input[_94];const _f4=output[_94];for(let _g4=0;_g4<_e4.length;++_g4){if(_M4===!1){const _94=(cutoff[_g4]!==undefined)?cutoff[_g4]:cutoff[0];const _O4=(q[_g4]!==undefined)?q[_g4]:q[0];
this._N4(_94,_O4);}const _P4=this._D4*_e4[_g4]+this._E4*this._G4[_94]+this._F4*this._H4[_94]-this._B4*this._I4[_94]-this._C4*this._J4[_94];this._H4[_94]=this._G4[_94];this._G4[_94]=_e4[_g4];this._J4[_94]=this._I4[_94];this._I4[_94]=_P4;const _j4=(bypass[_g4]!==undefined)?bypass[_g4]:bypass[0];_f4[_g4]=(_j4>0)?_e4[_g4]:_P4;}}return this._l4;}_N4(_Q4,_R4){if(_Q4===this._K4&&_R4===this._L4)return;const _S4=2*Math.PI*_Q4/sampleRate;const alpha=Math.sin(_S4)/(2*_R4);const _T4=Math.cos(_S4);const _U4=1+alpha;
const _B4=-2*_T4;const _C4=1-alpha;const _D4=(1-_T4)/2;const _E4=1-_T4;const _F4=(1-_T4)/2;this._B4=_B4/_U4;this._C4=_C4/_U4;this._D4=_D4/_U4;this._E4=_E4/_U4;this._F4=_F4/_U4;this._K4=_Q4;this._L4=_R4;}}registerProcessor("lpf2-processor",_z4);class _V4 extends AudioWorkletProcessor{static get parameterDescriptors(){const _W4=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"freq",automationRate:"a-rate",defaultValue:Math.min(1500.0,
_W4),minValue:10.0,maxValue:_W4},{name:"q",automationRate:"a-rate",defaultValue:1.0,minValue:1.0,maxValue:100.0},{name:"gain",automationRate:"a-rate",defaultValue:1e-2,minValue:1e-6}];}constructor(_04){super();this._14();const _24=_04.outputChannelCount[0];this._B4=0;this._C4=0;this._D4=0;this._E4=0;this._F4=0;this._G4=new Float32Array(_24);this._H4=new Float32Array(_24);this._I4=new Float32Array(_24);this._J4=new Float32Array(_24);this._X4=-1;this._L4=-1;this._Y4=-1;}process(_c4,_d4,parameters){const input=_c4[0];
const output=_d4[0];const bypass=parameters.bypass;const freq=parameters.freq;const q=parameters.q;const gain=parameters.gain;const _M4=(freq.length===1&&q.length===1&&gain.length===1);if(_M4)this._N4(freq[0],q[0],gain[0]);for(let _94=0;_94<input.length;++_94){const _e4=input[_94];const _f4=output[_94];for(let _g4=0;_g4<_e4.length;++_g4){if(_M4===!1){const _Z4=(freq[_g4]!==undefined)?freq[_g4]:freq[0];const _O4=(q[_g4]!==undefined)?q[_g4]:q[0];const __4=(gain[_g4]!==undefined)?gain[_g4]:gain[0];this._N4(_Z4,
_O4,__4);}const _P4=this._D4*_e4[_g4]+this._E4*this._G4[_94]+this._F4*this._H4[_94]-this._B4*this._I4[_94]-this._C4*this._J4[_94];this._H4[_94]=this._G4[_94];this._G4[_94]=_e4[_g4];this._J4[_94]=this._I4[_94];this._I4[_94]=_P4;const _j4=(bypass[_g4]!==undefined)?bypass[_g4]:bypass[0];_f4[_g4]=(_j4>0)?_e4[_g4]:_P4;}}return this._l4;}_N4(_05,_R4,_15){if(_05===this._X4&&_R4===this._L4&&_15===this._Y4)return;const _S4=2*Math.PI*_05/sampleRate;const _T4=Math.cos(_S4);const _25=Math.sqrt(_15);const alpha=Math.sin(_S4)/(2*_R4);
const _35=alpha/_25;const _45=alpha*_25;const _U4=1+_35;const _B4=-2*_T4;const _C4=1-_35;const _D4=1+_45;const _E4=_B4;const _F4=1-_45;this._B4=_B4/_U4;this._C4=_C4/_U4;this._D4=_D4/_U4;this._E4=_E4/_U4;this._F4=_F4/_U4;this._X4=_05;this._L4=_R4;this._Y4=_15;}}registerProcessor("peak-eq-processor",_V4);class _55 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"gain",automationRate:"a-rate",defaultValue:0.5,
minValue:0.0}];}constructor(){super();this._14();}process(_c4,_d4,parameters){const input=_c4[0];const output=_d4[0];const bypass=parameters.bypass;const gain=parameters.gain;for(let _94=0;_94<input.length;++_94){const _e4=input[_94];const _f4=output[_94];for(let _g4=0;_g4<_e4.length;++_g4){_f4[_g4]=_e4[_g4];const _j4=(bypass[_g4]!==undefined)?bypass[_g4]:bypass[0];if(_j4>0.0){continue;}const __4=(gain[_g4]!==undefined)?gain[_g4]:gain[0];_f4[_g4]*=__4;}}return this._l4;}}registerProcessor("gain-processor",
_55);class _65 extends AudioWorkletProcessor{static get parameterDescriptors(){const _A4=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"cutoff",automationRate:"a-rate",defaultValue:Math.min(1500.0,_A4),minValue:10.0,maxValue:_A4},{name:"q",automationRate:"a-rate",defaultValue:1.5,minValue:1.0,maxValue:100.0}];}constructor(_04){super();this._14();const _24=_04.outputChannelCount[0];this._B4=0;this._C4=0;this._D4=0;this._E4=0;this._F4=0;
this._G4=new Float32Array(_24);this._H4=new Float32Array(_24);this._I4=new Float32Array(_24);this._J4=new Float32Array(_24);this._K4=-1;this._L4=-1;}process(_c4,_d4,parameters){const input=_c4[0];const output=_d4[0];const bypass=parameters.bypass;const cutoff=parameters.cutoff;const q=parameters.q;const _M4=(cutoff.length===1&&q.length===1);if(_M4)this._N4(cutoff[0],q[0]);for(let _94=0;_94<input.length;++_94){const _e4=input[_94];const _f4=output[_94];for(let _g4=0;_g4<_e4.length;++_g4){if(_M4===!1){const _94=(cutoff[_g4]!==undefined)?cutoff[_g4]:cutoff[0];
const _O4=(q[_g4]!==undefined)?q[_g4]:q[0];this._N4(_94,_O4);}const _P4=this._D4*_e4[_g4]+this._E4*this._G4[_94]+this._F4*this._H4[_94]-this._B4*this._I4[_94]-this._C4*this._J4[_94];this._H4[_94]=this._G4[_94];this._G4[_94]=_e4[_g4];this._J4[_94]=this._I4[_94];this._I4[_94]=_P4;const _j4=(bypass[_g4]!==undefined)?bypass[_g4]:bypass[0];_f4[_g4]=(_j4>0)?_e4[_g4]:_P4;}}return this._l4;}_N4(_Q4,_R4){if(_Q4===this._K4&&_R4===this._L4)return;const _S4=2*Math.PI*_Q4/sampleRate;const alpha=Math.sin(_S4)/(2*_R4);
const _T4=Math.cos(_S4);const _U4=1+alpha;const _B4=-2*_T4;const _C4=1-alpha;const _D4=(1+_T4)/2;const _E4=-1-_T4;const _F4=(1+_T4)/2;this._B4=_B4/_U4;this._C4=_C4/_U4;this._D4=_D4/_U4;this._E4=_E4/_U4;this._F4=_F4/_U4;this._K4=_Q4;this._L4=_R4;}}registerProcessor("hpf2-processor",_65);class _75 extends AudioWorkletProcessor{static get parameterDescriptors(){const _W4=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"freq",automationRate:"a-rate",
defaultValue:Math.min(5000.0,_W4),minValue:10.0,maxValue:_W4},{name:"q",automationRate:"a-rate",defaultValue:1.0,minValue:1.0,maxValue:100.0},{name:"gain",automationRate:"a-rate",defaultValue:1e-2,minValue:1e-6}];}constructor(_04){super();this._14();const _24=_04.outputChannelCount[0];this._B4=0;this._C4=0;this._D4=0;this._E4=0;this._F4=0;this._G4=new Float32Array(_24);this._H4=new Float32Array(_24);this._I4=new Float32Array(_24);this._J4=new Float32Array(_24);this._X4=-1;this._L4=-1;this._Y4=-1;}process(_c4,
_d4,parameters){const input=_c4[0];const output=_d4[0];const bypass=parameters.bypass;const freq=parameters.freq;const q=parameters.q;const gain=parameters.gain;const _M4=(freq.length===1&&q.length===1&&gain.length===1);if(_M4)this._N4(freq[0],q[0],gain[0]);for(let _94=0;_94<input.length;++_94){const _e4=input[_94];const _f4=output[_94];for(let _g4=0;_g4<_e4.length;++_g4){if(_M4===!1){const _Z4=(freq[_g4]!==undefined)?freq[_g4]:freq[0];const _O4=(q[_g4]!==undefined)?q[_g4]:q[0];const __4=(gain[_g4]!==undefined)?gain[_g4]:gain[0];
this._N4(_Z4,_O4,__4);}const _P4=this._D4*_e4[_g4]+this._E4*this._G4[_94]+this._F4*this._H4[_94]-this._B4*this._I4[_94]-this._C4*this._J4[_94];this._H4[_94]=this._G4[_94];this._G4[_94]=_e4[_g4];this._J4[_94]=this._I4[_94];this._I4[_94]=_P4;const _j4=(bypass[_g4]!==undefined)?bypass[_g4]:bypass[0];_f4[_g4]=(_j4>0)?_e4[_g4]:_P4;}}return this._l4;}_N4(_05,_R4,_15){if(_05===this._X4&&_R4===this._L4&&_15===this._Y4)return;const _S4=2*Math.PI*_05/sampleRate;const _T4=Math.cos(_S4);const _25=Math.sqrt(_15);const _85=_25+1;
const _95=_25-1;const _a5=_85*_T4;const _b5=_95*_T4;const _c5=_85-_b5;const _d5=_85+_b5;const alpha=Math.sin(_S4)/(2*_R4);const _e5=(2*Math.sqrt(_25)*alpha);const _U4=_c5+_e5;const _B4=2*(_95-_a5);const _C4=_c5-_e5;const _D4=_25*(_d5+_e5);const _E4=-2*_25*(_95+_a5);const _F4=_25*(_d5-_e5);this._B4=_B4/_U4;this._C4=_C4/_U4;this._D4=_D4/_U4;this._E4=_E4/_U4;this._F4=_F4/_U4;this._X4=_05;this._L4=_R4;this._Y4=_15;}}registerProcessor("hi-shelf-processor",_75);function _f5(){}_f5._g5={_h5:0,_i5:1,_j5:2,_k5:3,_l5:4,
_m5:5};_f5._n5=function(_o5){return 1.0-_o5;};_f5._p5=function(_o5){return _o5;};_f5._q5=function(_o5){return 0.5*(Math.sin((_o5*2.0*Math.PI)-(Math.PI/2.0))+1.0);};_f5._r5=function(_o5){if(_o5<0.5){return 0.0;}return 1.0;};_f5._s5=function(_o5){if(_o5<0.5){return 2.0*_o5;}return 2.0-(2.0*_o5);};_f5._t5=[_f5._n5,_f5._p5,_f5._q5,_f5._r5,_f5._s5];_u5._v5=512;_u5._w5=1.0/_u5._v5;function _u5(_x5){this.data=new Float32Array(_u5._v5);for(let _a4=0;_a4<_u5._v5;++_a4){this.data[_a4]=_x5(_a4*_u5._w5);}}_u5.prototype._y5=function(_o5){
_o5=Math.max(0.0,_o5);_o5=Math.min(_o5,1.0);const _z5=_o5*_u5._v5;const _A5=~~_z5;const _B5=_z5-_A5;let _C5=_A5;let _D5=_C5+1;if(_C5>=_u5._v5){_C5-=_u5._v5;}if(_D5>=_u5._v5){_D5-=_u5._v5;}const _E5=this.data[_C5];const _F5=this.data[_D5];return _E5+(_F5-_E5)*_B5;};;_G5._H5=[];_G5._I5=!1;_G5._J5=0.0;_G5._W4=20.0;function _G5(){this._K5=48000;this.shape=_f5._g5._j5;this.freq=1.0;this._L5=0.0;this._w5=0.0;this._M5=0.0;if(_G5._I5==true){return;}for(let _a4=0;_a4<_f5._g5._m5;++_a4){_G5._H5[_a4]=new _u5(_f5._t5[_a4]);
}_G5._I5=true;}_G5._N5=function(){return(_G5._I5==!0);};_G5.prototype._O5=function(_P5){this._K5=_P5;this._Q5();};;_G5.prototype._R5=function(_05){_05=Math.max(_G5._J5,_05);_05=Math.min(_05,_G5._W4);this.freq=_05;this._Q5();};;_G5.prototype._S5=function(_T5){_T5=Math.max(0.0,_T5);_T5=Math.min(_T5,1.0);const _U5=_T5-this._M5;this._M5=_T5;this._L5+=_U5;while(this._L5>=1.0){this._L5-=1.0;}while(this._L5<0.0){this._L5+=1.0;}};;_G5.prototype._V5=function(_W5){_W5=Math.max(0,_W5);_W5=Math.min(_W5,_f5._g5._m5-1);
this.shape=_W5;};;_G5.prototype._y5=function(){const _X5=_G5._H5[this.shape]._y5(this._L5);this._L5+=this._w5;while(this._L5>=1.0){this._L5-=1.0;}return _X5;};;_G5.prototype._Q5=function(){this._w5=this.freq/this._K5;};;class _Y5 extends AudioWorkletProcessor{static _Z5=5.0;static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"time",automationRate:"a-rate",defaultValue:0.2,minValue:0.0,maxValue:_Y5._Z5},{name:"feedback",automationRate:"a-rate",
defaultValue:0.5,minValue:0.0,maxValue:1.0},{name:"mix",automationRate:"a-rate",defaultValue:0.35,minValue:0.0,maxValue:1.0}];}constructor(_04){super();this._14();const _24=_04.outputChannelCount[0];const __5=(_Y5._Z5*sampleRate)+1;this.buffer=new Array(_24);this._06=new Uint32Array(_24);for(let _94=0;_94<_24;++_94)this.buffer[_94]=new Float32Array(__5);}process(_c4,_d4,parameters){const input=_c4[0];const output=_d4[0];const bypass=parameters.bypass;const time=parameters.time;const feedback=parameters.feedback;
const mix=parameters.mix;for(let _94=0;_94<input.length;++_94){const _e4=input[_94];const _f4=output[_94];for(let _g4=0;_g4<_e4.length;++_g4){_f4[_g4]=_e4[_g4];const _16=(time[_g4]!==undefined)?time[_g4]:time[0];const _26=this._y5(_94,_16);const _Z4=(feedback[_g4]!==undefined)?feedback[_g4]:feedback[0];const _36=_e4[_g4]+(_26*_Z4);this.write(_94,_36);const _j4=(bypass[_g4]!==undefined)?bypass[_g4]:bypass[0];if(_j4>0.0){continue;}const _k4=(mix[_g4]!==undefined)?mix[_g4]:mix[0];_f4[_g4]*=(1-_k4);_f4[_g4]+=(_26*_k4);
}}return this._l4;}_y5(_46,_56){const _66=_56*sampleRate;let _C5=(this._06[_46]-~~_66);let _D5=(_C5-1);while(_C5<0)_C5+=this.buffer[_46].length;while(_D5<0)_D5+=this.buffer[_46].length;const _76=_66-~~_66;const _E5=this.buffer[_46][_C5];const _F5=this.buffer[_46][_D5];return _E5+(_F5-_E5)*_76;}write(_46,_K3){++this._06[_46];this._06[_46]%=this.buffer[_46].length;this.buffer[_46][this._06[_46]]=_K3;}}registerProcessor("delay-processor",_Y5);AudioWorkletProcessor.prototype._14=function(){this._l4=true;this.port.onmessage=(_86)=>{
if(_86.data==="kill")this._l4=false;};};;class _96 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1}];}constructor(){super();this._14();}process(_c4,_d4,parameters){const input=_c4[0];const bypass=parameters.bypass;for(let _94=0;_94<input.length;++_94){const _e4=input[_94];for(let _g4=0;_g4<_e4.length;++_g4){const _j4=(bypass[_g4]!==undefined)?bypass[_g4]:bypass[0];_d4[_j4][_94][_g4]=_e4[_g4];}}return this._l4;
}}class _a6 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"gain",automationRate:"a-rate",defaultValue:1,minValue:0}];}constructor(){super();this._14();}process(_c4,_d4,parameters){const _v4=_c4[0];const _w4=_c4[1];const output=_d4[0];const gain=parameters.gain;for(let _94=0;_94<_w4.length;++_94){const _e4=_w4[_94];const _f4=output[_94];for(let _g4=0;_g4<_e4.length;++_g4)_f4[_g4]=_e4[_g4];}for(let _94=0;_94<_v4.length;++_94){const _e4=_v4[_94];const _f4=output[_94];for(let _g4=0;_g4<_e4.length;
++_g4){const __4=(gain[_g4]!==undefined)?gain[_g4]:gain[0];_f4[_g4]+=_e4[_g4]*__4;}}return this._l4;}}registerProcessor("audio-bus-input",_96);registerProcessor("audio-bus-output",_a6);class _b6 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"gain",automationRate:"a-rate",defaultValue:1.0,minValue:0.0},{name:"factor",automationRate:"a-rate",defaultValue:20,minValue:1,maxValue:100},{name:"resolution",
automationRate:"a-rate",defaultValue:8,minValue:2,maxValue:16},{name:"mix",automationRate:"a-rate",defaultValue:0.8,minValue:0.0,maxValue:1.0}];}static _c6=[undefined,undefined,2,4,8,16,32,64,128,256,512,1024,2048,4096,8192,16384,32768];constructor(_04){super();this._14();const _24=_04.outputChannelCount[0];this._d6=new Float32Array(_24);this._e6=new Uint32Array(_24);}process(_c4,_d4,parameters){const input=_c4[0];const output=_d4[0];const bypass=parameters.bypass;const gain=parameters.gain;const factor=parameters.factor;
const resolution=parameters.resolution;const mix=parameters.mix;for(let _94=0;_94<input.length;++_94){const _e4=input[_94];const _f4=output[_94];for(let _g4=0;_g4<_e4.length;++_g4){_f4[_g4]=_e4[_g4];if(this._e6[_94]===0)this._d6[_94]=_e4[_g4];const _Z4=(factor[_g4]!==undefined)?factor[_g4]:factor[0];++this._e6[_94];this._e6[_94]%=_Z4;const _j4=(bypass[_g4]!==undefined)?bypass[_g4]:bypass[0];if(_j4>0.0){continue;}let _i4=this._d6[_94];const __4=(gain[_g4]!==undefined)?gain[_g4]:gain[0];_i4*=__4;_i4=Math.max(Math.min(_i4,
1.0),-1.0);const _f6=(resolution[_g4]!==undefined)?resolution[_g4]:resolution[0];const max=(_i4>0.0)?_b6._c6[_f6]-1:_b6._c6[_f6];_i4=Math.round(_i4*max)/max;const _k4=(mix[_g4]!==undefined)?mix[_g4]:mix[0];_f4[_g4]*=(1.0-_k4);_f4[_g4]+=(_i4*_k4);}}return this._l4;}}registerProcessor("bitcrusher-processor",_b6);class _g6 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"rate",automationRate:"a-rate",defaultValue:5.0,
minValue:0.0,maxValue:20.0},{name:"intensity",automationRate:"a-rate",defaultValue:1.0,minValue:0.0,maxValue:1.0},{name:"offset",automationRate:"a-rate",defaultValue:0.0,minValue:0.0,maxValue:1.0},{name:"shape",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:4}];}constructor(_04){super();this._14();const _24=_04.outputChannelCount[0];this._h6=new Array(_24).fill(1.0);this._i6=new Array(_24).fill(0.0);this._j6=new Array(_24).fill(_f5._g5._h5);this._k6=new Array(_24);for(let _94=0;_94<_24;++_94){
this._k6[_94]=new _G5();this._k6[_94]._O5(sampleRate);this._k6[_94]._R5(this._h6[_94]);this._k6[_94]._V5(this._j6[_94]);if(_94%2===1){this._k6[_94]._S5(this._i6[_94]);}}}process(_c4,_d4,parameters){const input=_c4[0];const output=_d4[0];const bypass=parameters.bypass;const rate=parameters.rate;const intensity=parameters.intensity;const offset=parameters.offset;const shape=parameters.shape;for(let _94=0;_94<input.length;++_94){const _e4=input[_94];const _f4=output[_94];for(let _g4=0;_g4<_e4.length;++_g4){_f4[_g4]=_e4[_g4];
const _f6=(rate[_g4]!==undefined)?rate[_g4]:rate[0];const _l6=(offset[_g4]!==undefined)?offset[_g4]:offset[0];const _m6=(shape[_g4]!==undefined)?shape[_g4]:shape[0];this._n6(_94,_f6,_l6,_m6);const _o6=this._k6[_94]._y5();const _j4=(bypass[_g4]!==undefined)?bypass[_g4]:bypass[0];if(_j4>0.0){continue;}const _a4=(intensity[_g4]!==undefined)?intensity[_g4]:intensity[0];const out=_e4[_g4]*_o6*_a4;_f4[_g4]*=(1.0-_a4);_f4[_g4]+=out;}}return this._l4;}_n6(_46,_p6,_T5,_W5){if(_p6!==this._h6[_46]){this._k6[_46]._R5(_p6);
this._h6[_46]=_p6;}if(_T5!==this._i6[_46]){if(_46%2===1){this._k6[_46]._S5(_T5);}this._i6[_46]=_T5;}if(_W5!==this._j6[_46]){this._k6[_46]._V5(_W5);this._j6[_46]=_W5;}}}registerProcessor("tremolo-processor",_g6);class _q6{constructor(_56=1e-3){this.setTime(_56);}setTime(_56){this._r6=Math.exp(-1/(_56*sampleRate));}process(_s6,_t6){return _s6+this._r6*(_t6-_s6);}}class _u6{constructor(_v6,_w6){this._x6=new _q6(_v6);this._y6=new _q6(_w6);this._z6=_v6;this._A6=_w6;}_B6(_56){if(_56===this._z6)return;this._x6.setTime(_56);
this._z6=_56;}_C6(_56){if(_56===this._A6)return;this._y6.setTime(_56);this._A6=_56;}process(_s6,_t6){if(_s6>_t6)return this._x6.process(_s6,_t6);else return this._y6.process(_s6,_t6);}}class _D6 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"ingain",automationRate:"a-rate",defaultValue:1,minValue:0},{name:"threshold",automationRate:"a-rate",defaultValue:0.125,minValue:1e-3,maxValue:1},{name:"ratio",
automationRate:"a-rate",defaultValue:4,minValue:1},{name:"attack",automationRate:"a-rate",defaultValue:0.05,minValue:1e-3,maxValue:1e-1},{name:"release",automationRate:"a-rate",defaultValue:0.25,minValue:1e-2,maxValue:1},{name:"outgain",automationRate:"a-rate",defaultValue:1,minValue:0}];}constructor(_E6){super();this._14();const _x6=_D6.parameterDescriptors.find(_F6=>_F6.name==="attack");const _y6=_D6.parameterDescriptors.find(_F6=>_F6.name==="release");this._G6=new _u6(_x6.defaultValue,_y6.defaultValue);
this._H6=0;}process(_I6,_J6,_K6){const input=_I6[0];const output=_J6[0];const bypass=_K6.bypass;const ingain=_K6.ingain;const outgain=_K6.outgain;const threshold=_K6.threshold;const ratio=_K6.ratio;const attack=_K6.attack;const release=_K6.release;if(input.length===0)return this._l4;for(let _g4=0;_g4<input[0].length;++_g4){let _L6=input.map(_M6=>_M6[_g4]);output.forEach((_M6,_N6)=>{_M6[_g4]=_L6[_N6];});const _O6=(ingain[_g4]!==undefined)?ingain[_g4]:ingain[0];_L6=_L6.map(_P6=>_P6*=_O6);const rect=_L6.map(_P6=>Math.abs(_P6));
const max=Math.max(...rect);const _Q6=_R6(max);const _16=(threshold[_g4]!==undefined)?threshold[_g4]:threshold[0];const _S6=_R6(_16);const _T6=Math.max(0,_Q6-_S6);const _x6=(attack[_g4]!==undefined)?attack[_g4]:attack[0];const _y6=(release[_g4]!==undefined)?release[_g4]:release[0];this._G6._B6(_x6);this._G6._C6(_y6);this._H6=this._G6.process(_T6,this._H6);const _j4=(bypass[_g4]!==undefined)?bypass[_g4]:bypass[0];if(_j4>0)continue;const _f6=(ratio[_g4]!==undefined)?ratio[_g4]:ratio[0];const _U6=(this._H6/_f6)-this._H6;
const __4=_V6(_U6);_L6=_L6.map(_P6=>_P6*=__4);const _W6=(outgain[_g4]!==undefined)?outgain[_g4]:outgain[0];_L6=_L6.map(_P6=>_P6*=_W6);output.forEach((_M6,_N6)=>{_M6[_g4]=_L6[_N6];});}return this._l4;}}function _R6(_X6){return 20*Math.log10(_X6);}function _V6(_X6){return Math.pow(10,_X6/20);}registerProcessor("compressor-processor",_D6);class _Y6 extends AudioWorkletProcessor{static get parameterDescriptors(){const _W4=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,
minValue:0,maxValue:1},{name:"freq",automationRate:"a-rate",defaultValue:Math.min(500.0,_W4),minValue:10.0,maxValue:_W4},{name:"q",automationRate:"a-rate",defaultValue:1.0,minValue:1.0,maxValue:100.0},{name:"gain",automationRate:"a-rate",defaultValue:1e-2,minValue:1e-6}];}constructor(_04){super();this._14();const _24=_04.outputChannelCount[0];this._B4=0;this._C4=0;this._D4=0;this._E4=0;this._F4=0;this._G4=new Float32Array(_24);this._H4=new Float32Array(_24);this._I4=new Float32Array(_24);this._J4=new Float32Array(_24);
this._X4=-1;this._L4=-1;this._Y4=-1;}process(_c4,_d4,parameters){const input=_c4[0];const output=_d4[0];const bypass=parameters.bypass;const freq=parameters.freq;const q=parameters.q;const gain=parameters.gain;const _M4=(freq.length===1&&q.length===1&&gain.length===1);if(_M4)this._N4(freq[0],q[0],gain[0]);for(let _94=0;_94<input.length;++_94){const _e4=input[_94];const _f4=output[_94];for(let _g4=0;_g4<_e4.length;++_g4){if(_M4===!1){const _Z4=(freq[_g4]!==undefined)?freq[_g4]:freq[0];const _O4=(q[_g4]!==undefined)?q[_g4]:q[0];
const __4=(gain[_g4]!==undefined)?gain[_g4]:gain[0];this._N4(_Z4,_O4,__4);}const _P4=this._D4*_e4[_g4]+this._E4*this._G4[_94]+this._F4*this._H4[_94]-this._B4*this._I4[_94]-this._C4*this._J4[_94];this._H4[_94]=this._G4[_94];this._G4[_94]=_e4[_g4];this._J4[_94]=this._I4[_94];this._I4[_94]=_P4;const _j4=(bypass[_g4]!==undefined)?bypass[_g4]:bypass[0];_f4[_g4]=(_j4>0)?_e4[_g4]:_P4;}}return this._l4;}_N4(_05,_R4,_15){if(_05===this._X4&&_R4===this._L4&&_15===this._Y4)return;const _S4=2*Math.PI*_05/sampleRate;
const _T4=Math.cos(_S4);const _25=Math.sqrt(_15);const _85=_25+1;const _95=_25-1;const _a5=_85*_T4;const _b5=_95*_T4;const _c5=_85-_b5;const _d5=_85+_b5;const alpha=Math.sin(_S4)/(2*_R4);const _e5=(2*Math.sqrt(_25)*alpha);const _U4=_d5+_e5;const _B4=-2*(_95+_a5);const _C4=_d5-_e5;const _D4=_25*(_c5+_e5);const _E4=2*_25*(_95-_a5);const _F4=_25*(_c5-_e5);this._B4=_B4/_U4;this._C4=_C4/_U4;this._D4=_D4/_U4;this._E4=_E4/_U4;this._F4=_F4/_U4;this._X4=_05;this._L4=_R4;this._Y4=_15;}}registerProcessor("lo-shelf-processor",
_Y6);