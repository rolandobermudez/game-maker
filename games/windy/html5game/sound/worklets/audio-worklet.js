class _H3{constructor(_I3){this._J3=0;this._K3=0;this.feedback=0;this._L3=0;this.buffer=new Float32Array(_I3);this._M3=0;}process(_N3){const out=this.buffer[this._M3];this._L3=(this._L3*this._J3)+(out*this._K3);this.buffer[this._M3]=_N3+(this._L3*this.feedback);++this._M3;this._M3%=this.buffer.length;return out;}_O3(_P3){this.feedback=Math.min(Math.max(0,_P3),1);}_Q3(_R3){this._J3=Math.min(Math.max(0,_R3),1);this._K3=1-this._J3;}}class _S3{constructor(_I3){this.feedback=0;this.buffer=new Float32Array(_I3);
this._M3=0;}process(_N3){const out=this.buffer[this._M3];this.buffer[this._M3]=_N3+(out*this.feedback);++this._M3;this._M3%=this.buffer.length;return(out-_N3);}_O3(_P3){this.feedback=Math.min(Math.max(0,_P3),1);}}class _T3 extends AudioWorkletProcessor{static _U3=8;static _V3=4;static _W3=0.015;static _X3=0.4;static _Y3=0.28;static _Z3=0.7;static __3=[1116,1188,1277,1356,1422,1491,1557,1617];static _04=[1139,1211,1300,1379,1445,1514,1580,1640];static _14=[556,441,341,225];static _24=[579,464,364,248];static get parameterDescriptors(){
return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"size",automationRate:"a-rate",defaultValue:0.7,minValue:0.0,maxValue:1.0},{name:"damp",automationRate:"a-rate",defaultValue:0.1,minValue:0.0,maxValue:1.0},{name:"mix",automationRate:"a-rate",defaultValue:0.35,minValue:0.0,maxValue:1.0}];}constructor(_34){super();this._44();const _54=_34.outputChannelCount[0];this._64=-1;this._74=-1;this._84=new Array(_54);this._94=new Array(_54);const _a4=[_T3.__3,_T3._04];const _b4=[_T3._14,
_T3._24];for(let _c4=0;_c4<_54;++_c4){this._84[_c4]=new Array(_T3._U3);this._94[_c4]=new Array(_T3._V3);for(let _d4=0;_d4<_T3._U3;++_d4)this._84[_c4][_d4]=new _H3(_a4[_c4%_a4.length][_d4]);for(let _d4=0;_d4<_T3._V3;++_d4)this._94[_c4][_d4]=new _S3(_b4[_c4%_b4.length][_d4]);}this._e4(0.5);this._Q3(0.5);for(let _c4=0;_c4<_54;++_c4)for(let _d4=0;_d4<_T3._V3;++_d4)this._94[_c4][_d4]._O3(0.5);}process(_f4,_g4,parameters){const input=_f4[0];const output=_g4[0];const bypass=parameters.bypass;const size=parameters.size;
const damp=parameters.damp;const mix=parameters.mix;for(let _c4=0;_c4<input.length;++_c4){const _h4=input[_c4];const _i4=output[_c4];for(let _j4=0;_j4<_h4.length;++_j4){const _j4=(size[_j4]!==undefined)?size[_j4]:size[0];const _k4=(damp[_j4]!==undefined)?damp[_j4]:damp[0];this._e4(_j4);this._Q3(_k4);_i4[_j4]=_h4[_j4];let out=0;const _l4=_h4[_j4]*_T3._W3;for(let _d4=0;_d4<_T3._U3;++_d4)out+=this._84[_c4][_d4].process(_l4);for(let _d4=0;_d4<_T3._V3;++_d4)out=this._94[_c4][_d4].process(out);const _m4=(bypass[_j4]!==undefined)?bypass[_j4]:bypass[0];
if(_m4>0.0){continue;}const _n4=(mix[_j4]!==undefined)?mix[_j4]:mix[0];_i4[_j4]*=(1-_n4);_i4[_j4]+=(out*_n4);}}return this._o4;}_e4(_I3){if(_I3===this._64)return;const size=(_I3*_T3._Y3)+_T3._Z3;for(let _c4=0;_c4<this._84.length;++_c4)for(let _d4=0;_d4<_T3._U3;++_d4)this._84[_c4][_d4]._O3(size);this._64=_I3;}_Q3(_R3){if(_R3===this._74)return;const damp=_R3*_T3._X3;for(let _c4=0;_c4<this._84.length;++_c4)for(let _d4=0;_d4<_T3._U3;++_d4)this._84[_c4][_d4]._Q3(damp);this._74=_R3;}}registerProcessor("reverb1-processor",
_T3);class _p4 extends AudioWorkletProcessor{static get parameterDescriptors(){return [];}constructor(){super();this._44();}process(_q4,_r4,_s4){const input=_q4[0];const _t4=_r4[0];const _u4=_r4[1];for(let _c4=0;_c4<input.length;++_c4){const _h4=input[_c4];const _v4=_t4[_c4];const _w4=_u4[_c4];for(let _j4=0;_j4<_h4.length;++_j4){_v4[_j4]=_h4[_j4];_w4[_j4]=_h4[_j4];}}return this._o4;}}class _x4 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,
minValue:0,maxValue:1}];}constructor(){super();this._44();}process(_q4,_r4,_s4){const _y4=_q4[0];const _z4=_q4[1];const output=_r4[0];const bypass=_s4.bypass;for(let _c4=0;_c4<_z4.length;++_c4){const _A4=_y4[_c4];const _B4=_z4[_c4];const _i4=output[_c4];for(let _j4=0;_j4<_A4.length;++_j4){const _m4=(bypass[_j4]!==undefined)?bypass[_j4]:bypass[0];if(_m4>0){_i4[_j4]=_B4[_j4];}else {_i4[_j4]=_A4[_j4];}}}return this._o4;}}registerProcessor("eq-input",_p4);registerProcessor("eq-output",_x4);class _C4 extends AudioWorkletProcessor{
static get parameterDescriptors(){const _D4=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"cutoff",automationRate:"a-rate",defaultValue:Math.min(500.0,_D4),minValue:10.0,maxValue:_D4},{name:"q",automationRate:"a-rate",defaultValue:1.5,minValue:1.0,maxValue:100.0}];}constructor(_34){super();this._44();const _54=_34.outputChannelCount[0];this._E4=0;this._F4=0;this._G4=0;this._H4=0;this._I4=0;this._J4=new Float32Array(_54);this._K4=new Float32Array(_54);
this._L4=new Float32Array(_54);this._M4=new Float32Array(_54);this._N4=-1;this._O4=-1;}process(_f4,_g4,parameters){const input=_f4[0];const output=_g4[0];const bypass=parameters.bypass;const cutoff=parameters.cutoff;const q=parameters.q;const _P4=(cutoff.length===1&&q.length===1);if(_P4)this._Q4(cutoff[0],q[0]);for(let _c4=0;_c4<input.length;++_c4){const _h4=input[_c4];const _i4=output[_c4];for(let _j4=0;_j4<_h4.length;++_j4){if(_P4===!1){const _c4=(cutoff[_j4]!==undefined)?cutoff[_j4]:cutoff[0];const _R4=(q[_j4]!==undefined)?q[_j4]:q[0];
this._Q4(_c4,_R4);}const _S4=this._G4*_h4[_j4]+this._H4*this._J4[_c4]+this._I4*this._K4[_c4]-this._E4*this._L4[_c4]-this._F4*this._M4[_c4];this._K4[_c4]=this._J4[_c4];this._J4[_c4]=_h4[_j4];this._M4[_c4]=this._L4[_c4];this._L4[_c4]=_S4;const _m4=(bypass[_j4]!==undefined)?bypass[_j4]:bypass[0];_i4[_j4]=(_m4>0)?_h4[_j4]:_S4;}}return this._o4;}_Q4(_T4,_U4){if(_T4===this._N4&&_U4===this._O4)return;const _V4=2*Math.PI*_T4/sampleRate;const alpha=Math.sin(_V4)/(2*_U4);const _W4=Math.cos(_V4);const _X4=1+alpha;
const _E4=-2*_W4;const _F4=1-alpha;const _G4=(1-_W4)/2;const _H4=1-_W4;const _I4=(1-_W4)/2;this._E4=_E4/_X4;this._F4=_F4/_X4;this._G4=_G4/_X4;this._H4=_H4/_X4;this._I4=_I4/_X4;this._N4=_T4;this._O4=_U4;}}registerProcessor("lpf2-processor",_C4);class _Y4 extends AudioWorkletProcessor{static get parameterDescriptors(){const _Z4=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"freq",automationRate:"a-rate",defaultValue:Math.min(1500.0,
_Z4),minValue:10.0,maxValue:_Z4},{name:"q",automationRate:"a-rate",defaultValue:1.0,minValue:1.0,maxValue:100.0},{name:"gain",automationRate:"a-rate",defaultValue:1e-2,minValue:1e-6}];}constructor(_34){super();this._44();const _54=_34.outputChannelCount[0];this._E4=0;this._F4=0;this._G4=0;this._H4=0;this._I4=0;this._J4=new Float32Array(_54);this._K4=new Float32Array(_54);this._L4=new Float32Array(_54);this._M4=new Float32Array(_54);this.__4=-1;this._O4=-1;this._05=-1;}process(_f4,_g4,parameters){const input=_f4[0];
const output=_g4[0];const bypass=parameters.bypass;const freq=parameters.freq;const q=parameters.q;const gain=parameters.gain;const _P4=(freq.length===1&&q.length===1&&gain.length===1);if(_P4)this._Q4(freq[0],q[0],gain[0]);for(let _c4=0;_c4<input.length;++_c4){const _h4=input[_c4];const _i4=output[_c4];for(let _j4=0;_j4<_h4.length;++_j4){if(_P4===!1){const _15=(freq[_j4]!==undefined)?freq[_j4]:freq[0];const _R4=(q[_j4]!==undefined)?q[_j4]:q[0];const _25=(gain[_j4]!==undefined)?gain[_j4]:gain[0];this._Q4(_15,
_R4,_25);}const _S4=this._G4*_h4[_j4]+this._H4*this._J4[_c4]+this._I4*this._K4[_c4]-this._E4*this._L4[_c4]-this._F4*this._M4[_c4];this._K4[_c4]=this._J4[_c4];this._J4[_c4]=_h4[_j4];this._M4[_c4]=this._L4[_c4];this._L4[_c4]=_S4;const _m4=(bypass[_j4]!==undefined)?bypass[_j4]:bypass[0];_i4[_j4]=(_m4>0)?_h4[_j4]:_S4;}}return this._o4;}_Q4(_35,_U4,_45){if(_35===this.__4&&_U4===this._O4&&_45===this._05)return;const _V4=2*Math.PI*_35/sampleRate;const _W4=Math.cos(_V4);const _55=Math.sqrt(_45);const alpha=Math.sin(_V4)/(2*_U4);
const _65=alpha/_55;const _75=alpha*_55;const _X4=1+_65;const _E4=-2*_W4;const _F4=1-_65;const _G4=1+_75;const _H4=_E4;const _I4=1-_75;this._E4=_E4/_X4;this._F4=_F4/_X4;this._G4=_G4/_X4;this._H4=_H4/_X4;this._I4=_I4/_X4;this.__4=_35;this._O4=_U4;this._05=_45;}}registerProcessor("peak-eq-processor",_Y4);class _85 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"gain",automationRate:"a-rate",defaultValue:0.5,
minValue:0.0}];}constructor(){super();this._44();}process(_f4,_g4,parameters){const input=_f4[0];const output=_g4[0];const bypass=parameters.bypass;const gain=parameters.gain;for(let _c4=0;_c4<input.length;++_c4){const _h4=input[_c4];const _i4=output[_c4];for(let _j4=0;_j4<_h4.length;++_j4){_i4[_j4]=_h4[_j4];const _m4=(bypass[_j4]!==undefined)?bypass[_j4]:bypass[0];if(_m4>0.0){continue;}const _25=(gain[_j4]!==undefined)?gain[_j4]:gain[0];_i4[_j4]*=_25;}}return this._o4;}}registerProcessor("gain-processor",
_85);class _95 extends AudioWorkletProcessor{static get parameterDescriptors(){const _D4=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"cutoff",automationRate:"a-rate",defaultValue:Math.min(1500.0,_D4),minValue:10.0,maxValue:_D4},{name:"q",automationRate:"a-rate",defaultValue:1.5,minValue:1.0,maxValue:100.0}];}constructor(_34){super();this._44();const _54=_34.outputChannelCount[0];this._E4=0;this._F4=0;this._G4=0;this._H4=0;this._I4=0;
this._J4=new Float32Array(_54);this._K4=new Float32Array(_54);this._L4=new Float32Array(_54);this._M4=new Float32Array(_54);this._N4=-1;this._O4=-1;}process(_f4,_g4,parameters){const input=_f4[0];const output=_g4[0];const bypass=parameters.bypass;const cutoff=parameters.cutoff;const q=parameters.q;const _P4=(cutoff.length===1&&q.length===1);if(_P4)this._Q4(cutoff[0],q[0]);for(let _c4=0;_c4<input.length;++_c4){const _h4=input[_c4];const _i4=output[_c4];for(let _j4=0;_j4<_h4.length;++_j4){if(_P4===!1){const _c4=(cutoff[_j4]!==undefined)?cutoff[_j4]:cutoff[0];
const _R4=(q[_j4]!==undefined)?q[_j4]:q[0];this._Q4(_c4,_R4);}const _S4=this._G4*_h4[_j4]+this._H4*this._J4[_c4]+this._I4*this._K4[_c4]-this._E4*this._L4[_c4]-this._F4*this._M4[_c4];this._K4[_c4]=this._J4[_c4];this._J4[_c4]=_h4[_j4];this._M4[_c4]=this._L4[_c4];this._L4[_c4]=_S4;const _m4=(bypass[_j4]!==undefined)?bypass[_j4]:bypass[0];_i4[_j4]=(_m4>0)?_h4[_j4]:_S4;}}return this._o4;}_Q4(_T4,_U4){if(_T4===this._N4&&_U4===this._O4)return;const _V4=2*Math.PI*_T4/sampleRate;const alpha=Math.sin(_V4)/(2*_U4);
const _W4=Math.cos(_V4);const _X4=1+alpha;const _E4=-2*_W4;const _F4=1-alpha;const _G4=(1+_W4)/2;const _H4=-1-_W4;const _I4=(1+_W4)/2;this._E4=_E4/_X4;this._F4=_F4/_X4;this._G4=_G4/_X4;this._H4=_H4/_X4;this._I4=_I4/_X4;this._N4=_T4;this._O4=_U4;}}registerProcessor("hpf2-processor",_95);class _a5 extends AudioWorkletProcessor{static get parameterDescriptors(){const _Z4=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"freq",automationRate:"a-rate",
defaultValue:Math.min(5000.0,_Z4),minValue:10.0,maxValue:_Z4},{name:"q",automationRate:"a-rate",defaultValue:1.0,minValue:1.0,maxValue:100.0},{name:"gain",automationRate:"a-rate",defaultValue:1e-2,minValue:1e-6}];}constructor(_34){super();this._44();const _54=_34.outputChannelCount[0];this._E4=0;this._F4=0;this._G4=0;this._H4=0;this._I4=0;this._J4=new Float32Array(_54);this._K4=new Float32Array(_54);this._L4=new Float32Array(_54);this._M4=new Float32Array(_54);this.__4=-1;this._O4=-1;this._05=-1;}process(_f4,
_g4,parameters){const input=_f4[0];const output=_g4[0];const bypass=parameters.bypass;const freq=parameters.freq;const q=parameters.q;const gain=parameters.gain;const _P4=(freq.length===1&&q.length===1&&gain.length===1);if(_P4)this._Q4(freq[0],q[0],gain[0]);for(let _c4=0;_c4<input.length;++_c4){const _h4=input[_c4];const _i4=output[_c4];for(let _j4=0;_j4<_h4.length;++_j4){if(_P4===!1){const _15=(freq[_j4]!==undefined)?freq[_j4]:freq[0];const _R4=(q[_j4]!==undefined)?q[_j4]:q[0];const _25=(gain[_j4]!==undefined)?gain[_j4]:gain[0];
this._Q4(_15,_R4,_25);}const _S4=this._G4*_h4[_j4]+this._H4*this._J4[_c4]+this._I4*this._K4[_c4]-this._E4*this._L4[_c4]-this._F4*this._M4[_c4];this._K4[_c4]=this._J4[_c4];this._J4[_c4]=_h4[_j4];this._M4[_c4]=this._L4[_c4];this._L4[_c4]=_S4;const _m4=(bypass[_j4]!==undefined)?bypass[_j4]:bypass[0];_i4[_j4]=(_m4>0)?_h4[_j4]:_S4;}}return this._o4;}_Q4(_35,_U4,_45){if(_35===this.__4&&_U4===this._O4&&_45===this._05)return;const _V4=2*Math.PI*_35/sampleRate;const _W4=Math.cos(_V4);const _55=Math.sqrt(_45);const _b5=_55+1;
const _c5=_55-1;const _d5=_b5*_W4;const _e5=_c5*_W4;const _f5=_b5-_e5;const _g5=_b5+_e5;const alpha=Math.sin(_V4)/(2*_U4);const _h5=(2*Math.sqrt(_55)*alpha);const _X4=_f5+_h5;const _E4=2*(_c5-_d5);const _F4=_f5-_h5;const _G4=_55*(_g5+_h5);const _H4=-2*_55*(_c5+_d5);const _I4=_55*(_g5-_h5);this._E4=_E4/_X4;this._F4=_F4/_X4;this._G4=_G4/_X4;this._H4=_H4/_X4;this._I4=_I4/_X4;this.__4=_35;this._O4=_U4;this._05=_45;}}registerProcessor("hi-shelf-processor",_a5);function _i5(){}_i5._j5={_k5:0,_l5:1,_m5:2,_n5:3,_o5:4,
_p5:5};_i5._q5=function(_r5){return 1.0-_r5;};_i5._s5=function(_r5){return _r5;};_i5._t5=function(_r5){return 0.5*(Math.sin((_r5*2.0*Math.PI)-(Math.PI/2.0))+1.0);};_i5._u5=function(_r5){if(_r5<0.5){return 0.0;}return 1.0;};_i5._v5=function(_r5){if(_r5<0.5){return 2.0*_r5;}return 2.0-(2.0*_r5);};_i5._w5=[_i5._q5,_i5._s5,_i5._t5,_i5._u5,_i5._v5];_x5._y5=512;_x5._z5=1.0/_x5._y5;function _x5(_A5){this.data=new Float32Array(_x5._y5);for(let _d4=0;_d4<_x5._y5;++_d4){this.data[_d4]=_A5(_d4*_x5._z5);}}_x5.prototype._B5=function(_r5){
_r5=Math.max(0.0,_r5);_r5=Math.min(_r5,1.0);const _C5=_r5*_x5._y5;const _D5=~~_C5;const _E5=_C5-_D5;let _F5=_D5;let _G5=_F5+1;if(_F5>=_x5._y5){_F5-=_x5._y5;}if(_G5>=_x5._y5){_G5-=_x5._y5;}const _H5=this.data[_F5];const _I5=this.data[_G5];return _H5+(_I5-_H5)*_E5;};;_J5._K5=[];_J5._L5=!1;_J5._M5=0.0;_J5._Z4=20.0;function _J5(){this._N5=48000;this.shape=_i5._j5._m5;this.freq=1.0;this._O5=0.0;this._z5=0.0;this._P5=0.0;if(_J5._L5==true){return;}for(let _d4=0;_d4<_i5._j5._p5;++_d4){_J5._K5[_d4]=new _x5(_i5._w5[_d4]);
}_J5._L5=true;}_J5._Q5=function(){return(_J5._L5==!0);};_J5.prototype._R5=function(_S5){this._N5=_S5;this._T5();};;_J5.prototype._U5=function(_35){_35=Math.max(_J5._M5,_35);_35=Math.min(_35,_J5._Z4);this.freq=_35;this._T5();};;_J5.prototype._V5=function(_W5){_W5=Math.max(0.0,_W5);_W5=Math.min(_W5,1.0);const _X5=_W5-this._P5;this._P5=_W5;this._O5+=_X5;while(this._O5>=1.0){this._O5-=1.0;}while(this._O5<0.0){this._O5+=1.0;}};;_J5.prototype._Y5=function(_Z5){_Z5=Math.max(0,_Z5);_Z5=Math.min(_Z5,_i5._j5._p5-1);
this.shape=_Z5;};;_J5.prototype._B5=function(){const __5=_J5._K5[this.shape]._B5(this._O5);this._O5+=this._z5;while(this._O5>=1.0){this._O5-=1.0;}return __5;};;_J5.prototype._T5=function(){this._z5=this.freq/this._N5;};;class _06 extends AudioWorkletProcessor{static _16=5.0;static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"time",automationRate:"a-rate",defaultValue:0.2,minValue:0.0,maxValue:_06._16},{name:"feedback",automationRate:"a-rate",
defaultValue:0.5,minValue:0.0,maxValue:1.0},{name:"mix",automationRate:"a-rate",defaultValue:0.35,minValue:0.0,maxValue:1.0}];}constructor(_34){super();this._44();const _54=_34.outputChannelCount[0];const _26=(_06._16*sampleRate)+1;this.buffer=new Array(_54);this._36=new Uint32Array(_54);for(let _c4=0;_c4<_54;++_c4)this.buffer[_c4]=new Float32Array(_26);}process(_f4,_g4,parameters){const input=_f4[0];const output=_g4[0];const bypass=parameters.bypass;const time=parameters.time;const feedback=parameters.feedback;
const mix=parameters.mix;for(let _c4=0;_c4<input.length;++_c4){const _h4=input[_c4];const _i4=output[_c4];for(let _j4=0;_j4<_h4.length;++_j4){_i4[_j4]=_h4[_j4];const _46=(time[_j4]!==undefined)?time[_j4]:time[0];const _56=this._B5(_c4,_46);const _15=(feedback[_j4]!==undefined)?feedback[_j4]:feedback[0];const _66=_h4[_j4]+(_56*_15);this.write(_c4,_66);const _m4=(bypass[_j4]!==undefined)?bypass[_j4]:bypass[0];if(_m4>0.0){continue;}const _n4=(mix[_j4]!==undefined)?mix[_j4]:mix[0];_i4[_j4]*=(1-_n4);_i4[_j4]+=(_56*_n4);
}}return this._o4;}_B5(_76,_86){const _96=_86*sampleRate;let _F5=(this._36[_76]-~~_96);let _G5=(_F5-1);while(_F5<0)_F5+=this.buffer[_76].length;while(_G5<0)_G5+=this.buffer[_76].length;const _a6=_96-~~_96;const _H5=this.buffer[_76][_F5];const _I5=this.buffer[_76][_G5];return _H5+(_I5-_H5)*_a6;}write(_76,_N3){++this._36[_76];this._36[_76]%=this.buffer[_76].length;this.buffer[_76][this._36[_76]]=_N3;}}registerProcessor("delay-processor",_06);AudioWorkletProcessor.prototype._44=function(){this._o4=true;this.port.onmessage=(_b6)=>{
if(_b6.data==="kill")this._o4=false;};};;class _c6 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1}];}constructor(){super();this._44();}process(_f4,_g4,parameters){const input=_f4[0];const bypass=parameters.bypass;for(let _c4=0;_c4<input.length;++_c4){const _h4=input[_c4];for(let _j4=0;_j4<_h4.length;++_j4){const _m4=(bypass[_j4]!==undefined)?bypass[_j4]:bypass[0];_g4[_m4][_c4][_j4]=_h4[_j4];}}return this._o4;
}}class _d6 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"gain",automationRate:"a-rate",defaultValue:1,minValue:0}];}constructor(){super();this._44();}process(_f4,_g4,parameters){const _y4=_f4[0];const _z4=_f4[1];const output=_g4[0];const gain=parameters.gain;for(let _c4=0;_c4<_z4.length;++_c4){const _h4=_z4[_c4];const _i4=output[_c4];for(let _j4=0;_j4<_h4.length;++_j4)_i4[_j4]=_h4[_j4];}for(let _c4=0;_c4<_y4.length;++_c4){const _h4=_y4[_c4];const _i4=output[_c4];for(let _j4=0;_j4<_h4.length;
++_j4){const _25=(gain[_j4]!==undefined)?gain[_j4]:gain[0];_i4[_j4]+=_h4[_j4]*_25;}}return this._o4;}}registerProcessor("audio-bus-input",_c6);registerProcessor("audio-bus-output",_d6);class _e6 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"gain",automationRate:"a-rate",defaultValue:1.0,minValue:0.0},{name:"factor",automationRate:"a-rate",defaultValue:20,minValue:1,maxValue:100},{name:"resolution",
automationRate:"a-rate",defaultValue:8,minValue:2,maxValue:16},{name:"mix",automationRate:"a-rate",defaultValue:0.8,minValue:0.0,maxValue:1.0}];}static _f6=[undefined,undefined,2,4,8,16,32,64,128,256,512,1024,2048,4096,8192,16384,32768];constructor(_34){super();this._44();const _54=_34.outputChannelCount[0];this._g6=new Float32Array(_54);this._h6=new Uint32Array(_54);}process(_f4,_g4,parameters){const input=_f4[0];const output=_g4[0];const bypass=parameters.bypass;const gain=parameters.gain;const factor=parameters.factor;
const resolution=parameters.resolution;const mix=parameters.mix;for(let _c4=0;_c4<input.length;++_c4){const _h4=input[_c4];const _i4=output[_c4];for(let _j4=0;_j4<_h4.length;++_j4){_i4[_j4]=_h4[_j4];if(this._h6[_c4]===0)this._g6[_c4]=_h4[_j4];const _15=(factor[_j4]!==undefined)?factor[_j4]:factor[0];++this._h6[_c4];this._h6[_c4]%=_15;const _m4=(bypass[_j4]!==undefined)?bypass[_j4]:bypass[0];if(_m4>0.0){continue;}let _l4=this._g6[_c4];const _25=(gain[_j4]!==undefined)?gain[_j4]:gain[0];_l4*=_25;_l4=Math.max(Math.min(_l4,
1.0),-1.0);const _i6=(resolution[_j4]!==undefined)?resolution[_j4]:resolution[0];const max=(_l4>0.0)?_e6._f6[_i6]-1:_e6._f6[_i6];_l4=Math.round(_l4*max)/max;const _n4=(mix[_j4]!==undefined)?mix[_j4]:mix[0];_i4[_j4]*=(1.0-_n4);_i4[_j4]+=(_l4*_n4);}}return this._o4;}}registerProcessor("bitcrusher-processor",_e6);class _j6 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"rate",automationRate:"a-rate",defaultValue:5.0,
minValue:0.0,maxValue:20.0},{name:"intensity",automationRate:"a-rate",defaultValue:1.0,minValue:0.0,maxValue:1.0},{name:"offset",automationRate:"a-rate",defaultValue:0.0,minValue:0.0,maxValue:1.0},{name:"shape",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:4}];}constructor(_34){super();this._44();const _54=_34.outputChannelCount[0];this._k6=new Array(_54).fill(1.0);this._l6=new Array(_54).fill(0.0);this._m6=new Array(_54).fill(_i5._j5._k5);this._n6=new Array(_54);for(let _c4=0;_c4<_54;++_c4){
this._n6[_c4]=new _J5();this._n6[_c4]._R5(sampleRate);this._n6[_c4]._U5(this._k6[_c4]);this._n6[_c4]._Y5(this._m6[_c4]);if(_c4%2===1){this._n6[_c4]._V5(this._l6[_c4]);}}}process(_f4,_g4,parameters){const input=_f4[0];const output=_g4[0];const bypass=parameters.bypass;const rate=parameters.rate;const intensity=parameters.intensity;const offset=parameters.offset;const shape=parameters.shape;for(let _c4=0;_c4<input.length;++_c4){const _h4=input[_c4];const _i4=output[_c4];for(let _j4=0;_j4<_h4.length;++_j4){_i4[_j4]=_h4[_j4];
const _i6=(rate[_j4]!==undefined)?rate[_j4]:rate[0];const _o6=(offset[_j4]!==undefined)?offset[_j4]:offset[0];const _p6=(shape[_j4]!==undefined)?shape[_j4]:shape[0];this._q6(_c4,_i6,_o6,_p6);const _r6=this._n6[_c4]._B5();const _m4=(bypass[_j4]!==undefined)?bypass[_j4]:bypass[0];if(_m4>0.0){continue;}const _d4=(intensity[_j4]!==undefined)?intensity[_j4]:intensity[0];const out=_h4[_j4]*_r6*_d4;_i4[_j4]*=(1.0-_d4);_i4[_j4]+=out;}}return this._o4;}_q6(_76,_s6,_W5,_Z5){if(_s6!==this._k6[_76]){this._n6[_76]._U5(_s6);
this._k6[_76]=_s6;}if(_W5!==this._l6[_76]){if(_76%2===1){this._n6[_76]._V5(_W5);}this._l6[_76]=_W5;}if(_Z5!==this._m6[_76]){this._n6[_76]._Y5(_Z5);this._m6[_76]=_Z5;}}}registerProcessor("tremolo-processor",_j6);class _t6{constructor(_86=1e-3){this.setTime(_86);}setTime(_86){this._u6=Math.exp(-1/(_86*sampleRate));}process(_v6,_w6){return _v6+this._u6*(_w6-_v6);}}class _x6{constructor(_y6,_z6){this._A6=new _t6(_y6);this._B6=new _t6(_z6);this._C6=_y6;this._D6=_z6;}_E6(_86){if(_86===this._C6)return;this._A6.setTime(_86);
this._C6=_86;}_F6(_86){if(_86===this._D6)return;this._B6.setTime(_86);this._D6=_86;}process(_v6,_w6){if(_v6>_w6)return this._A6.process(_v6,_w6);else return this._B6.process(_v6,_w6);}}class _G6 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"ingain",automationRate:"a-rate",defaultValue:1,minValue:0},{name:"threshold",automationRate:"a-rate",defaultValue:0.125,minValue:1e-3,maxValue:1},{name:"ratio",
automationRate:"a-rate",defaultValue:4,minValue:1},{name:"attack",automationRate:"a-rate",defaultValue:0.05,minValue:1e-3,maxValue:1e-1},{name:"release",automationRate:"a-rate",defaultValue:0.25,minValue:1e-2,maxValue:1},{name:"outgain",automationRate:"a-rate",defaultValue:1,minValue:0}];}constructor(_H6){super();this._44();const _A6=_G6.parameterDescriptors.find(_I6=>_I6.name==="attack");const _B6=_G6.parameterDescriptors.find(_I6=>_I6.name==="release");this._J6=new _x6(_A6.defaultValue,_B6.defaultValue);
this._K6=0;}process(_L6,_M6,_N6){const input=_L6[0];const output=_M6[0];const bypass=_N6.bypass;const ingain=_N6.ingain;const outgain=_N6.outgain;const threshold=_N6.threshold;const ratio=_N6.ratio;const attack=_N6.attack;const release=_N6.release;if(input.length===0)return this._o4;for(let _j4=0;_j4<input[0].length;++_j4){let _O6=input.map(_P6=>_P6[_j4]);output.forEach((_P6,_Q6)=>{_P6[_j4]=_O6[_Q6];});const _R6=(ingain[_j4]!==undefined)?ingain[_j4]:ingain[0];_O6=_O6.map(_S6=>_S6*=_R6);const rect=_O6.map(_S6=>Math.abs(_S6));
const max=Math.max(...rect);const _T6=_U6(max);const _46=(threshold[_j4]!==undefined)?threshold[_j4]:threshold[0];const _V6=_U6(_46);const _W6=Math.max(0,_T6-_V6);const _A6=(attack[_j4]!==undefined)?attack[_j4]:attack[0];const _B6=(release[_j4]!==undefined)?release[_j4]:release[0];this._J6._E6(_A6);this._J6._F6(_B6);this._K6=this._J6.process(_W6,this._K6);const _m4=(bypass[_j4]!==undefined)?bypass[_j4]:bypass[0];if(_m4>0)continue;const _i6=(ratio[_j4]!==undefined)?ratio[_j4]:ratio[0];const _X6=(this._K6/_i6)-this._K6;
const _25=_Y6(_X6);_O6=_O6.map(_S6=>_S6*=_25);const _Z6=(outgain[_j4]!==undefined)?outgain[_j4]:outgain[0];_O6=_O6.map(_S6=>_S6*=_Z6);output.forEach((_P6,_Q6)=>{_P6[_j4]=_O6[_Q6];});}return this._o4;}}function _U6(__6){return 20*Math.log10(__6);}function _Y6(__6){return Math.pow(10,__6/20);}registerProcessor("compressor-processor",_G6);class _07 extends AudioWorkletProcessor{static get parameterDescriptors(){const _Z4=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,
minValue:0,maxValue:1},{name:"freq",automationRate:"a-rate",defaultValue:Math.min(500.0,_Z4),minValue:10.0,maxValue:_Z4},{name:"q",automationRate:"a-rate",defaultValue:1.0,minValue:1.0,maxValue:100.0},{name:"gain",automationRate:"a-rate",defaultValue:1e-2,minValue:1e-6}];}constructor(_34){super();this._44();const _54=_34.outputChannelCount[0];this._E4=0;this._F4=0;this._G4=0;this._H4=0;this._I4=0;this._J4=new Float32Array(_54);this._K4=new Float32Array(_54);this._L4=new Float32Array(_54);this._M4=new Float32Array(_54);
this.__4=-1;this._O4=-1;this._05=-1;}process(_f4,_g4,parameters){const input=_f4[0];const output=_g4[0];const bypass=parameters.bypass;const freq=parameters.freq;const q=parameters.q;const gain=parameters.gain;const _P4=(freq.length===1&&q.length===1&&gain.length===1);if(_P4)this._Q4(freq[0],q[0],gain[0]);for(let _c4=0;_c4<input.length;++_c4){const _h4=input[_c4];const _i4=output[_c4];for(let _j4=0;_j4<_h4.length;++_j4){if(_P4===!1){const _15=(freq[_j4]!==undefined)?freq[_j4]:freq[0];const _R4=(q[_j4]!==undefined)?q[_j4]:q[0];
const _25=(gain[_j4]!==undefined)?gain[_j4]:gain[0];this._Q4(_15,_R4,_25);}const _S4=this._G4*_h4[_j4]+this._H4*this._J4[_c4]+this._I4*this._K4[_c4]-this._E4*this._L4[_c4]-this._F4*this._M4[_c4];this._K4[_c4]=this._J4[_c4];this._J4[_c4]=_h4[_j4];this._M4[_c4]=this._L4[_c4];this._L4[_c4]=_S4;const _m4=(bypass[_j4]!==undefined)?bypass[_j4]:bypass[0];_i4[_j4]=(_m4>0)?_h4[_j4]:_S4;}}return this._o4;}_Q4(_35,_U4,_45){if(_35===this.__4&&_U4===this._O4&&_45===this._05)return;const _V4=2*Math.PI*_35/sampleRate;
const _W4=Math.cos(_V4);const _55=Math.sqrt(_45);const _b5=_55+1;const _c5=_55-1;const _d5=_b5*_W4;const _e5=_c5*_W4;const _f5=_b5-_e5;const _g5=_b5+_e5;const alpha=Math.sin(_V4)/(2*_U4);const _h5=(2*Math.sqrt(_55)*alpha);const _X4=_g5+_h5;const _E4=-2*(_c5+_d5);const _F4=_g5-_h5;const _G4=_55*(_f5+_h5);const _H4=2*_55*(_c5-_d5);const _I4=_55*(_f5-_h5);this._E4=_E4/_X4;this._F4=_F4/_X4;this._G4=_G4/_X4;this._H4=_H4/_X4;this._I4=_I4/_X4;this.__4=_35;this._O4=_U4;this._05=_45;}}registerProcessor("lo-shelf-processor",
_07);