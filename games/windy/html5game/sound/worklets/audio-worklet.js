class _C1{constructor(_D1){this._E1=0;this._F1=0;this.feedback=0;this._G1=0;this.buffer=new Float32Array(_D1);this._H1=0;}process(_I1){const out=this.buffer[this._H1];this._G1=(this._G1*this._E1)+(out*this._F1);this.buffer[this._H1]=_I1+(this._G1*this.feedback);++this._H1;this._H1%=this.buffer.length;return out;}_J1(_K1){this.feedback=Math.min(Math.max(0,_K1),1);}_L1(_M1){this._E1=Math.min(Math.max(0,_M1),1);this._F1=1-this._E1;}}class _N1{constructor(_D1){this.feedback=0;this.buffer=new Float32Array(_D1);
this._H1=0;}process(_I1){const out=this.buffer[this._H1];this.buffer[this._H1]=_I1+(out*this.feedback);++this._H1;this._H1%=this.buffer.length;return(out-_I1);}_J1(_K1){this.feedback=Math.min(Math.max(0,_K1),1);}}class _O1 extends AudioWorkletProcessor{static _P1=8;static _Q1=4;static _R1=0.015;static _S1=0.4;static _T1=0.28;static _U1=0.7;static _V1=[1116,1188,1277,1356,1422,1491,1557,1617];static _W1=[1139,1211,1300,1379,1445,1514,1580,1640];static _X1=[556,441,341,225];static _Y1=[579,464,364,248];static get parameterDescriptors(){
return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"size",automationRate:"a-rate",defaultValue:0.7,minValue:0.0,maxValue:1.0},{name:"damp",automationRate:"a-rate",defaultValue:0.1,minValue:0.0,maxValue:1.0},{name:"mix",automationRate:"a-rate",defaultValue:0.35,minValue:0.0,maxValue:1.0}];}constructor(_Z1){super();this.__1();const _02=_Z1.outputChannelCount[0];this._12=-1;this._22=-1;this._32=new Array(_02);this._42=new Array(_02);const _52=[_O1._V1,_O1._W1];const _62=[_O1._X1,
_O1._Y1];for(let _72=0;_72<_02;++_72){this._32[_72]=new Array(_O1._P1);this._42[_72]=new Array(_O1._Q1);for(let _82=0;_82<_O1._P1;++_82)this._32[_72][_82]=new _C1(_52[_72%_52.length][_82]);for(let _82=0;_82<_O1._Q1;++_82)this._42[_72][_82]=new _N1(_62[_72%_62.length][_82]);}this._92(0.5);this._L1(0.5);for(let _72=0;_72<_02;++_72)for(let _82=0;_82<_O1._Q1;++_82)this._42[_72][_82]._J1(0.5);}process(_a2,_b2,parameters){const input=_a2[0];const output=_b2[0];const bypass=parameters.bypass;const size=parameters.size;
const damp=parameters.damp;const mix=parameters.mix;for(let _72=0;_72<input.length;++_72){const _c2=input[_72];const _d2=output[_72];for(let _e2=0;_e2<_c2.length;++_e2){const _e2=(size[_e2]!==undefined)?size[_e2]:size[0];const _f2=(damp[_e2]!==undefined)?damp[_e2]:damp[0];this._92(_e2);this._L1(_f2);_d2[_e2]=_c2[_e2];let out=0;const _g2=_c2[_e2]*_O1._R1;for(let _82=0;_82<_O1._P1;++_82)out+=this._32[_72][_82].process(_g2);for(let _82=0;_82<_O1._Q1;++_82)out=this._42[_72][_82].process(out);const _h2=(bypass[_e2]!==undefined)?bypass[_e2]:bypass[0];
if(_h2>0.0){continue;}const _i2=(mix[_e2]!==undefined)?mix[_e2]:mix[0];_d2[_e2]*=(1-_i2);_d2[_e2]+=(out*_i2);}}return this._j2;}_92(_D1){if(_D1===this._12)return;const size=(_D1*_O1._T1)+_O1._U1;for(let _72=0;_72<this._32.length;++_72)for(let _82=0;_82<_O1._P1;++_82)this._32[_72][_82]._J1(size);this._12=_D1;}_L1(_M1){if(_M1===this._22)return;const damp=_M1*_O1._S1;for(let _72=0;_72<this._32.length;++_72)for(let _82=0;_82<_O1._P1;++_82)this._32[_72][_82]._L1(damp);this._22=_M1;}}registerProcessor("reverb1-processor",
_O1);class _k2 extends AudioWorkletProcessor{static get parameterDescriptors(){return [];}constructor(){super();this.__1();}process(_l2,_m2,_n2){const input=_l2[0];const _o2=_m2[0];const _p2=_m2[1];for(let _72=0;_72<input.length;++_72){const _c2=input[_72];const _q2=_o2[_72];const _r2=_p2[_72];for(let _e2=0;_e2<_c2.length;++_e2){_q2[_e2]=_c2[_e2];_r2[_e2]=_c2[_e2];}}return this._j2;}}class _s2 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,
minValue:0,maxValue:1}];}constructor(){super();this.__1();}process(_l2,_m2,_n2){const _t2=_l2[0];const _u2=_l2[1];const output=_m2[0];const bypass=_n2.bypass;for(let _72=0;_72<_u2.length;++_72){const _v2=_t2[_72];const _w2=_u2[_72];const _d2=output[_72];for(let _e2=0;_e2<_v2.length;++_e2){const _h2=(bypass[_e2]!==undefined)?bypass[_e2]:bypass[0];if(_h2>0){_d2[_e2]=_w2[_e2];}else {_d2[_e2]=_v2[_e2];}}}return this._j2;}}registerProcessor("eq-input",_k2);registerProcessor("eq-output",_s2);class _x2 extends AudioWorkletProcessor{
static get parameterDescriptors(){const _y2=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"cutoff",automationRate:"a-rate",defaultValue:Math.min(500.0,_y2),minValue:10.0,maxValue:_y2},{name:"q",automationRate:"a-rate",defaultValue:1.5,minValue:1.0,maxValue:100.0}];}constructor(_Z1){super();this.__1();const _02=_Z1.outputChannelCount[0];this._z2=0;this._A2=0;this._B2=0;this._C2=0;this._D2=0;this._E2=new Float32Array(_02);this._F2=new Float32Array(_02);
this._G2=new Float32Array(_02);this._H2=new Float32Array(_02);this._I2=-1;this._J2=-1;}process(_a2,_b2,parameters){const input=_a2[0];const output=_b2[0];const bypass=parameters.bypass;const cutoff=parameters.cutoff;const q=parameters.q;const _K2=(cutoff.length===1&&q.length===1);if(_K2)this._L2(cutoff[0],q[0]);for(let _72=0;_72<input.length;++_72){const _c2=input[_72];const _d2=output[_72];for(let _e2=0;_e2<_c2.length;++_e2){if(_K2===!1){const _72=(cutoff[_e2]!==undefined)?cutoff[_e2]:cutoff[0];const _M2=(q[_e2]!==undefined)?q[_e2]:q[0];
this._L2(_72,_M2);}const _N2=this._B2*_c2[_e2]+this._C2*this._E2[_72]+this._D2*this._F2[_72]-this._z2*this._G2[_72]-this._A2*this._H2[_72];this._F2[_72]=this._E2[_72];this._E2[_72]=_c2[_e2];this._H2[_72]=this._G2[_72];this._G2[_72]=_N2;const _h2=(bypass[_e2]!==undefined)?bypass[_e2]:bypass[0];_d2[_e2]=(_h2>0)?_c2[_e2]:_N2;}}return this._j2;}_L2(_O2,_P2){if(_O2===this._I2&&_P2===this._J2)return;const _Q2=2*Math.PI*_O2/sampleRate;const alpha=Math.sin(_Q2)/(2*_P2);const _R2=Math.cos(_Q2);const _S2=1+alpha;
const _z2=-2*_R2;const _A2=1-alpha;const _B2=(1-_R2)/2;const _C2=1-_R2;const _D2=(1-_R2)/2;this._z2=_z2/_S2;this._A2=_A2/_S2;this._B2=_B2/_S2;this._C2=_C2/_S2;this._D2=_D2/_S2;this._I2=_O2;this._J2=_P2;}}registerProcessor("lpf2-processor",_x2);class _T2 extends AudioWorkletProcessor{static get parameterDescriptors(){const _U2=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"freq",automationRate:"a-rate",defaultValue:Math.min(1500.0,
_U2),minValue:10.0,maxValue:_U2},{name:"q",automationRate:"a-rate",defaultValue:1.0,minValue:1.0,maxValue:100.0},{name:"gain",automationRate:"a-rate",defaultValue:1e-2,minValue:1e-6}];}constructor(_Z1){super();this.__1();const _02=_Z1.outputChannelCount[0];this._z2=0;this._A2=0;this._B2=0;this._C2=0;this._D2=0;this._E2=new Float32Array(_02);this._F2=new Float32Array(_02);this._G2=new Float32Array(_02);this._H2=new Float32Array(_02);this._V2=-1;this._J2=-1;this._W2=-1;}process(_a2,_b2,parameters){const input=_a2[0];
const output=_b2[0];const bypass=parameters.bypass;const freq=parameters.freq;const q=parameters.q;const gain=parameters.gain;const _K2=(freq.length===1&&q.length===1&&gain.length===1);if(_K2)this._L2(freq[0],q[0],gain[0]);for(let _72=0;_72<input.length;++_72){const _c2=input[_72];const _d2=output[_72];for(let _e2=0;_e2<_c2.length;++_e2){if(_K2===!1){const _X2=(freq[_e2]!==undefined)?freq[_e2]:freq[0];const _M2=(q[_e2]!==undefined)?q[_e2]:q[0];const _Y2=(gain[_e2]!==undefined)?gain[_e2]:gain[0];this._L2(_X2,
_M2,_Y2);}const _N2=this._B2*_c2[_e2]+this._C2*this._E2[_72]+this._D2*this._F2[_72]-this._z2*this._G2[_72]-this._A2*this._H2[_72];this._F2[_72]=this._E2[_72];this._E2[_72]=_c2[_e2];this._H2[_72]=this._G2[_72];this._G2[_72]=_N2;const _h2=(bypass[_e2]!==undefined)?bypass[_e2]:bypass[0];_d2[_e2]=(_h2>0)?_c2[_e2]:_N2;}}return this._j2;}_L2(_Z2,_P2,__2){if(_Z2===this._V2&&_P2===this._J2&&__2===this._W2)return;const _Q2=2*Math.PI*_Z2/sampleRate;const _R2=Math.cos(_Q2);const _03=Math.sqrt(__2);const alpha=Math.sin(_Q2)/(2*_P2);
const _13=alpha/_03;const _23=alpha*_03;const _S2=1+_13;const _z2=-2*_R2;const _A2=1-_13;const _B2=1+_23;const _C2=_z2;const _D2=1-_23;this._z2=_z2/_S2;this._A2=_A2/_S2;this._B2=_B2/_S2;this._C2=_C2/_S2;this._D2=_D2/_S2;this._V2=_Z2;this._J2=_P2;this._W2=__2;}}registerProcessor("peak-eq-processor",_T2);class _33 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"gain",automationRate:"a-rate",defaultValue:0.5,
minValue:0.0}];}constructor(){super();this.__1();}process(_a2,_b2,parameters){const input=_a2[0];const output=_b2[0];const bypass=parameters.bypass;const gain=parameters.gain;for(let _72=0;_72<input.length;++_72){const _c2=input[_72];const _d2=output[_72];for(let _e2=0;_e2<_c2.length;++_e2){_d2[_e2]=_c2[_e2];const _h2=(bypass[_e2]!==undefined)?bypass[_e2]:bypass[0];if(_h2>0.0){continue;}const _Y2=(gain[_e2]!==undefined)?gain[_e2]:gain[0];_d2[_e2]*=_Y2;}}return this._j2;}}registerProcessor("gain-processor",
_33);class _43 extends AudioWorkletProcessor{static get parameterDescriptors(){const _y2=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"cutoff",automationRate:"a-rate",defaultValue:Math.min(1500.0,_y2),minValue:10.0,maxValue:_y2},{name:"q",automationRate:"a-rate",defaultValue:1.5,minValue:1.0,maxValue:100.0}];}constructor(_Z1){super();this.__1();const _02=_Z1.outputChannelCount[0];this._z2=0;this._A2=0;this._B2=0;this._C2=0;this._D2=0;
this._E2=new Float32Array(_02);this._F2=new Float32Array(_02);this._G2=new Float32Array(_02);this._H2=new Float32Array(_02);this._I2=-1;this._J2=-1;}process(_a2,_b2,parameters){const input=_a2[0];const output=_b2[0];const bypass=parameters.bypass;const cutoff=parameters.cutoff;const q=parameters.q;const _K2=(cutoff.length===1&&q.length===1);if(_K2)this._L2(cutoff[0],q[0]);for(let _72=0;_72<input.length;++_72){const _c2=input[_72];const _d2=output[_72];for(let _e2=0;_e2<_c2.length;++_e2){if(_K2===!1){const _72=(cutoff[_e2]!==undefined)?cutoff[_e2]:cutoff[0];
const _M2=(q[_e2]!==undefined)?q[_e2]:q[0];this._L2(_72,_M2);}const _N2=this._B2*_c2[_e2]+this._C2*this._E2[_72]+this._D2*this._F2[_72]-this._z2*this._G2[_72]-this._A2*this._H2[_72];this._F2[_72]=this._E2[_72];this._E2[_72]=_c2[_e2];this._H2[_72]=this._G2[_72];this._G2[_72]=_N2;const _h2=(bypass[_e2]!==undefined)?bypass[_e2]:bypass[0];_d2[_e2]=(_h2>0)?_c2[_e2]:_N2;}}return this._j2;}_L2(_O2,_P2){if(_O2===this._I2&&_P2===this._J2)return;const _Q2=2*Math.PI*_O2/sampleRate;const alpha=Math.sin(_Q2)/(2*_P2);
const _R2=Math.cos(_Q2);const _S2=1+alpha;const _z2=-2*_R2;const _A2=1-alpha;const _B2=(1+_R2)/2;const _C2=-1-_R2;const _D2=(1+_R2)/2;this._z2=_z2/_S2;this._A2=_A2/_S2;this._B2=_B2/_S2;this._C2=_C2/_S2;this._D2=_D2/_S2;this._I2=_O2;this._J2=_P2;}}registerProcessor("hpf2-processor",_43);class _53 extends AudioWorkletProcessor{static get parameterDescriptors(){const _U2=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"freq",automationRate:"a-rate",
defaultValue:Math.min(5000.0,_U2),minValue:10.0,maxValue:_U2},{name:"q",automationRate:"a-rate",defaultValue:1.0,minValue:1.0,maxValue:100.0},{name:"gain",automationRate:"a-rate",defaultValue:1e-2,minValue:1e-6}];}constructor(_Z1){super();this.__1();const _02=_Z1.outputChannelCount[0];this._z2=0;this._A2=0;this._B2=0;this._C2=0;this._D2=0;this._E2=new Float32Array(_02);this._F2=new Float32Array(_02);this._G2=new Float32Array(_02);this._H2=new Float32Array(_02);this._V2=-1;this._J2=-1;this._W2=-1;}process(_a2,
_b2,parameters){const input=_a2[0];const output=_b2[0];const bypass=parameters.bypass;const freq=parameters.freq;const q=parameters.q;const gain=parameters.gain;const _K2=(freq.length===1&&q.length===1&&gain.length===1);if(_K2)this._L2(freq[0],q[0],gain[0]);for(let _72=0;_72<input.length;++_72){const _c2=input[_72];const _d2=output[_72];for(let _e2=0;_e2<_c2.length;++_e2){if(_K2===!1){const _X2=(freq[_e2]!==undefined)?freq[_e2]:freq[0];const _M2=(q[_e2]!==undefined)?q[_e2]:q[0];const _Y2=(gain[_e2]!==undefined)?gain[_e2]:gain[0];
this._L2(_X2,_M2,_Y2);}const _N2=this._B2*_c2[_e2]+this._C2*this._E2[_72]+this._D2*this._F2[_72]-this._z2*this._G2[_72]-this._A2*this._H2[_72];this._F2[_72]=this._E2[_72];this._E2[_72]=_c2[_e2];this._H2[_72]=this._G2[_72];this._G2[_72]=_N2;const _h2=(bypass[_e2]!==undefined)?bypass[_e2]:bypass[0];_d2[_e2]=(_h2>0)?_c2[_e2]:_N2;}}return this._j2;}_L2(_Z2,_P2,__2){if(_Z2===this._V2&&_P2===this._J2&&__2===this._W2)return;const _Q2=2*Math.PI*_Z2/sampleRate;const _R2=Math.cos(_Q2);const _03=Math.sqrt(__2);const _63=_03+1;
const _73=_03-1;const _83=_63*_R2;const _93=_73*_R2;const _a3=_63-_93;const _b3=_63+_93;const alpha=Math.sin(_Q2)/(2*_P2);const _c3=(2*Math.sqrt(_03)*alpha);const _S2=_a3+_c3;const _z2=2*(_73-_83);const _A2=_a3-_c3;const _B2=_03*(_b3+_c3);const _C2=-2*_03*(_73+_83);const _D2=_03*(_b3-_c3);this._z2=_z2/_S2;this._A2=_A2/_S2;this._B2=_B2/_S2;this._C2=_C2/_S2;this._D2=_D2/_S2;this._V2=_Z2;this._J2=_P2;this._W2=__2;}}registerProcessor("hi-shelf-processor",_53);function _d3(){}_d3._e3={_f3:0,_g3:1,_h3:2,_i3:3,_j3:4,
_k3:5};_d3._l3=function(_m3){return 1.0-_m3;};_d3._n3=function(_m3){return _m3;};_d3._o3=function(_m3){return 0.5*(Math.sin((_m3*2.0*Math.PI)-(Math.PI/2.0))+1.0);};_d3._p3=function(_m3){if(_m3<0.5){return 0.0;}return 1.0;};_d3._q3=function(_m3){if(_m3<0.5){return 2.0*_m3;}return 2.0-(2.0*_m3);};_d3._r3=[_d3._l3,_d3._n3,_d3._o3,_d3._p3,_d3._q3];_s3._t3=512;_s3._u3=1.0/_s3._t3;function _s3(_v3){this.data=new Float32Array(_s3._t3);for(let _82=0;_82<_s3._t3;++_82){this.data[_82]=_v3(_82*_s3._u3);}}_s3.prototype._w3=function(_m3){
_m3=Math.max(0.0,_m3);_m3=Math.min(_m3,1.0);const _x3=_m3*_s3._t3;const _y3=~~_x3;const _z3=_x3-_y3;let _A3=_y3;let _B3=_A3+1;if(_A3>=_s3._t3){_A3-=_s3._t3;}if(_B3>=_s3._t3){_B3-=_s3._t3;}const _C3=this.data[_A3];const _D3=this.data[_B3];return _C3+(_D3-_C3)*_z3;};;_E3._F3=[];_E3._G3=!1;_E3._H3=0.0;_E3._U2=20.0;function _E3(){this._I3=48000;this.shape=_d3._e3._h3;this.freq=1.0;this._J3=0.0;this._u3=0.0;this._K3=0.0;if(_E3._G3==true){return;}for(let _82=0;_82<_d3._e3._k3;++_82){_E3._F3[_82]=new _s3(_d3._r3[_82]);
}_E3._G3=true;}_E3._L3=function(){return(_E3._G3==!0);};_E3.prototype._M3=function(_N3){this._I3=_N3;this._O3();};;_E3.prototype._P3=function(_Z2){_Z2=Math.max(_E3._H3,_Z2);_Z2=Math.min(_Z2,_E3._U2);this.freq=_Z2;this._O3();};;_E3.prototype._Q3=function(_R3){_R3=Math.max(0.0,_R3);_R3=Math.min(_R3,1.0);const _S3=_R3-this._K3;this._K3=_R3;this._J3+=_S3;while(this._J3>=1.0){this._J3-=1.0;}while(this._J3<0.0){this._J3+=1.0;}};;_E3.prototype._T3=function(_U3){_U3=Math.max(0,_U3);_U3=Math.min(_U3,_d3._e3._k3-1);
this.shape=_U3;};;_E3.prototype._w3=function(){const _V3=_E3._F3[this.shape]._w3(this._J3);this._J3+=this._u3;while(this._J3>=1.0){this._J3-=1.0;}return _V3;};;_E3.prototype._O3=function(){this._u3=this.freq/this._I3;};;class _W3 extends AudioWorkletProcessor{static _X3=5.0;static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"time",automationRate:"a-rate",defaultValue:0.2,minValue:0.0,maxValue:_W3._X3},{name:"feedback",automationRate:"a-rate",
defaultValue:0.5,minValue:0.0,maxValue:1.0},{name:"mix",automationRate:"a-rate",defaultValue:0.35,minValue:0.0,maxValue:1.0}];}constructor(_Z1){super();this.__1();const _02=_Z1.outputChannelCount[0];const _Y3=(_W3._X3*sampleRate)+1;this.buffer=new Array(_02);this._Z3=new Uint32Array(_02);for(let _72=0;_72<_02;++_72)this.buffer[_72]=new Float32Array(_Y3);}process(_a2,_b2,parameters){const input=_a2[0];const output=_b2[0];const bypass=parameters.bypass;const time=parameters.time;const feedback=parameters.feedback;
const mix=parameters.mix;for(let _72=0;_72<input.length;++_72){const _c2=input[_72];const _d2=output[_72];for(let _e2=0;_e2<_c2.length;++_e2){_d2[_e2]=_c2[_e2];const __3=(time[_e2]!==undefined)?time[_e2]:time[0];const _04=this._w3(_72,__3);const _X2=(feedback[_e2]!==undefined)?feedback[_e2]:feedback[0];const _14=_c2[_e2]+(_04*_X2);this.write(_72,_14);const _h2=(bypass[_e2]!==undefined)?bypass[_e2]:bypass[0];if(_h2>0.0){continue;}const _i2=(mix[_e2]!==undefined)?mix[_e2]:mix[0];_d2[_e2]*=(1-_i2);_d2[_e2]+=(_04*_i2);
}}return this._j2;}_w3(_24,_34){const _44=_34*sampleRate;let _A3=(this._Z3[_24]-~~_44);let _B3=(_A3-1);while(_A3<0)_A3+=this.buffer[_24].length;while(_B3<0)_B3+=this.buffer[_24].length;const _54=_44-~~_44;const _C3=this.buffer[_24][_A3];const _D3=this.buffer[_24][_B3];return _C3+(_D3-_C3)*_54;}write(_24,_I1){++this._Z3[_24];this._Z3[_24]%=this.buffer[_24].length;this.buffer[_24][this._Z3[_24]]=_I1;}}registerProcessor("delay-processor",_W3);AudioWorkletProcessor.prototype.__1=function(){this._j2=true;this.port.onmessage=(_64)=>{
if(_64.data==="kill")this._j2=false;};};;class _74 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1}];}constructor(){super();this.__1();}process(_a2,_b2,parameters){const input=_a2[0];const bypass=parameters.bypass;for(let _72=0;_72<input.length;++_72){const _c2=input[_72];for(let _e2=0;_e2<_c2.length;++_e2){const _h2=(bypass[_e2]!==undefined)?bypass[_e2]:bypass[0];_b2[_h2][_72][_e2]=_c2[_e2];}}return this._j2;
}}class _84 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"gain",automationRate:"a-rate",defaultValue:1,minValue:0}];}constructor(){super();this.__1();}process(_a2,_b2,parameters){const _t2=_a2[0];const _u2=_a2[1];const output=_b2[0];const gain=parameters.gain;for(let _72=0;_72<_u2.length;++_72){const _c2=_u2[_72];const _d2=output[_72];for(let _e2=0;_e2<_c2.length;++_e2)_d2[_e2]=_c2[_e2];}for(let _72=0;_72<_t2.length;++_72){const _c2=_t2[_72];const _d2=output[_72];for(let _e2=0;_e2<_c2.length;
++_e2){const _Y2=(gain[_e2]!==undefined)?gain[_e2]:gain[0];_d2[_e2]+=_c2[_e2]*_Y2;}}return this._j2;}}registerProcessor("audio-bus-input",_74);registerProcessor("audio-bus-output",_84);class _94 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"gain",automationRate:"a-rate",defaultValue:1.0,minValue:0.0},{name:"factor",automationRate:"a-rate",defaultValue:20,minValue:1,maxValue:100},{name:"resolution",
automationRate:"a-rate",defaultValue:8,minValue:2,maxValue:16},{name:"mix",automationRate:"a-rate",defaultValue:0.8,minValue:0.0,maxValue:1.0}];}static _a4=[undefined,undefined,2,4,8,16,32,64,128,256,512,1024,2048,4096,8192,16384,32768];constructor(_Z1){super();this.__1();const _02=_Z1.outputChannelCount[0];this._b4=new Float32Array(_02);this._c4=new Uint32Array(_02);}process(_a2,_b2,parameters){const input=_a2[0];const output=_b2[0];const bypass=parameters.bypass;const gain=parameters.gain;const factor=parameters.factor;
const resolution=parameters.resolution;const mix=parameters.mix;for(let _72=0;_72<input.length;++_72){const _c2=input[_72];const _d2=output[_72];for(let _e2=0;_e2<_c2.length;++_e2){_d2[_e2]=_c2[_e2];if(this._c4[_72]===0)this._b4[_72]=_c2[_e2];const _X2=(factor[_e2]!==undefined)?factor[_e2]:factor[0];++this._c4[_72];this._c4[_72]%=_X2;const _h2=(bypass[_e2]!==undefined)?bypass[_e2]:bypass[0];if(_h2>0.0){continue;}let _g2=this._b4[_72];const _Y2=(gain[_e2]!==undefined)?gain[_e2]:gain[0];_g2*=_Y2;_g2=Math.max(Math.min(_g2,
1.0),-1.0);const _d4=(resolution[_e2]!==undefined)?resolution[_e2]:resolution[0];const max=(_g2>0.0)?_94._a4[_d4]-1:_94._a4[_d4];_g2=Math.round(_g2*max)/max;const _i2=(mix[_e2]!==undefined)?mix[_e2]:mix[0];_d2[_e2]*=(1.0-_i2);_d2[_e2]+=(_g2*_i2);}}return this._j2;}}registerProcessor("bitcrusher-processor",_94);class _e4 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"rate",automationRate:"a-rate",defaultValue:5.0,
minValue:0.0,maxValue:20.0},{name:"intensity",automationRate:"a-rate",defaultValue:1.0,minValue:0.0,maxValue:1.0},{name:"offset",automationRate:"a-rate",defaultValue:0.0,minValue:0.0,maxValue:1.0},{name:"shape",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:4}];}constructor(_Z1){super();this.__1();const _02=_Z1.outputChannelCount[0];this._f4=new Array(_02).fill(1.0);this._g4=new Array(_02).fill(0.0);this._h4=new Array(_02).fill(_d3._e3._f3);this._i4=new Array(_02);for(let _72=0;_72<_02;++_72){
this._i4[_72]=new _E3();this._i4[_72]._M3(sampleRate);this._i4[_72]._P3(this._f4[_72]);this._i4[_72]._T3(this._h4[_72]);if(_72%2===1){this._i4[_72]._Q3(this._g4[_72]);}}}process(_a2,_b2,parameters){const input=_a2[0];const output=_b2[0];const bypass=parameters.bypass;const rate=parameters.rate;const intensity=parameters.intensity;const offset=parameters.offset;const shape=parameters.shape;for(let _72=0;_72<input.length;++_72){const _c2=input[_72];const _d2=output[_72];for(let _e2=0;_e2<_c2.length;++_e2){_d2[_e2]=_c2[_e2];
const _d4=(rate[_e2]!==undefined)?rate[_e2]:rate[0];const _j4=(offset[_e2]!==undefined)?offset[_e2]:offset[0];const _k4=(shape[_e2]!==undefined)?shape[_e2]:shape[0];this._l4(_72,_d4,_j4,_k4);const _m4=this._i4[_72]._w3();const _h2=(bypass[_e2]!==undefined)?bypass[_e2]:bypass[0];if(_h2>0.0){continue;}const _82=(intensity[_e2]!==undefined)?intensity[_e2]:intensity[0];const out=_c2[_e2]*_m4*_82;_d2[_e2]*=(1.0-_82);_d2[_e2]+=out;}}return this._j2;}_l4(_24,_n4,_R3,_U3){if(_n4!==this._f4[_24]){this._i4[_24]._P3(_n4);
this._f4[_24]=_n4;}if(_R3!==this._g4[_24]){if(_24%2===1){this._i4[_24]._Q3(_R3);}this._g4[_24]=_R3;}if(_U3!==this._h4[_24]){this._i4[_24]._T3(_U3);this._h4[_24]=_U3;}}}registerProcessor("tremolo-processor",_e4);class _o4{constructor(_34=1e-3){this.setTime(_34);}setTime(_34){this._p4=Math.exp(-1/(_34*sampleRate));}process(_q4,_r4){return _q4+this._p4*(_r4-_q4);}}class _s4{constructor(_t4,_u4){this._v4=new _o4(_t4);this._w4=new _o4(_u4);this._x4=_t4;this._y4=_u4;}_z4(_34){if(_34===this._x4)return;this._v4.setTime(_34);
this._x4=_34;}_A4(_34){if(_34===this._y4)return;this._w4.setTime(_34);this._y4=_34;}process(_q4,_r4){if(_q4>_r4)return this._v4.process(_q4,_r4);else return this._w4.process(_q4,_r4);}}class _B4 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"ingain",automationRate:"a-rate",defaultValue:1,minValue:0},{name:"threshold",automationRate:"a-rate",defaultValue:0.125,minValue:1e-3,maxValue:1},{name:"ratio",
automationRate:"a-rate",defaultValue:4,minValue:1},{name:"attack",automationRate:"a-rate",defaultValue:0.05,minValue:1e-3,maxValue:1e-1},{name:"release",automationRate:"a-rate",defaultValue:0.25,minValue:1e-2,maxValue:1},{name:"outgain",automationRate:"a-rate",defaultValue:1,minValue:0}];}constructor(_C4){super();this.__1();const _v4=_B4.parameterDescriptors.find(_D4=>_D4.name==="attack");const _w4=_B4.parameterDescriptors.find(_D4=>_D4.name==="release");this._E4=new _s4(_v4.defaultValue,_w4.defaultValue);
this._F4=0;}process(_G4,_H4,_I4){const input=_G4[0];const output=_H4[0];const bypass=_I4.bypass;const ingain=_I4.ingain;const outgain=_I4.outgain;const threshold=_I4.threshold;const ratio=_I4.ratio;const attack=_I4.attack;const release=_I4.release;if(input.length===0)return this._j2;for(let _e2=0;_e2<input[0].length;++_e2){let _J4=input.map(_K4=>_K4[_e2]);output.forEach((_K4,_L4)=>{_K4[_e2]=_J4[_L4];});const _M4=(ingain[_e2]!==undefined)?ingain[_e2]:ingain[0];_J4=_J4.map(_N4=>_N4*=_M4);const rect=_J4.map(_N4=>Math.abs(_N4));
const max=Math.max(...rect);const _O4=_P4(max);const __3=(threshold[_e2]!==undefined)?threshold[_e2]:threshold[0];const _Q4=_P4(__3);const _R4=Math.max(0,_O4-_Q4);const _v4=(attack[_e2]!==undefined)?attack[_e2]:attack[0];const _w4=(release[_e2]!==undefined)?release[_e2]:release[0];this._E4._z4(_v4);this._E4._A4(_w4);this._F4=this._E4.process(_R4,this._F4);const _h2=(bypass[_e2]!==undefined)?bypass[_e2]:bypass[0];if(_h2>0)continue;const _d4=(ratio[_e2]!==undefined)?ratio[_e2]:ratio[0];const _S4=(this._F4/_d4)-this._F4;
const _Y2=_T4(_S4);_J4=_J4.map(_N4=>_N4*=_Y2);const _U4=(outgain[_e2]!==undefined)?outgain[_e2]:outgain[0];_J4=_J4.map(_N4=>_N4*=_U4);output.forEach((_K4,_L4)=>{_K4[_e2]=_J4[_L4];});}return this._j2;}}function _P4(_V4){return 20*Math.log10(_V4);}function _T4(_V4){return Math.pow(10,_V4/20);}registerProcessor("compressor-processor",_B4);class _W4 extends AudioWorkletProcessor{static get parameterDescriptors(){const _U2=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,
minValue:0,maxValue:1},{name:"freq",automationRate:"a-rate",defaultValue:Math.min(500.0,_U2),minValue:10.0,maxValue:_U2},{name:"q",automationRate:"a-rate",defaultValue:1.0,minValue:1.0,maxValue:100.0},{name:"gain",automationRate:"a-rate",defaultValue:1e-2,minValue:1e-6}];}constructor(_Z1){super();this.__1();const _02=_Z1.outputChannelCount[0];this._z2=0;this._A2=0;this._B2=0;this._C2=0;this._D2=0;this._E2=new Float32Array(_02);this._F2=new Float32Array(_02);this._G2=new Float32Array(_02);this._H2=new Float32Array(_02);
this._V2=-1;this._J2=-1;this._W2=-1;}process(_a2,_b2,parameters){const input=_a2[0];const output=_b2[0];const bypass=parameters.bypass;const freq=parameters.freq;const q=parameters.q;const gain=parameters.gain;const _K2=(freq.length===1&&q.length===1&&gain.length===1);if(_K2)this._L2(freq[0],q[0],gain[0]);for(let _72=0;_72<input.length;++_72){const _c2=input[_72];const _d2=output[_72];for(let _e2=0;_e2<_c2.length;++_e2){if(_K2===!1){const _X2=(freq[_e2]!==undefined)?freq[_e2]:freq[0];const _M2=(q[_e2]!==undefined)?q[_e2]:q[0];
const _Y2=(gain[_e2]!==undefined)?gain[_e2]:gain[0];this._L2(_X2,_M2,_Y2);}const _N2=this._B2*_c2[_e2]+this._C2*this._E2[_72]+this._D2*this._F2[_72]-this._z2*this._G2[_72]-this._A2*this._H2[_72];this._F2[_72]=this._E2[_72];this._E2[_72]=_c2[_e2];this._H2[_72]=this._G2[_72];this._G2[_72]=_N2;const _h2=(bypass[_e2]!==undefined)?bypass[_e2]:bypass[0];_d2[_e2]=(_h2>0)?_c2[_e2]:_N2;}}return this._j2;}_L2(_Z2,_P2,__2){if(_Z2===this._V2&&_P2===this._J2&&__2===this._W2)return;const _Q2=2*Math.PI*_Z2/sampleRate;
const _R2=Math.cos(_Q2);const _03=Math.sqrt(__2);const _63=_03+1;const _73=_03-1;const _83=_63*_R2;const _93=_73*_R2;const _a3=_63-_93;const _b3=_63+_93;const alpha=Math.sin(_Q2)/(2*_P2);const _c3=(2*Math.sqrt(_03)*alpha);const _S2=_b3+_c3;const _z2=-2*(_73+_83);const _A2=_b3-_c3;const _B2=_03*(_a3+_c3);const _C2=2*_03*(_73-_83);const _D2=_03*(_a3-_c3);this._z2=_z2/_S2;this._A2=_A2/_S2;this._B2=_B2/_S2;this._C2=_C2/_S2;this._D2=_D2/_S2;this._V2=_Z2;this._J2=_P2;this._W2=__2;}}registerProcessor("lo-shelf-processor",
_W4);