class _J1{constructor(_K1){this._L1=0;this._M1=0;this.feedback=0;this._N1=0;this.buffer=new Float32Array(_K1);this._O1=0;}process(_P1){const out=this.buffer[this._O1];this._N1=(this._N1*this._L1)+(out*this._M1);this.buffer[this._O1]=_P1+(this._N1*this.feedback);++this._O1;this._O1%=this.buffer.length;return out;}_Q1(_R1){this.feedback=Math.min(Math.max(0,_R1),1);}_S1(_T1){this._L1=Math.min(Math.max(0,_T1),1);this._M1=1-this._L1;}}class _U1{constructor(_K1){this.feedback=0;this.buffer=new Float32Array(_K1);
this._O1=0;}process(_P1){const out=this.buffer[this._O1];this.buffer[this._O1]=_P1+(out*this.feedback);++this._O1;this._O1%=this.buffer.length;return(out-_P1);}_Q1(_R1){this.feedback=Math.min(Math.max(0,_R1),1);}}class _V1 extends AudioWorkletProcessor{static _W1=8;static _X1=4;static _Y1=0.015;static _Z1=0.4;static __1=0.28;static _02=0.7;static _12=[1116,1188,1277,1356,1422,1491,1557,1617];static _22=[1139,1211,1300,1379,1445,1514,1580,1640];static _32=[556,441,341,225];static _42=[579,464,364,248];static get parameterDescriptors(){
return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"size",automationRate:"a-rate",defaultValue:0.7,minValue:0.0,maxValue:1.0},{name:"damp",automationRate:"a-rate",defaultValue:0.1,minValue:0.0,maxValue:1.0},{name:"mix",automationRate:"a-rate",defaultValue:0.35,minValue:0.0,maxValue:1.0}];}constructor(_52){super();this._62();const _72=_52.outputChannelCount[0];this._82=-1;this._92=-1;this._a2=new Array(_72);this._b2=new Array(_72);const _c2=[_V1._12,_V1._22];const _d2=[_V1._32,
_V1._42];for(let _e2=0;_e2<_72;++_e2){this._a2[_e2]=new Array(_V1._W1);this._b2[_e2]=new Array(_V1._X1);for(let _f2=0;_f2<_V1._W1;++_f2)this._a2[_e2][_f2]=new _J1(_c2[_e2%_c2.length][_f2]);for(let _f2=0;_f2<_V1._X1;++_f2)this._b2[_e2][_f2]=new _U1(_d2[_e2%_d2.length][_f2]);}this._g2(0.5);this._S1(0.5);for(let _e2=0;_e2<_72;++_e2)for(let _f2=0;_f2<_V1._X1;++_f2)this._b2[_e2][_f2]._Q1(0.5);}process(_h2,_i2,parameters){const input=_h2[0];const output=_i2[0];const bypass=parameters.bypass;const size=parameters.size;
const damp=parameters.damp;const mix=parameters.mix;for(let _e2=0;_e2<input.length;++_e2){const _j2=input[_e2];const _k2=output[_e2];for(let _l2=0;_l2<_j2.length;++_l2){const _l2=(size[_l2]!==undefined)?size[_l2]:size[0];const _m2=(damp[_l2]!==undefined)?damp[_l2]:damp[0];this._g2(_l2);this._S1(_m2);_k2[_l2]=_j2[_l2];let out=0;const _n2=_j2[_l2]*_V1._Y1;for(let _f2=0;_f2<_V1._W1;++_f2)out+=this._a2[_e2][_f2].process(_n2);for(let _f2=0;_f2<_V1._X1;++_f2)out=this._b2[_e2][_f2].process(out);const _o2=(bypass[_l2]!==undefined)?bypass[_l2]:bypass[0];
if(_o2>0.0){continue;}const _p2=(mix[_l2]!==undefined)?mix[_l2]:mix[0];_k2[_l2]*=(1-_p2);_k2[_l2]+=(out*_p2);}}return this._q2;}_g2(_K1){if(_K1===this._82)return;const size=(_K1*_V1.__1)+_V1._02;for(let _e2=0;_e2<this._a2.length;++_e2)for(let _f2=0;_f2<_V1._W1;++_f2)this._a2[_e2][_f2]._Q1(size);this._82=_K1;}_S1(_T1){if(_T1===this._92)return;const damp=_T1*_V1._Z1;for(let _e2=0;_e2<this._a2.length;++_e2)for(let _f2=0;_f2<_V1._W1;++_f2)this._a2[_e2][_f2]._S1(damp);this._92=_T1;}}registerProcessor("reverb1-processor",
_V1);class _r2 extends AudioWorkletProcessor{static get parameterDescriptors(){return [];}constructor(){super();this._62();}process(_s2,_t2,_u2){const input=_s2[0];const _v2=_t2[0];const _w2=_t2[1];for(let _e2=0;_e2<input.length;++_e2){const _j2=input[_e2];const _x2=_v2[_e2];const _y2=_w2[_e2];for(let _l2=0;_l2<_j2.length;++_l2){_x2[_l2]=_j2[_l2];_y2[_l2]=_j2[_l2];}}return this._q2;}}class _z2 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,
minValue:0,maxValue:1}];}constructor(){super();this._62();}process(_s2,_t2,_u2){const _A2=_s2[0];const _B2=_s2[1];const output=_t2[0];const bypass=_u2.bypass;for(let _e2=0;_e2<_B2.length;++_e2){const _C2=_A2[_e2];const _D2=_B2[_e2];const _k2=output[_e2];for(let _l2=0;_l2<_C2.length;++_l2){const _o2=(bypass[_l2]!==undefined)?bypass[_l2]:bypass[0];if(_o2>0){_k2[_l2]=_D2[_l2];}else {_k2[_l2]=_C2[_l2];}}}return this._q2;}}registerProcessor("eq-input",_r2);registerProcessor("eq-output",_z2);class _E2 extends AudioWorkletProcessor{
static get parameterDescriptors(){const _F2=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"cutoff",automationRate:"a-rate",defaultValue:Math.min(500.0,_F2),minValue:10.0,maxValue:_F2},{name:"q",automationRate:"a-rate",defaultValue:1.5,minValue:1.0,maxValue:100.0}];}constructor(_52){super();this._62();const _72=_52.outputChannelCount[0];this._G2=0;this._H2=0;this._I2=0;this._J2=0;this._K2=0;this._L2=new Float32Array(_72);this._M2=new Float32Array(_72);
this._N2=new Float32Array(_72);this._O2=new Float32Array(_72);this._P2=-1;this._Q2=-1;}process(_h2,_i2,parameters){const input=_h2[0];const output=_i2[0];const bypass=parameters.bypass;const cutoff=parameters.cutoff;const q=parameters.q;const _R2=(cutoff.length===1&&q.length===1);if(_R2)this._S2(cutoff[0],q[0]);for(let _e2=0;_e2<input.length;++_e2){const _j2=input[_e2];const _k2=output[_e2];for(let _l2=0;_l2<_j2.length;++_l2){if(_R2===!1){const _e2=(cutoff[_l2]!==undefined)?cutoff[_l2]:cutoff[0];const _T2=(q[_l2]!==undefined)?q[_l2]:q[0];
this._S2(_e2,_T2);}const _U2=this._I2*_j2[_l2]+this._J2*this._L2[_e2]+this._K2*this._M2[_e2]-this._G2*this._N2[_e2]-this._H2*this._O2[_e2];this._M2[_e2]=this._L2[_e2];this._L2[_e2]=_j2[_l2];this._O2[_e2]=this._N2[_e2];this._N2[_e2]=_U2;const _o2=(bypass[_l2]!==undefined)?bypass[_l2]:bypass[0];_k2[_l2]=(_o2>0)?_j2[_l2]:_U2;}}return this._q2;}_S2(_V2,_W2){if(_V2===this._P2&&_W2===this._Q2)return;const _X2=2*Math.PI*_V2/sampleRate;const alpha=Math.sin(_X2)/(2*_W2);const _Y2=Math.cos(_X2);const _Z2=1+alpha;
const _G2=-2*_Y2;const _H2=1-alpha;const _I2=(1-_Y2)/2;const _J2=1-_Y2;const _K2=(1-_Y2)/2;this._G2=_G2/_Z2;this._H2=_H2/_Z2;this._I2=_I2/_Z2;this._J2=_J2/_Z2;this._K2=_K2/_Z2;this._P2=_V2;this._Q2=_W2;}}registerProcessor("lpf2-processor",_E2);class __2 extends AudioWorkletProcessor{static get parameterDescriptors(){const _03=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"freq",automationRate:"a-rate",defaultValue:Math.min(1500.0,
_03),minValue:10.0,maxValue:_03},{name:"q",automationRate:"a-rate",defaultValue:1.0,minValue:1.0,maxValue:100.0},{name:"gain",automationRate:"a-rate",defaultValue:1e-2,minValue:1e-6}];}constructor(_52){super();this._62();const _72=_52.outputChannelCount[0];this._G2=0;this._H2=0;this._I2=0;this._J2=0;this._K2=0;this._L2=new Float32Array(_72);this._M2=new Float32Array(_72);this._N2=new Float32Array(_72);this._O2=new Float32Array(_72);this._13=-1;this._Q2=-1;this._23=-1;}process(_h2,_i2,parameters){const input=_h2[0];
const output=_i2[0];const bypass=parameters.bypass;const freq=parameters.freq;const q=parameters.q;const gain=parameters.gain;const _R2=(freq.length===1&&q.length===1&&gain.length===1);if(_R2)this._S2(freq[0],q[0],gain[0]);for(let _e2=0;_e2<input.length;++_e2){const _j2=input[_e2];const _k2=output[_e2];for(let _l2=0;_l2<_j2.length;++_l2){if(_R2===!1){const _33=(freq[_l2]!==undefined)?freq[_l2]:freq[0];const _T2=(q[_l2]!==undefined)?q[_l2]:q[0];const _43=(gain[_l2]!==undefined)?gain[_l2]:gain[0];this._S2(_33,
_T2,_43);}const _U2=this._I2*_j2[_l2]+this._J2*this._L2[_e2]+this._K2*this._M2[_e2]-this._G2*this._N2[_e2]-this._H2*this._O2[_e2];this._M2[_e2]=this._L2[_e2];this._L2[_e2]=_j2[_l2];this._O2[_e2]=this._N2[_e2];this._N2[_e2]=_U2;const _o2=(bypass[_l2]!==undefined)?bypass[_l2]:bypass[0];_k2[_l2]=(_o2>0)?_j2[_l2]:_U2;}}return this._q2;}_S2(_53,_W2,_63){if(_53===this._13&&_W2===this._Q2&&_63===this._23)return;const _X2=2*Math.PI*_53/sampleRate;const _Y2=Math.cos(_X2);const _73=Math.sqrt(_63);const alpha=Math.sin(_X2)/(2*_W2);
const _83=alpha/_73;const _93=alpha*_73;const _Z2=1+_83;const _G2=-2*_Y2;const _H2=1-_83;const _I2=1+_93;const _J2=_G2;const _K2=1-_93;this._G2=_G2/_Z2;this._H2=_H2/_Z2;this._I2=_I2/_Z2;this._J2=_J2/_Z2;this._K2=_K2/_Z2;this._13=_53;this._Q2=_W2;this._23=_63;}}registerProcessor("peak-eq-processor",__2);class _a3 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"gain",automationRate:"a-rate",defaultValue:0.5,
minValue:0.0}];}constructor(){super();this._62();}process(_h2,_i2,parameters){const input=_h2[0];const output=_i2[0];const bypass=parameters.bypass;const gain=parameters.gain;for(let _e2=0;_e2<input.length;++_e2){const _j2=input[_e2];const _k2=output[_e2];for(let _l2=0;_l2<_j2.length;++_l2){_k2[_l2]=_j2[_l2];const _o2=(bypass[_l2]!==undefined)?bypass[_l2]:bypass[0];if(_o2>0.0){continue;}const _43=(gain[_l2]!==undefined)?gain[_l2]:gain[0];_k2[_l2]*=_43;}}return this._q2;}}registerProcessor("gain-processor",
_a3);class _b3 extends AudioWorkletProcessor{static get parameterDescriptors(){const _F2=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"cutoff",automationRate:"a-rate",defaultValue:Math.min(1500.0,_F2),minValue:10.0,maxValue:_F2},{name:"q",automationRate:"a-rate",defaultValue:1.5,minValue:1.0,maxValue:100.0}];}constructor(_52){super();this._62();const _72=_52.outputChannelCount[0];this._G2=0;this._H2=0;this._I2=0;this._J2=0;this._K2=0;
this._L2=new Float32Array(_72);this._M2=new Float32Array(_72);this._N2=new Float32Array(_72);this._O2=new Float32Array(_72);this._P2=-1;this._Q2=-1;}process(_h2,_i2,parameters){const input=_h2[0];const output=_i2[0];const bypass=parameters.bypass;const cutoff=parameters.cutoff;const q=parameters.q;const _R2=(cutoff.length===1&&q.length===1);if(_R2)this._S2(cutoff[0],q[0]);for(let _e2=0;_e2<input.length;++_e2){const _j2=input[_e2];const _k2=output[_e2];for(let _l2=0;_l2<_j2.length;++_l2){if(_R2===!1){const _e2=(cutoff[_l2]!==undefined)?cutoff[_l2]:cutoff[0];
const _T2=(q[_l2]!==undefined)?q[_l2]:q[0];this._S2(_e2,_T2);}const _U2=this._I2*_j2[_l2]+this._J2*this._L2[_e2]+this._K2*this._M2[_e2]-this._G2*this._N2[_e2]-this._H2*this._O2[_e2];this._M2[_e2]=this._L2[_e2];this._L2[_e2]=_j2[_l2];this._O2[_e2]=this._N2[_e2];this._N2[_e2]=_U2;const _o2=(bypass[_l2]!==undefined)?bypass[_l2]:bypass[0];_k2[_l2]=(_o2>0)?_j2[_l2]:_U2;}}return this._q2;}_S2(_V2,_W2){if(_V2===this._P2&&_W2===this._Q2)return;const _X2=2*Math.PI*_V2/sampleRate;const alpha=Math.sin(_X2)/(2*_W2);
const _Y2=Math.cos(_X2);const _Z2=1+alpha;const _G2=-2*_Y2;const _H2=1-alpha;const _I2=(1+_Y2)/2;const _J2=-1-_Y2;const _K2=(1+_Y2)/2;this._G2=_G2/_Z2;this._H2=_H2/_Z2;this._I2=_I2/_Z2;this._J2=_J2/_Z2;this._K2=_K2/_Z2;this._P2=_V2;this._Q2=_W2;}}registerProcessor("hpf2-processor",_b3);class _c3 extends AudioWorkletProcessor{static get parameterDescriptors(){const _03=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"freq",automationRate:"a-rate",
defaultValue:Math.min(5000.0,_03),minValue:10.0,maxValue:_03},{name:"q",automationRate:"a-rate",defaultValue:1.0,minValue:1.0,maxValue:100.0},{name:"gain",automationRate:"a-rate",defaultValue:1e-2,minValue:1e-6}];}constructor(_52){super();this._62();const _72=_52.outputChannelCount[0];this._G2=0;this._H2=0;this._I2=0;this._J2=0;this._K2=0;this._L2=new Float32Array(_72);this._M2=new Float32Array(_72);this._N2=new Float32Array(_72);this._O2=new Float32Array(_72);this._13=-1;this._Q2=-1;this._23=-1;}process(_h2,
_i2,parameters){const input=_h2[0];const output=_i2[0];const bypass=parameters.bypass;const freq=parameters.freq;const q=parameters.q;const gain=parameters.gain;const _R2=(freq.length===1&&q.length===1&&gain.length===1);if(_R2)this._S2(freq[0],q[0],gain[0]);for(let _e2=0;_e2<input.length;++_e2){const _j2=input[_e2];const _k2=output[_e2];for(let _l2=0;_l2<_j2.length;++_l2){if(_R2===!1){const _33=(freq[_l2]!==undefined)?freq[_l2]:freq[0];const _T2=(q[_l2]!==undefined)?q[_l2]:q[0];const _43=(gain[_l2]!==undefined)?gain[_l2]:gain[0];
this._S2(_33,_T2,_43);}const _U2=this._I2*_j2[_l2]+this._J2*this._L2[_e2]+this._K2*this._M2[_e2]-this._G2*this._N2[_e2]-this._H2*this._O2[_e2];this._M2[_e2]=this._L2[_e2];this._L2[_e2]=_j2[_l2];this._O2[_e2]=this._N2[_e2];this._N2[_e2]=_U2;const _o2=(bypass[_l2]!==undefined)?bypass[_l2]:bypass[0];_k2[_l2]=(_o2>0)?_j2[_l2]:_U2;}}return this._q2;}_S2(_53,_W2,_63){if(_53===this._13&&_W2===this._Q2&&_63===this._23)return;const _X2=2*Math.PI*_53/sampleRate;const _Y2=Math.cos(_X2);const _73=Math.sqrt(_63);const _d3=_73+1;
const _e3=_73-1;const _f3=_d3*_Y2;const _g3=_e3*_Y2;const _h3=_d3-_g3;const _i3=_d3+_g3;const alpha=Math.sin(_X2)/(2*_W2);const _j3=(2*Math.sqrt(_73)*alpha);const _Z2=_h3+_j3;const _G2=2*(_e3-_f3);const _H2=_h3-_j3;const _I2=_73*(_i3+_j3);const _J2=-2*_73*(_e3+_f3);const _K2=_73*(_i3-_j3);this._G2=_G2/_Z2;this._H2=_H2/_Z2;this._I2=_I2/_Z2;this._J2=_J2/_Z2;this._K2=_K2/_Z2;this._13=_53;this._Q2=_W2;this._23=_63;}}registerProcessor("hi-shelf-processor",_c3);function _k3(){}_k3._l3={_m3:0,_n3:1,_o3:2,_p3:3,_q3:4,
_r3:5};_k3._s3=function(_t3){return 1.0-_t3;};_k3._u3=function(_t3){return _t3;};_k3._v3=function(_t3){return 0.5*(Math.sin((_t3*2.0*Math.PI)-(Math.PI/2.0))+1.0);};_k3._w3=function(_t3){if(_t3<0.5){return 0.0;}return 1.0;};_k3._x3=function(_t3){if(_t3<0.5){return 2.0*_t3;}return 2.0-(2.0*_t3);};_k3._y3=[_k3._s3,_k3._u3,_k3._v3,_k3._w3,_k3._x3];_z3._A3=512;_z3._B3=1.0/_z3._A3;function _z3(_C3){this.data=new Float32Array(_z3._A3);for(let _f2=0;_f2<_z3._A3;++_f2){this.data[_f2]=_C3(_f2*_z3._B3);}}_z3.prototype._D3=function(_t3){
_t3=Math.max(0.0,_t3);_t3=Math.min(_t3,1.0);const _E3=_t3*_z3._A3;const _F3=~~_E3;const _G3=_E3-_F3;let _H3=_F3;let _I3=_H3+1;if(_H3>=_z3._A3){_H3-=_z3._A3;}if(_I3>=_z3._A3){_I3-=_z3._A3;}const _J3=this.data[_H3];const _K3=this.data[_I3];return _J3+(_K3-_J3)*_G3;};;_L3._M3=[];_L3._N3=!1;_L3._O3=0.0;_L3._03=20.0;function _L3(){this._P3=48000;this.shape=_k3._l3._o3;this.freq=1.0;this._Q3=0.0;this._B3=0.0;this._R3=0.0;if(_L3._N3==true){return;}for(let _f2=0;_f2<_k3._l3._r3;++_f2){_L3._M3[_f2]=new _z3(_k3._y3[_f2]);
}_L3._N3=true;}_L3._S3=function(){return(_L3._N3==!0);};_L3.prototype._T3=function(_U3){this._P3=_U3;this._V3();};;_L3.prototype._W3=function(_53){_53=Math.max(_L3._O3,_53);_53=Math.min(_53,_L3._03);this.freq=_53;this._V3();};;_L3.prototype._X3=function(_Y3){_Y3=Math.max(0.0,_Y3);_Y3=Math.min(_Y3,1.0);const _Z3=_Y3-this._R3;this._R3=_Y3;this._Q3+=_Z3;while(this._Q3>=1.0){this._Q3-=1.0;}while(this._Q3<0.0){this._Q3+=1.0;}};;_L3.prototype.__3=function(_04){_04=Math.max(0,_04);_04=Math.min(_04,_k3._l3._r3-1);
this.shape=_04;};;_L3.prototype._D3=function(){const _14=_L3._M3[this.shape]._D3(this._Q3);this._Q3+=this._B3;while(this._Q3>=1.0){this._Q3-=1.0;}return _14;};;_L3.prototype._V3=function(){this._B3=this.freq/this._P3;};;class _24 extends AudioWorkletProcessor{static _34=5.0;static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"time",automationRate:"a-rate",defaultValue:0.2,minValue:0.0,maxValue:_24._34},{name:"feedback",automationRate:"a-rate",
defaultValue:0.5,minValue:0.0,maxValue:1.0},{name:"mix",automationRate:"a-rate",defaultValue:0.35,minValue:0.0,maxValue:1.0}];}constructor(_52){super();this._62();const _72=_52.outputChannelCount[0];const _44=(_24._34*sampleRate)+1;this.buffer=new Array(_72);this._54=new Uint32Array(_72);for(let _e2=0;_e2<_72;++_e2)this.buffer[_e2]=new Float32Array(_44);}process(_h2,_i2,parameters){const input=_h2[0];const output=_i2[0];const bypass=parameters.bypass;const time=parameters.time;const feedback=parameters.feedback;
const mix=parameters.mix;for(let _e2=0;_e2<input.length;++_e2){const _j2=input[_e2];const _k2=output[_e2];for(let _l2=0;_l2<_j2.length;++_l2){_k2[_l2]=_j2[_l2];const _64=(time[_l2]!==undefined)?time[_l2]:time[0];const _74=this._D3(_e2,_64);const _33=(feedback[_l2]!==undefined)?feedback[_l2]:feedback[0];const _84=_j2[_l2]+(_74*_33);this.write(_e2,_84);const _o2=(bypass[_l2]!==undefined)?bypass[_l2]:bypass[0];if(_o2>0.0){continue;}const _p2=(mix[_l2]!==undefined)?mix[_l2]:mix[0];_k2[_l2]*=(1-_p2);_k2[_l2]+=(_74*_p2);
}}return this._q2;}_D3(_94,_a4){const _b4=_a4*sampleRate;let _H3=(this._54[_94]-~~_b4);let _I3=(_H3-1);while(_H3<0)_H3+=this.buffer[_94].length;while(_I3<0)_I3+=this.buffer[_94].length;const _c4=_b4-~~_b4;const _J3=this.buffer[_94][_H3];const _K3=this.buffer[_94][_I3];return _J3+(_K3-_J3)*_c4;}write(_94,_P1){++this._54[_94];this._54[_94]%=this.buffer[_94].length;this.buffer[_94][this._54[_94]]=_P1;}}registerProcessor("delay-processor",_24);AudioWorkletProcessor.prototype._62=function(){this._q2=true;this.port.onmessage=(_d4)=>{
if(_d4.data==="kill")this._q2=false;};};;class _e4 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1}];}constructor(){super();this._62();}process(_h2,_i2,parameters){const input=_h2[0];const bypass=parameters.bypass;for(let _e2=0;_e2<input.length;++_e2){const _j2=input[_e2];for(let _l2=0;_l2<_j2.length;++_l2){const _o2=(bypass[_l2]!==undefined)?bypass[_l2]:bypass[0];_i2[_o2][_e2][_l2]=_j2[_l2];}}return this._q2;
}}class _f4 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"gain",automationRate:"a-rate",defaultValue:1,minValue:0}];}constructor(){super();this._62();}process(_h2,_i2,parameters){const _A2=_h2[0];const _B2=_h2[1];const output=_i2[0];const gain=parameters.gain;for(let _e2=0;_e2<_B2.length;++_e2){const _j2=_B2[_e2];const _k2=output[_e2];for(let _l2=0;_l2<_j2.length;++_l2)_k2[_l2]=_j2[_l2];}for(let _e2=0;_e2<_A2.length;++_e2){const _j2=_A2[_e2];const _k2=output[_e2];for(let _l2=0;_l2<_j2.length;
++_l2){const _43=(gain[_l2]!==undefined)?gain[_l2]:gain[0];_k2[_l2]+=_j2[_l2]*_43;}}return this._q2;}}registerProcessor("audio-bus-input",_e4);registerProcessor("audio-bus-output",_f4);class _g4 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"gain",automationRate:"a-rate",defaultValue:1.0,minValue:0.0},{name:"factor",automationRate:"a-rate",defaultValue:20,minValue:1,maxValue:100},{name:"resolution",
automationRate:"a-rate",defaultValue:8,minValue:2,maxValue:16},{name:"mix",automationRate:"a-rate",defaultValue:0.8,minValue:0.0,maxValue:1.0}];}static _h4=[undefined,undefined,2,4,8,16,32,64,128,256,512,1024,2048,4096,8192,16384,32768];constructor(_52){super();this._62();const _72=_52.outputChannelCount[0];this._i4=new Float32Array(_72);this._j4=new Uint32Array(_72);}process(_h2,_i2,parameters){const input=_h2[0];const output=_i2[0];const bypass=parameters.bypass;const gain=parameters.gain;const factor=parameters.factor;
const resolution=parameters.resolution;const mix=parameters.mix;for(let _e2=0;_e2<input.length;++_e2){const _j2=input[_e2];const _k2=output[_e2];for(let _l2=0;_l2<_j2.length;++_l2){_k2[_l2]=_j2[_l2];if(this._j4[_e2]===0)this._i4[_e2]=_j2[_l2];const _33=(factor[_l2]!==undefined)?factor[_l2]:factor[0];++this._j4[_e2];this._j4[_e2]%=_33;const _o2=(bypass[_l2]!==undefined)?bypass[_l2]:bypass[0];if(_o2>0.0){continue;}let _n2=this._i4[_e2];const _43=(gain[_l2]!==undefined)?gain[_l2]:gain[0];_n2*=_43;_n2=Math.max(Math.min(_n2,
1.0),-1.0);const _k4=(resolution[_l2]!==undefined)?resolution[_l2]:resolution[0];const max=(_n2>0.0)?_g4._h4[_k4]-1:_g4._h4[_k4];_n2=Math.round(_n2*max)/max;const _p2=(mix[_l2]!==undefined)?mix[_l2]:mix[0];_k2[_l2]*=(1.0-_p2);_k2[_l2]+=(_n2*_p2);}}return this._q2;}}registerProcessor("bitcrusher-processor",_g4);class _l4 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"rate",automationRate:"a-rate",defaultValue:5.0,
minValue:0.0,maxValue:20.0},{name:"intensity",automationRate:"a-rate",defaultValue:1.0,minValue:0.0,maxValue:1.0},{name:"offset",automationRate:"a-rate",defaultValue:0.0,minValue:0.0,maxValue:1.0},{name:"shape",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:4}];}constructor(_52){super();this._62();const _72=_52.outputChannelCount[0];this._m4=new Array(_72).fill(1.0);this._n4=new Array(_72).fill(0.0);this._o4=new Array(_72).fill(_k3._l3._m3);this._p4=new Array(_72);for(let _e2=0;_e2<_72;++_e2){
this._p4[_e2]=new _L3();this._p4[_e2]._T3(sampleRate);this._p4[_e2]._W3(this._m4[_e2]);this._p4[_e2].__3(this._o4[_e2]);if(_e2%2===1){this._p4[_e2]._X3(this._n4[_e2]);}}}process(_h2,_i2,parameters){const input=_h2[0];const output=_i2[0];const bypass=parameters.bypass;const rate=parameters.rate;const intensity=parameters.intensity;const offset=parameters.offset;const shape=parameters.shape;for(let _e2=0;_e2<input.length;++_e2){const _j2=input[_e2];const _k2=output[_e2];for(let _l2=0;_l2<_j2.length;++_l2){_k2[_l2]=_j2[_l2];
const _k4=(rate[_l2]!==undefined)?rate[_l2]:rate[0];const _q4=(offset[_l2]!==undefined)?offset[_l2]:offset[0];const _r4=(shape[_l2]!==undefined)?shape[_l2]:shape[0];this._s4(_e2,_k4,_q4,_r4);const _t4=this._p4[_e2]._D3();const _o2=(bypass[_l2]!==undefined)?bypass[_l2]:bypass[0];if(_o2>0.0){continue;}const _f2=(intensity[_l2]!==undefined)?intensity[_l2]:intensity[0];const out=_j2[_l2]*_t4*_f2;_k2[_l2]*=(1.0-_f2);_k2[_l2]+=out;}}return this._q2;}_s4(_94,_u4,_Y3,_04){if(_u4!==this._m4[_94]){this._p4[_94]._W3(_u4);
this._m4[_94]=_u4;}if(_Y3!==this._n4[_94]){if(_94%2===1){this._p4[_94]._X3(_Y3);}this._n4[_94]=_Y3;}if(_04!==this._o4[_94]){this._p4[_94].__3(_04);this._o4[_94]=_04;}}}registerProcessor("tremolo-processor",_l4);class _v4{constructor(_a4=1e-3){this.setTime(_a4);}setTime(_a4){this._w4=Math.exp(-1/(_a4*sampleRate));}process(_x4,_y4){return _x4+this._w4*(_y4-_x4);}}class _z4{constructor(_A4,_B4){this._C4=new _v4(_A4);this._D4=new _v4(_B4);this._E4=_A4;this._F4=_B4;}_G4(_a4){if(_a4===this._E4)return;this._C4.setTime(_a4);
this._E4=_a4;}_H4(_a4){if(_a4===this._F4)return;this._D4.setTime(_a4);this._F4=_a4;}process(_x4,_y4){if(_x4>_y4)return this._C4.process(_x4,_y4);else return this._D4.process(_x4,_y4);}}class _I4 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"ingain",automationRate:"a-rate",defaultValue:1,minValue:0},{name:"threshold",automationRate:"a-rate",defaultValue:0.125,minValue:1e-3,maxValue:1},{name:"ratio",
automationRate:"a-rate",defaultValue:4,minValue:1},{name:"attack",automationRate:"a-rate",defaultValue:0.05,minValue:1e-3,maxValue:1e-1},{name:"release",automationRate:"a-rate",defaultValue:0.25,minValue:1e-2,maxValue:1},{name:"outgain",automationRate:"a-rate",defaultValue:1,minValue:0}];}constructor(_J4){super();this._62();const _C4=_I4.parameterDescriptors.find(_K4=>_K4.name==="attack");const _D4=_I4.parameterDescriptors.find(_K4=>_K4.name==="release");this._L4=new _z4(_C4.defaultValue,_D4.defaultValue);
this._M4=0;}process(_N4,_O4,_P4){const input=_N4[0];const output=_O4[0];const bypass=_P4.bypass;const ingain=_P4.ingain;const outgain=_P4.outgain;const threshold=_P4.threshold;const ratio=_P4.ratio;const attack=_P4.attack;const release=_P4.release;if(input.length===0)return this._q2;for(let _l2=0;_l2<input[0].length;++_l2){let _Q4=input.map(_R4=>_R4[_l2]);output.forEach((_R4,_S4)=>{_R4[_l2]=_Q4[_S4];});const _T4=(ingain[_l2]!==undefined)?ingain[_l2]:ingain[0];_Q4=_Q4.map(_U4=>_U4*=_T4);const rect=_Q4.map(_U4=>Math.abs(_U4));
const max=Math.max(...rect);const _V4=_W4(max);const _64=(threshold[_l2]!==undefined)?threshold[_l2]:threshold[0];const _X4=_W4(_64);const _Y4=Math.max(0,_V4-_X4);const _C4=(attack[_l2]!==undefined)?attack[_l2]:attack[0];const _D4=(release[_l2]!==undefined)?release[_l2]:release[0];this._L4._G4(_C4);this._L4._H4(_D4);this._M4=this._L4.process(_Y4,this._M4);const _o2=(bypass[_l2]!==undefined)?bypass[_l2]:bypass[0];if(_o2>0)continue;const _k4=(ratio[_l2]!==undefined)?ratio[_l2]:ratio[0];const _Z4=(this._M4/_k4)-this._M4;
const _43=__4(_Z4);_Q4=_Q4.map(_U4=>_U4*=_43);const _05=(outgain[_l2]!==undefined)?outgain[_l2]:outgain[0];_Q4=_Q4.map(_U4=>_U4*=_05);output.forEach((_R4,_S4)=>{_R4[_l2]=_Q4[_S4];});}return this._q2;}}function _W4(_15){return 20*Math.log10(_15);}function __4(_15){return Math.pow(10,_15/20);}registerProcessor("compressor-processor",_I4);class _25 extends AudioWorkletProcessor{static get parameterDescriptors(){const _03=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,
minValue:0,maxValue:1},{name:"freq",automationRate:"a-rate",defaultValue:Math.min(500.0,_03),minValue:10.0,maxValue:_03},{name:"q",automationRate:"a-rate",defaultValue:1.0,minValue:1.0,maxValue:100.0},{name:"gain",automationRate:"a-rate",defaultValue:1e-2,minValue:1e-6}];}constructor(_52){super();this._62();const _72=_52.outputChannelCount[0];this._G2=0;this._H2=0;this._I2=0;this._J2=0;this._K2=0;this._L2=new Float32Array(_72);this._M2=new Float32Array(_72);this._N2=new Float32Array(_72);this._O2=new Float32Array(_72);
this._13=-1;this._Q2=-1;this._23=-1;}process(_h2,_i2,parameters){const input=_h2[0];const output=_i2[0];const bypass=parameters.bypass;const freq=parameters.freq;const q=parameters.q;const gain=parameters.gain;const _R2=(freq.length===1&&q.length===1&&gain.length===1);if(_R2)this._S2(freq[0],q[0],gain[0]);for(let _e2=0;_e2<input.length;++_e2){const _j2=input[_e2];const _k2=output[_e2];for(let _l2=0;_l2<_j2.length;++_l2){if(_R2===!1){const _33=(freq[_l2]!==undefined)?freq[_l2]:freq[0];const _T2=(q[_l2]!==undefined)?q[_l2]:q[0];
const _43=(gain[_l2]!==undefined)?gain[_l2]:gain[0];this._S2(_33,_T2,_43);}const _U2=this._I2*_j2[_l2]+this._J2*this._L2[_e2]+this._K2*this._M2[_e2]-this._G2*this._N2[_e2]-this._H2*this._O2[_e2];this._M2[_e2]=this._L2[_e2];this._L2[_e2]=_j2[_l2];this._O2[_e2]=this._N2[_e2];this._N2[_e2]=_U2;const _o2=(bypass[_l2]!==undefined)?bypass[_l2]:bypass[0];_k2[_l2]=(_o2>0)?_j2[_l2]:_U2;}}return this._q2;}_S2(_53,_W2,_63){if(_53===this._13&&_W2===this._Q2&&_63===this._23)return;const _X2=2*Math.PI*_53/sampleRate;
const _Y2=Math.cos(_X2);const _73=Math.sqrt(_63);const _d3=_73+1;const _e3=_73-1;const _f3=_d3*_Y2;const _g3=_e3*_Y2;const _h3=_d3-_g3;const _i3=_d3+_g3;const alpha=Math.sin(_X2)/(2*_W2);const _j3=(2*Math.sqrt(_73)*alpha);const _Z2=_i3+_j3;const _G2=-2*(_e3+_f3);const _H2=_i3-_j3;const _I2=_73*(_h3+_j3);const _J2=2*_73*(_e3-_f3);const _K2=_73*(_h3-_j3);this._G2=_G2/_Z2;this._H2=_H2/_Z2;this._I2=_I2/_Z2;this._J2=_J2/_Z2;this._K2=_K2/_Z2;this._13=_53;this._Q2=_W2;this._23=_63;}}registerProcessor("lo-shelf-processor",
_25);