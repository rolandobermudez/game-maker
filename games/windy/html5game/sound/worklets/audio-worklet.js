class _34{constructor(_44){this._54=0;this._64=0;this.feedback=0;this._74=0;this.buffer=new Float32Array(_44);this._84=0;}process(_94){const out=this.buffer[this._84];this._74=(this._74*this._54)+(out*this._64);this.buffer[this._84]=_94+(this._74*this.feedback);++this._84;this._84%=this.buffer.length;return out;}_a4(_b4){this.feedback=Math.min(Math.max(0,_b4),1);}_c4(_d4){this._54=Math.min(Math.max(0,_d4),1);this._64=1-this._54;}}class _e4{constructor(_44){this.feedback=0;this.buffer=new Float32Array(_44);
this._84=0;}process(_94){const out=this.buffer[this._84];this.buffer[this._84]=_94+(out*this.feedback);++this._84;this._84%=this.buffer.length;return(out-_94);}_a4(_b4){this.feedback=Math.min(Math.max(0,_b4),1);}}class _f4 extends AudioWorkletProcessor{static _g4=8;static _h4=4;static _i4=0.015;static _j4=0.4;static _k4=0.28;static _l4=0.7;static _m4=[1116,1188,1277,1356,1422,1491,1557,1617];static _n4=[1139,1211,1300,1379,1445,1514,1580,1640];static _o4=[556,441,341,225];static _p4=[579,464,364,248];static get parameterDescriptors(){
return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"size",automationRate:"a-rate",defaultValue:0.7,minValue:0.0,maxValue:1.0},{name:"damp",automationRate:"a-rate",defaultValue:0.1,minValue:0.0,maxValue:1.0},{name:"mix",automationRate:"a-rate",defaultValue:0.35,minValue:0.0,maxValue:1.0}];}constructor(_q4){super();this._r4();const _s4=_q4.outputChannelCount[0];this._t4=-1;this._u4=-1;this._v4=new Array(_s4);this._w4=new Array(_s4);const _x4=[_f4._m4,_f4._n4];const _y4=[_f4._o4,
_f4._p4];for(let _z4=0;_z4<_s4;++_z4){this._v4[_z4]=new Array(_f4._g4);this._w4[_z4]=new Array(_f4._h4);for(let _A4=0;_A4<_f4._g4;++_A4)this._v4[_z4][_A4]=new _34(_x4[_z4%_x4.length][_A4]);for(let _A4=0;_A4<_f4._h4;++_A4)this._w4[_z4][_A4]=new _e4(_y4[_z4%_y4.length][_A4]);}this._B4(0.5);this._c4(0.5);for(let _z4=0;_z4<_s4;++_z4)for(let _A4=0;_A4<_f4._h4;++_A4)this._w4[_z4][_A4]._a4(0.5);}process(_C4,_D4,parameters){const input=_C4[0];const output=_D4[0];const bypass=parameters.bypass;const size=parameters.size;
const damp=parameters.damp;const mix=parameters.mix;for(let _z4=0;_z4<input.length;++_z4){const _E4=input[_z4];const _F4=output[_z4];for(let _G4=0;_G4<_E4.length;++_G4){const _G4=(size[_G4]!==undefined)?size[_G4]:size[0];const _H4=(damp[_G4]!==undefined)?damp[_G4]:damp[0];this._B4(_G4);this._c4(_H4);_F4[_G4]=_E4[_G4];let out=0;const _I4=_E4[_G4]*_f4._i4;for(let _A4=0;_A4<_f4._g4;++_A4)out+=this._v4[_z4][_A4].process(_I4);for(let _A4=0;_A4<_f4._h4;++_A4)out=this._w4[_z4][_A4].process(out);const _J4=(bypass[_G4]!==undefined)?bypass[_G4]:bypass[0];
if(_J4>0.0){continue;}const _K4=(mix[_G4]!==undefined)?mix[_G4]:mix[0];_F4[_G4]*=(1-_K4);_F4[_G4]+=(out*_K4);}}return this._L4;}_B4(_44){if(_44===this._t4)return;const size=(_44*_f4._k4)+_f4._l4;for(let _z4=0;_z4<this._v4.length;++_z4)for(let _A4=0;_A4<_f4._g4;++_A4)this._v4[_z4][_A4]._a4(size);this._t4=_44;}_c4(_d4){if(_d4===this._u4)return;const damp=_d4*_f4._j4;for(let _z4=0;_z4<this._v4.length;++_z4)for(let _A4=0;_A4<_f4._g4;++_A4)this._v4[_z4][_A4]._c4(damp);this._u4=_d4;}}registerProcessor("reverb1-processor",
_f4);class _M4 extends AudioWorkletProcessor{static get parameterDescriptors(){return [];}constructor(){super();this._r4();}process(_N4,_O4,_P4){const input=_N4[0];const _Q4=_O4[0];const _R4=_O4[1];for(let _z4=0;_z4<input.length;++_z4){const _E4=input[_z4];const _S4=_Q4[_z4];const _T4=_R4[_z4];for(let _G4=0;_G4<_E4.length;++_G4){_S4[_G4]=_E4[_G4];_T4[_G4]=_E4[_G4];}}return this._L4;}}class _U4 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,
minValue:0,maxValue:1}];}constructor(){super();this._r4();}process(_N4,_O4,_P4){const _V4=_N4[0];const _W4=_N4[1];const output=_O4[0];const bypass=_P4.bypass;for(let _z4=0;_z4<_W4.length;++_z4){const _X4=_V4[_z4];const _Y4=_W4[_z4];const _F4=output[_z4];for(let _G4=0;_G4<_X4.length;++_G4){const _J4=(bypass[_G4]!==undefined)?bypass[_G4]:bypass[0];if(_J4>0){_F4[_G4]=_Y4[_G4];}else {_F4[_G4]=_X4[_G4];}}}return this._L4;}}registerProcessor("eq-input",_M4);registerProcessor("eq-output",_U4);class _Z4 extends AudioWorkletProcessor{
static get parameterDescriptors(){const __4=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"cutoff",automationRate:"a-rate",defaultValue:Math.min(500.0,__4),minValue:10.0,maxValue:__4},{name:"q",automationRate:"a-rate",defaultValue:1.5,minValue:1.0,maxValue:100.0}];}constructor(_q4){super();this._r4();const _s4=_q4.outputChannelCount[0];this._05=0;this._15=0;this._25=0;this._35=0;this._45=0;this._55=new Float32Array(_s4);this._65=new Float32Array(_s4);
this._75=new Float32Array(_s4);this._85=new Float32Array(_s4);this._95=-1;this._a5=-1;}process(_C4,_D4,parameters){const input=_C4[0];const output=_D4[0];const bypass=parameters.bypass;const cutoff=parameters.cutoff;const q=parameters.q;const _b5=(cutoff.length===1&&q.length===1);if(_b5)this._c5(cutoff[0],q[0]);for(let _z4=0;_z4<input.length;++_z4){const _E4=input[_z4];const _F4=output[_z4];for(let _G4=0;_G4<_E4.length;++_G4){if(_b5===!1){const _z4=(cutoff[_G4]!==undefined)?cutoff[_G4]:cutoff[0];const _d5=(q[_G4]!==undefined)?q[_G4]:q[0];
this._c5(_z4,_d5);}const _e5=this._25*_E4[_G4]+this._35*this._55[_z4]+this._45*this._65[_z4]-this._05*this._75[_z4]-this._15*this._85[_z4];this._65[_z4]=this._55[_z4];this._55[_z4]=_E4[_G4];this._85[_z4]=this._75[_z4];this._75[_z4]=_e5;const _J4=(bypass[_G4]!==undefined)?bypass[_G4]:bypass[0];_F4[_G4]=(_J4>0)?_E4[_G4]:_e5;}}return this._L4;}_c5(_f5,_g5){if(_f5===this._95&&_g5===this._a5)return;const _h5=2*Math.PI*_f5/sampleRate;const alpha=Math.sin(_h5)/(2*_g5);const _i5=Math.cos(_h5);const _j5=1+alpha;
const _05=-2*_i5;const _15=1-alpha;const _25=(1-_i5)/2;const _35=1-_i5;const _45=(1-_i5)/2;this._05=_05/_j5;this._15=_15/_j5;this._25=_25/_j5;this._35=_35/_j5;this._45=_45/_j5;this._95=_f5;this._a5=_g5;}}registerProcessor("lpf2-processor",_Z4);class _k5 extends AudioWorkletProcessor{static get parameterDescriptors(){const _l5=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"freq",automationRate:"a-rate",defaultValue:Math.min(1500.0,
_l5),minValue:10.0,maxValue:_l5},{name:"q",automationRate:"a-rate",defaultValue:1.0,minValue:1.0,maxValue:100.0},{name:"gain",automationRate:"a-rate",defaultValue:1e-2,minValue:1e-6}];}constructor(_q4){super();this._r4();const _s4=_q4.outputChannelCount[0];this._05=0;this._15=0;this._25=0;this._35=0;this._45=0;this._55=new Float32Array(_s4);this._65=new Float32Array(_s4);this._75=new Float32Array(_s4);this._85=new Float32Array(_s4);this._m5=-1;this._a5=-1;this._n5=-1;}process(_C4,_D4,parameters){const input=_C4[0];
const output=_D4[0];const bypass=parameters.bypass;const freq=parameters.freq;const q=parameters.q;const gain=parameters.gain;const _b5=(freq.length===1&&q.length===1&&gain.length===1);if(_b5)this._c5(freq[0],q[0],gain[0]);for(let _z4=0;_z4<input.length;++_z4){const _E4=input[_z4];const _F4=output[_z4];for(let _G4=0;_G4<_E4.length;++_G4){if(_b5===!1){const _o5=(freq[_G4]!==undefined)?freq[_G4]:freq[0];const _d5=(q[_G4]!==undefined)?q[_G4]:q[0];const _p5=(gain[_G4]!==undefined)?gain[_G4]:gain[0];this._c5(_o5,
_d5,_p5);}const _e5=this._25*_E4[_G4]+this._35*this._55[_z4]+this._45*this._65[_z4]-this._05*this._75[_z4]-this._15*this._85[_z4];this._65[_z4]=this._55[_z4];this._55[_z4]=_E4[_G4];this._85[_z4]=this._75[_z4];this._75[_z4]=_e5;const _J4=(bypass[_G4]!==undefined)?bypass[_G4]:bypass[0];_F4[_G4]=(_J4>0)?_E4[_G4]:_e5;}}return this._L4;}_c5(_q5,_g5,_r5){if(_q5===this._m5&&_g5===this._a5&&_r5===this._n5)return;const _h5=2*Math.PI*_q5/sampleRate;const _i5=Math.cos(_h5);const _s5=Math.sqrt(_r5);const alpha=Math.sin(_h5)/(2*_g5);
const _t5=alpha/_s5;const _u5=alpha*_s5;const _j5=1+_t5;const _05=-2*_i5;const _15=1-_t5;const _25=1+_u5;const _35=_05;const _45=1-_u5;this._05=_05/_j5;this._15=_15/_j5;this._25=_25/_j5;this._35=_35/_j5;this._45=_45/_j5;this._m5=_q5;this._a5=_g5;this._n5=_r5;}}registerProcessor("peak-eq-processor",_k5);class _v5 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"gain",automationRate:"a-rate",defaultValue:0.5,
minValue:0.0}];}constructor(){super();this._r4();}process(_C4,_D4,parameters){const input=_C4[0];const output=_D4[0];const bypass=parameters.bypass;const gain=parameters.gain;for(let _z4=0;_z4<input.length;++_z4){const _E4=input[_z4];const _F4=output[_z4];for(let _G4=0;_G4<_E4.length;++_G4){_F4[_G4]=_E4[_G4];const _J4=(bypass[_G4]!==undefined)?bypass[_G4]:bypass[0];if(_J4>0.0){continue;}const _p5=(gain[_G4]!==undefined)?gain[_G4]:gain[0];_F4[_G4]*=_p5;}}return this._L4;}}registerProcessor("gain-processor",
_v5);class _w5 extends AudioWorkletProcessor{static get parameterDescriptors(){const __4=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"cutoff",automationRate:"a-rate",defaultValue:Math.min(1500.0,__4),minValue:10.0,maxValue:__4},{name:"q",automationRate:"a-rate",defaultValue:1.5,minValue:1.0,maxValue:100.0}];}constructor(_q4){super();this._r4();const _s4=_q4.outputChannelCount[0];this._05=0;this._15=0;this._25=0;this._35=0;this._45=0;
this._55=new Float32Array(_s4);this._65=new Float32Array(_s4);this._75=new Float32Array(_s4);this._85=new Float32Array(_s4);this._95=-1;this._a5=-1;}process(_C4,_D4,parameters){const input=_C4[0];const output=_D4[0];const bypass=parameters.bypass;const cutoff=parameters.cutoff;const q=parameters.q;const _b5=(cutoff.length===1&&q.length===1);if(_b5)this._c5(cutoff[0],q[0]);for(let _z4=0;_z4<input.length;++_z4){const _E4=input[_z4];const _F4=output[_z4];for(let _G4=0;_G4<_E4.length;++_G4){if(_b5===!1){const _z4=(cutoff[_G4]!==undefined)?cutoff[_G4]:cutoff[0];
const _d5=(q[_G4]!==undefined)?q[_G4]:q[0];this._c5(_z4,_d5);}const _e5=this._25*_E4[_G4]+this._35*this._55[_z4]+this._45*this._65[_z4]-this._05*this._75[_z4]-this._15*this._85[_z4];this._65[_z4]=this._55[_z4];this._55[_z4]=_E4[_G4];this._85[_z4]=this._75[_z4];this._75[_z4]=_e5;const _J4=(bypass[_G4]!==undefined)?bypass[_G4]:bypass[0];_F4[_G4]=(_J4>0)?_E4[_G4]:_e5;}}return this._L4;}_c5(_f5,_g5){if(_f5===this._95&&_g5===this._a5)return;const _h5=2*Math.PI*_f5/sampleRate;const alpha=Math.sin(_h5)/(2*_g5);
const _i5=Math.cos(_h5);const _j5=1+alpha;const _05=-2*_i5;const _15=1-alpha;const _25=(1+_i5)/2;const _35=-1-_i5;const _45=(1+_i5)/2;this._05=_05/_j5;this._15=_15/_j5;this._25=_25/_j5;this._35=_35/_j5;this._45=_45/_j5;this._95=_f5;this._a5=_g5;}}registerProcessor("hpf2-processor",_w5);class _x5 extends AudioWorkletProcessor{static get parameterDescriptors(){const _l5=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"freq",automationRate:"a-rate",
defaultValue:Math.min(5000.0,_l5),minValue:10.0,maxValue:_l5},{name:"q",automationRate:"a-rate",defaultValue:1.0,minValue:1.0,maxValue:100.0},{name:"gain",automationRate:"a-rate",defaultValue:1e-2,minValue:1e-6}];}constructor(_q4){super();this._r4();const _s4=_q4.outputChannelCount[0];this._05=0;this._15=0;this._25=0;this._35=0;this._45=0;this._55=new Float32Array(_s4);this._65=new Float32Array(_s4);this._75=new Float32Array(_s4);this._85=new Float32Array(_s4);this._m5=-1;this._a5=-1;this._n5=-1;}process(_C4,
_D4,parameters){const input=_C4[0];const output=_D4[0];const bypass=parameters.bypass;const freq=parameters.freq;const q=parameters.q;const gain=parameters.gain;const _b5=(freq.length===1&&q.length===1&&gain.length===1);if(_b5)this._c5(freq[0],q[0],gain[0]);for(let _z4=0;_z4<input.length;++_z4){const _E4=input[_z4];const _F4=output[_z4];for(let _G4=0;_G4<_E4.length;++_G4){if(_b5===!1){const _o5=(freq[_G4]!==undefined)?freq[_G4]:freq[0];const _d5=(q[_G4]!==undefined)?q[_G4]:q[0];const _p5=(gain[_G4]!==undefined)?gain[_G4]:gain[0];
this._c5(_o5,_d5,_p5);}const _e5=this._25*_E4[_G4]+this._35*this._55[_z4]+this._45*this._65[_z4]-this._05*this._75[_z4]-this._15*this._85[_z4];this._65[_z4]=this._55[_z4];this._55[_z4]=_E4[_G4];this._85[_z4]=this._75[_z4];this._75[_z4]=_e5;const _J4=(bypass[_G4]!==undefined)?bypass[_G4]:bypass[0];_F4[_G4]=(_J4>0)?_E4[_G4]:_e5;}}return this._L4;}_c5(_q5,_g5,_r5){if(_q5===this._m5&&_g5===this._a5&&_r5===this._n5)return;const _h5=2*Math.PI*_q5/sampleRate;const _i5=Math.cos(_h5);const _s5=Math.sqrt(_r5);const _y5=_s5+1;
const _z5=_s5-1;const _A5=_y5*_i5;const _B5=_z5*_i5;const _C5=_y5-_B5;const _D5=_y5+_B5;const alpha=Math.sin(_h5)/(2*_g5);const _E5=(2*Math.sqrt(_s5)*alpha);const _j5=_C5+_E5;const _05=2*(_z5-_A5);const _15=_C5-_E5;const _25=_s5*(_D5+_E5);const _35=-2*_s5*(_z5+_A5);const _45=_s5*(_D5-_E5);this._05=_05/_j5;this._15=_15/_j5;this._25=_25/_j5;this._35=_35/_j5;this._45=_45/_j5;this._m5=_q5;this._a5=_g5;this._n5=_r5;}}registerProcessor("hi-shelf-processor",_x5);function _F5(){}_F5._G5={_H5:0,_I5:1,_J5:2,_K5:3,_L5:4,
_M5:5};_F5._N5=function(_O5){return 1.0-_O5;};_F5._P5=function(_O5){return _O5;};_F5._Q5=function(_O5){return 0.5*(Math.sin((_O5*2.0*Math.PI)-(Math.PI/2.0))+1.0);};_F5._R5=function(_O5){if(_O5<0.5){return 0.0;}return 1.0;};_F5._S5=function(_O5){if(_O5<0.5){return 2.0*_O5;}return 2.0-(2.0*_O5);};_F5._T5=[_F5._N5,_F5._P5,_F5._Q5,_F5._R5,_F5._S5];_U5._V5=512;_U5._W5=1.0/_U5._V5;function _U5(_X5){this.data=new Float32Array(_U5._V5);for(let _A4=0;_A4<_U5._V5;++_A4){this.data[_A4]=_X5(_A4*_U5._W5);}}_U5.prototype._Y5=function(_O5){
_O5=Math.max(0.0,_O5);_O5=Math.min(_O5,1.0);const _Z5=_O5*_U5._V5;const __5=~~_Z5;const _06=_Z5-__5;let _16=__5;let _26=_16+1;if(_16>=_U5._V5){_16-=_U5._V5;}if(_26>=_U5._V5){_26-=_U5._V5;}const _36=this.data[_16];const _46=this.data[_26];return _36+(_46-_36)*_06;};;_56._66=[];_56._76=!1;_56._86=0.0;_56._l5=20.0;function _56(){this._96=48000;this.shape=_F5._G5._J5;this.freq=1.0;this._a6=0.0;this._W5=0.0;this._b6=0.0;if(_56._76==true){return;}for(let _A4=0;_A4<_F5._G5._M5;++_A4){_56._66[_A4]=new _U5(_F5._T5[_A4]);
}_56._76=true;}_56._c6=function(){return(_56._76==!0);};_56.prototype._d6=function(_e6){this._96=_e6;this._f6();};;_56.prototype._g6=function(_q5){_q5=Math.max(_56._86,_q5);_q5=Math.min(_q5,_56._l5);this.freq=_q5;this._f6();};;_56.prototype._h6=function(_i6){_i6=Math.max(0.0,_i6);_i6=Math.min(_i6,1.0);const _j6=_i6-this._b6;this._b6=_i6;this._a6+=_j6;while(this._a6>=1.0){this._a6-=1.0;}while(this._a6<0.0){this._a6+=1.0;}};;_56.prototype._k6=function(_l6){_l6=Math.max(0,_l6);_l6=Math.min(_l6,_F5._G5._M5-1);
this.shape=_l6;};;_56.prototype._Y5=function(){const _m6=_56._66[this.shape]._Y5(this._a6);this._a6+=this._W5;while(this._a6>=1.0){this._a6-=1.0;}return _m6;};;_56.prototype._f6=function(){this._W5=this.freq/this._96;};;class _n6 extends AudioWorkletProcessor{static _o6=5.0;static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"time",automationRate:"a-rate",defaultValue:0.2,minValue:0.0,maxValue:_n6._o6},{name:"feedback",automationRate:"a-rate",
defaultValue:0.5,minValue:0.0,maxValue:1.0},{name:"mix",automationRate:"a-rate",defaultValue:0.35,minValue:0.0,maxValue:1.0}];}constructor(_q4){super();this._r4();const _s4=_q4.outputChannelCount[0];const _p6=(_n6._o6*sampleRate)+1;this.buffer=new Array(_s4);this._q6=new Uint32Array(_s4);for(let _z4=0;_z4<_s4;++_z4)this.buffer[_z4]=new Float32Array(_p6);}process(_C4,_D4,parameters){const input=_C4[0];const output=_D4[0];const bypass=parameters.bypass;const time=parameters.time;const feedback=parameters.feedback;
const mix=parameters.mix;for(let _z4=0;_z4<input.length;++_z4){const _E4=input[_z4];const _F4=output[_z4];for(let _G4=0;_G4<_E4.length;++_G4){_F4[_G4]=_E4[_G4];const _r6=(time[_G4]!==undefined)?time[_G4]:time[0];const _s6=this._Y5(_z4,_r6);const _o5=(feedback[_G4]!==undefined)?feedback[_G4]:feedback[0];const _t6=_E4[_G4]+(_s6*_o5);this.write(_z4,_t6);const _J4=(bypass[_G4]!==undefined)?bypass[_G4]:bypass[0];if(_J4>0.0){continue;}const _K4=(mix[_G4]!==undefined)?mix[_G4]:mix[0];_F4[_G4]*=(1-_K4);_F4[_G4]+=(_s6*_K4);
}}return this._L4;}_Y5(_u6,_v6){const _w6=_v6*sampleRate;let _16=(this._q6[_u6]-~~_w6);let _26=(_16-1);while(_16<0)_16+=this.buffer[_u6].length;while(_26<0)_26+=this.buffer[_u6].length;const _x6=_w6-~~_w6;const _36=this.buffer[_u6][_16];const _46=this.buffer[_u6][_26];return _36+(_46-_36)*_x6;}write(_u6,_94){++this._q6[_u6];this._q6[_u6]%=this.buffer[_u6].length;this.buffer[_u6][this._q6[_u6]]=_94;}}registerProcessor("delay-processor",_n6);AudioWorkletProcessor.prototype._r4=function(){this._L4=true;this.port.onmessage=(_y6)=>{
if(_y6.data==="kill")this._L4=false;};};;class _z6 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1}];}constructor(){super();this._r4();}process(_C4,_D4,parameters){const input=_C4[0];const bypass=parameters.bypass;for(let _z4=0;_z4<input.length;++_z4){const _E4=input[_z4];for(let _G4=0;_G4<_E4.length;++_G4){const _J4=(bypass[_G4]!==undefined)?bypass[_G4]:bypass[0];_D4[_J4][_z4][_G4]=_E4[_G4];}}return this._L4;
}}class _A6 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"gain",automationRate:"a-rate",defaultValue:1,minValue:0}];}constructor(){super();this._r4();}process(_C4,_D4,parameters){const _V4=_C4[0];const _W4=_C4[1];const output=_D4[0];const gain=parameters.gain;for(let _z4=0;_z4<_W4.length;++_z4){const _E4=_W4[_z4];const _F4=output[_z4];for(let _G4=0;_G4<_E4.length;++_G4)_F4[_G4]=_E4[_G4];}for(let _z4=0;_z4<_V4.length;++_z4){const _E4=_V4[_z4];const _F4=output[_z4];for(let _G4=0;_G4<_E4.length;
++_G4){const _p5=(gain[_G4]!==undefined)?gain[_G4]:gain[0];_F4[_G4]+=_E4[_G4]*_p5;}}return this._L4;}}registerProcessor("audio-bus-input",_z6);registerProcessor("audio-bus-output",_A6);class _B6 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"gain",automationRate:"a-rate",defaultValue:1.0,minValue:0.0},{name:"factor",automationRate:"a-rate",defaultValue:20,minValue:1,maxValue:100},{name:"resolution",
automationRate:"a-rate",defaultValue:8,minValue:2,maxValue:16},{name:"mix",automationRate:"a-rate",defaultValue:0.8,minValue:0.0,maxValue:1.0}];}static _C6=[undefined,undefined,2,4,8,16,32,64,128,256,512,1024,2048,4096,8192,16384,32768];constructor(_q4){super();this._r4();const _s4=_q4.outputChannelCount[0];this._D6=new Float32Array(_s4);this._E6=new Uint32Array(_s4);}process(_C4,_D4,parameters){const input=_C4[0];const output=_D4[0];const bypass=parameters.bypass;const gain=parameters.gain;const factor=parameters.factor;
const resolution=parameters.resolution;const mix=parameters.mix;for(let _z4=0;_z4<input.length;++_z4){const _E4=input[_z4];const _F4=output[_z4];for(let _G4=0;_G4<_E4.length;++_G4){_F4[_G4]=_E4[_G4];if(this._E6[_z4]===0)this._D6[_z4]=_E4[_G4];const _o5=(factor[_G4]!==undefined)?factor[_G4]:factor[0];++this._E6[_z4];this._E6[_z4]%=_o5;const _J4=(bypass[_G4]!==undefined)?bypass[_G4]:bypass[0];if(_J4>0.0){continue;}let _I4=this._D6[_z4];const _p5=(gain[_G4]!==undefined)?gain[_G4]:gain[0];_I4*=_p5;_I4=Math.max(Math.min(_I4,
1.0),-1.0);const _F6=(resolution[_G4]!==undefined)?resolution[_G4]:resolution[0];const max=(_I4>0.0)?_B6._C6[_F6]-1:_B6._C6[_F6];_I4=Math.round(_I4*max)/max;const _K4=(mix[_G4]!==undefined)?mix[_G4]:mix[0];_F4[_G4]*=(1.0-_K4);_F4[_G4]+=(_I4*_K4);}}return this._L4;}}registerProcessor("bitcrusher-processor",_B6);class _G6 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"rate",automationRate:"a-rate",defaultValue:5.0,
minValue:0.0,maxValue:20.0},{name:"intensity",automationRate:"a-rate",defaultValue:1.0,minValue:0.0,maxValue:1.0},{name:"offset",automationRate:"a-rate",defaultValue:0.0,minValue:0.0,maxValue:1.0},{name:"shape",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:4}];}constructor(_q4){super();this._r4();const _s4=_q4.outputChannelCount[0];this._H6=new Array(_s4).fill(1.0);this._I6=new Array(_s4).fill(0.0);this._J6=new Array(_s4).fill(_F5._G5._H5);this._K6=new Array(_s4);for(let _z4=0;_z4<_s4;++_z4){
this._K6[_z4]=new _56();this._K6[_z4]._d6(sampleRate);this._K6[_z4]._g6(this._H6[_z4]);this._K6[_z4]._k6(this._J6[_z4]);if(_z4%2===1){this._K6[_z4]._h6(this._I6[_z4]);}}}process(_C4,_D4,parameters){const input=_C4[0];const output=_D4[0];const bypass=parameters.bypass;const rate=parameters.rate;const intensity=parameters.intensity;const offset=parameters.offset;const shape=parameters.shape;for(let _z4=0;_z4<input.length;++_z4){const _E4=input[_z4];const _F4=output[_z4];for(let _G4=0;_G4<_E4.length;++_G4){_F4[_G4]=_E4[_G4];
const _F6=(rate[_G4]!==undefined)?rate[_G4]:rate[0];const _L6=(offset[_G4]!==undefined)?offset[_G4]:offset[0];const _M6=(shape[_G4]!==undefined)?shape[_G4]:shape[0];this._N6(_z4,_F6,_L6,_M6);const _O6=this._K6[_z4]._Y5();const _J4=(bypass[_G4]!==undefined)?bypass[_G4]:bypass[0];if(_J4>0.0){continue;}const _A4=(intensity[_G4]!==undefined)?intensity[_G4]:intensity[0];const out=_E4[_G4]*_O6*_A4;_F4[_G4]*=(1.0-_A4);_F4[_G4]+=out;}}return this._L4;}_N6(_u6,_P6,_i6,_l6){if(_P6!==this._H6[_u6]){this._K6[_u6]._g6(_P6);
this._H6[_u6]=_P6;}if(_i6!==this._I6[_u6]){if(_u6%2===1){this._K6[_u6]._h6(_i6);}this._I6[_u6]=_i6;}if(_l6!==this._J6[_u6]){this._K6[_u6]._k6(_l6);this._J6[_u6]=_l6;}}}registerProcessor("tremolo-processor",_G6);class _Q6{constructor(_v6=1e-3){this.setTime(_v6);}setTime(_v6){this._R6=Math.exp(-1/(_v6*sampleRate));}process(_S6,_T6){return _S6+this._R6*(_T6-_S6);}}class _U6{constructor(_V6,_W6){this._X6=new _Q6(_V6);this._Y6=new _Q6(_W6);this._Z6=_V6;this.__6=_W6;}_07(_v6){if(_v6===this._Z6)return;this._X6.setTime(_v6);
this._Z6=_v6;}_17(_v6){if(_v6===this.__6)return;this._Y6.setTime(_v6);this.__6=_v6;}process(_S6,_T6){if(_S6>_T6)return this._X6.process(_S6,_T6);else return this._Y6.process(_S6,_T6);}}class _27 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"ingain",automationRate:"a-rate",defaultValue:1,minValue:0},{name:"threshold",automationRate:"a-rate",defaultValue:0.125,minValue:1e-3,maxValue:1},{name:"ratio",
automationRate:"a-rate",defaultValue:4,minValue:1},{name:"attack",automationRate:"a-rate",defaultValue:0.05,minValue:1e-3,maxValue:1e-1},{name:"release",automationRate:"a-rate",defaultValue:0.25,minValue:1e-2,maxValue:1},{name:"outgain",automationRate:"a-rate",defaultValue:1,minValue:0}];}constructor(_37){super();this._r4();const _X6=_27.parameterDescriptors.find(_47=>_47.name==="attack");const _Y6=_27.parameterDescriptors.find(_47=>_47.name==="release");this._57=new _U6(_X6.defaultValue,_Y6.defaultValue);
this._67=0;}process(_77,_87,_97){const input=_77[0];const output=_87[0];const bypass=_97.bypass;const ingain=_97.ingain;const outgain=_97.outgain;const threshold=_97.threshold;const ratio=_97.ratio;const attack=_97.attack;const release=_97.release;if(input.length===0)return this._L4;for(let _G4=0;_G4<input[0].length;++_G4){let _a7=input.map(_b7=>_b7[_G4]);output.forEach((_b7,_c7)=>{_b7[_G4]=_a7[_c7];});const _d7=(ingain[_G4]!==undefined)?ingain[_G4]:ingain[0];_a7=_a7.map(_e7=>_e7*=_d7);const rect=_a7.map(_e7=>Math.abs(_e7));
const max=Math.max(...rect);const _f7=_g7(max);const _r6=(threshold[_G4]!==undefined)?threshold[_G4]:threshold[0];const _h7=_g7(_r6);const _i7=Math.max(0,_f7-_h7);const _X6=(attack[_G4]!==undefined)?attack[_G4]:attack[0];const _Y6=(release[_G4]!==undefined)?release[_G4]:release[0];this._57._07(_X6);this._57._17(_Y6);this._67=this._57.process(_i7,this._67);const _J4=(bypass[_G4]!==undefined)?bypass[_G4]:bypass[0];if(_J4>0)continue;const _F6=(ratio[_G4]!==undefined)?ratio[_G4]:ratio[0];const _j7=(this._67/_F6)-this._67;
const _p5=_k7(_j7);_a7=_a7.map(_e7=>_e7*=_p5);const _l7=(outgain[_G4]!==undefined)?outgain[_G4]:outgain[0];_a7=_a7.map(_e7=>_e7*=_l7);output.forEach((_b7,_c7)=>{_b7[_G4]=_a7[_c7];});}return this._L4;}}function _g7(_m7){return 20*Math.log10(_m7);}function _k7(_m7){return Math.pow(10,_m7/20);}registerProcessor("compressor-processor",_27);class _n7 extends AudioWorkletProcessor{static get parameterDescriptors(){const _l5=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,
minValue:0,maxValue:1},{name:"freq",automationRate:"a-rate",defaultValue:Math.min(500.0,_l5),minValue:10.0,maxValue:_l5},{name:"q",automationRate:"a-rate",defaultValue:1.0,minValue:1.0,maxValue:100.0},{name:"gain",automationRate:"a-rate",defaultValue:1e-2,minValue:1e-6}];}constructor(_q4){super();this._r4();const _s4=_q4.outputChannelCount[0];this._05=0;this._15=0;this._25=0;this._35=0;this._45=0;this._55=new Float32Array(_s4);this._65=new Float32Array(_s4);this._75=new Float32Array(_s4);this._85=new Float32Array(_s4);
this._m5=-1;this._a5=-1;this._n5=-1;}process(_C4,_D4,parameters){const input=_C4[0];const output=_D4[0];const bypass=parameters.bypass;const freq=parameters.freq;const q=parameters.q;const gain=parameters.gain;const _b5=(freq.length===1&&q.length===1&&gain.length===1);if(_b5)this._c5(freq[0],q[0],gain[0]);for(let _z4=0;_z4<input.length;++_z4){const _E4=input[_z4];const _F4=output[_z4];for(let _G4=0;_G4<_E4.length;++_G4){if(_b5===!1){const _o5=(freq[_G4]!==undefined)?freq[_G4]:freq[0];const _d5=(q[_G4]!==undefined)?q[_G4]:q[0];
const _p5=(gain[_G4]!==undefined)?gain[_G4]:gain[0];this._c5(_o5,_d5,_p5);}const _e5=this._25*_E4[_G4]+this._35*this._55[_z4]+this._45*this._65[_z4]-this._05*this._75[_z4]-this._15*this._85[_z4];this._65[_z4]=this._55[_z4];this._55[_z4]=_E4[_G4];this._85[_z4]=this._75[_z4];this._75[_z4]=_e5;const _J4=(bypass[_G4]!==undefined)?bypass[_G4]:bypass[0];_F4[_G4]=(_J4>0)?_E4[_G4]:_e5;}}return this._L4;}_c5(_q5,_g5,_r5){if(_q5===this._m5&&_g5===this._a5&&_r5===this._n5)return;const _h5=2*Math.PI*_q5/sampleRate;
const _i5=Math.cos(_h5);const _s5=Math.sqrt(_r5);const _y5=_s5+1;const _z5=_s5-1;const _A5=_y5*_i5;const _B5=_z5*_i5;const _C5=_y5-_B5;const _D5=_y5+_B5;const alpha=Math.sin(_h5)/(2*_g5);const _E5=(2*Math.sqrt(_s5)*alpha);const _j5=_D5+_E5;const _05=-2*(_z5+_A5);const _15=_D5-_E5;const _25=_s5*(_C5+_E5);const _35=2*_s5*(_z5-_A5);const _45=_s5*(_C5-_E5);this._05=_05/_j5;this._15=_15/_j5;this._25=_25/_j5;this._35=_35/_j5;this._45=_45/_j5;this._m5=_q5;this._a5=_g5;this._n5=_r5;}}registerProcessor("lo-shelf-processor",
_n7);