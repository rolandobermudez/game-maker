class _23{constructor(_33){this._43=0;this._53=0;this.feedback=0;this._63=0;this.buffer=new Float32Array(_33);this._73=0;}process(_83){const out=this.buffer[this._73];this._63=(this._63*this._43)+(out*this._53);this.buffer[this._73]=_83+(this._63*this.feedback);++this._73;this._73%=this.buffer.length;return out;}_93(_a3){this.feedback=Math.min(Math.max(0,_a3),1);}_b3(_c3){this._43=Math.min(Math.max(0,_c3),1);this._53=1-this._43;}}class _d3{constructor(_33){this.feedback=0;this.buffer=new Float32Array(_33);
this._73=0;}process(_83){const out=this.buffer[this._73];this.buffer[this._73]=_83+(out*this.feedback);++this._73;this._73%=this.buffer.length;return(out-_83);}_93(_a3){this.feedback=Math.min(Math.max(0,_a3),1);}}class _e3 extends AudioWorkletProcessor{static _f3=8;static _g3=4;static _h3=0.015;static _i3=0.4;static _j3=0.28;static _k3=0.7;static _l3=[1116,1188,1277,1356,1422,1491,1557,1617];static _m3=[1139,1211,1300,1379,1445,1514,1580,1640];static _n3=[556,441,341,225];static _o3=[579,464,364,248];static get parameterDescriptors(){
return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"size",automationRate:"a-rate",defaultValue:0.7,minValue:0.0,maxValue:1.0},{name:"damp",automationRate:"a-rate",defaultValue:0.1,minValue:0.0,maxValue:1.0},{name:"mix",automationRate:"a-rate",defaultValue:0.35,minValue:0.0,maxValue:1.0}];}constructor(_p3){super();this._q3();const _r3=_p3.outputChannelCount[0];this._s3=-1;this._t3=-1;this._u3=new Array(_r3);this._v3=new Array(_r3);const _w3=[_e3._l3,_e3._m3];const _x3=[_e3._n3,
_e3._o3];for(let _y3=0;_y3<_r3;++_y3){this._u3[_y3]=new Array(_e3._f3);this._v3[_y3]=new Array(_e3._g3);for(let _z3=0;_z3<_e3._f3;++_z3)this._u3[_y3][_z3]=new _23(_w3[_y3%_w3.length][_z3]);for(let _z3=0;_z3<_e3._g3;++_z3)this._v3[_y3][_z3]=new _d3(_x3[_y3%_x3.length][_z3]);}this._A3(0.5);this._b3(0.5);for(let _y3=0;_y3<_r3;++_y3)for(let _z3=0;_z3<_e3._g3;++_z3)this._v3[_y3][_z3]._93(0.5);}process(_B3,_C3,parameters){const input=_B3[0];const output=_C3[0];const bypass=parameters.bypass;const size=parameters.size;
const damp=parameters.damp;const mix=parameters.mix;for(let _y3=0;_y3<input.length;++_y3){const _D3=input[_y3];const _E3=output[_y3];for(let _F3=0;_F3<_D3.length;++_F3){const _F3=(size[_F3]!==undefined)?size[_F3]:size[0];const _G3=(damp[_F3]!==undefined)?damp[_F3]:damp[0];this._A3(_F3);this._b3(_G3);_E3[_F3]=_D3[_F3];let out=0;const _H3=_D3[_F3]*_e3._h3;for(let _z3=0;_z3<_e3._f3;++_z3)out+=this._u3[_y3][_z3].process(_H3);for(let _z3=0;_z3<_e3._g3;++_z3)out=this._v3[_y3][_z3].process(out);const _I3=(bypass[_F3]!==undefined)?bypass[_F3]:bypass[0];
if(_I3>0.0){continue;}const _J3=(mix[_F3]!==undefined)?mix[_F3]:mix[0];_E3[_F3]*=(1-_J3);_E3[_F3]+=(out*_J3);}}return this._K3;}_A3(_33){if(_33===this._s3)return;const size=(_33*_e3._j3)+_e3._k3;for(let _y3=0;_y3<this._u3.length;++_y3)for(let _z3=0;_z3<_e3._f3;++_z3)this._u3[_y3][_z3]._93(size);this._s3=_33;}_b3(_c3){if(_c3===this._t3)return;const damp=_c3*_e3._i3;for(let _y3=0;_y3<this._u3.length;++_y3)for(let _z3=0;_z3<_e3._f3;++_z3)this._u3[_y3][_z3]._b3(damp);this._t3=_c3;}}registerProcessor("reverb1-processor",
_e3);class _L3 extends AudioWorkletProcessor{static get parameterDescriptors(){return [];}constructor(){super();this._q3();}process(_M3,_N3,_O3){const input=_M3[0];const _P3=_N3[0];const _Q3=_N3[1];for(let _y3=0;_y3<input.length;++_y3){const _D3=input[_y3];const _R3=_P3[_y3];const _S3=_Q3[_y3];for(let _F3=0;_F3<_D3.length;++_F3){_R3[_F3]=_D3[_F3];_S3[_F3]=_D3[_F3];}}return this._K3;}}class _T3 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,
minValue:0,maxValue:1}];}constructor(){super();this._q3();}process(_M3,_N3,_O3){const _U3=_M3[0];const _V3=_M3[1];const output=_N3[0];const bypass=_O3.bypass;for(let _y3=0;_y3<_V3.length;++_y3){const _W3=_U3[_y3];const _X3=_V3[_y3];const _E3=output[_y3];for(let _F3=0;_F3<_W3.length;++_F3){const _I3=(bypass[_F3]!==undefined)?bypass[_F3]:bypass[0];if(_I3>0){_E3[_F3]=_X3[_F3];}else {_E3[_F3]=_W3[_F3];}}}return this._K3;}}registerProcessor("eq-input",_L3);registerProcessor("eq-output",_T3);class _Y3 extends AudioWorkletProcessor{
static get parameterDescriptors(){const _Z3=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"cutoff",automationRate:"a-rate",defaultValue:Math.min(500.0,_Z3),minValue:10.0,maxValue:_Z3},{name:"q",automationRate:"a-rate",defaultValue:1.5,minValue:1.0,maxValue:100.0}];}constructor(_p3){super();this._q3();const _r3=_p3.outputChannelCount[0];this.__3=0;this._04=0;this._14=0;this._24=0;this._34=0;this._44=new Float32Array(_r3);this._54=new Float32Array(_r3);
this._64=new Float32Array(_r3);this._74=new Float32Array(_r3);this._84=-1;this._94=-1;}process(_B3,_C3,parameters){const input=_B3[0];const output=_C3[0];const bypass=parameters.bypass;const cutoff=parameters.cutoff;const q=parameters.q;const _a4=(cutoff.length===1&&q.length===1);if(_a4)this._b4(cutoff[0],q[0]);for(let _y3=0;_y3<input.length;++_y3){const _D3=input[_y3];const _E3=output[_y3];for(let _F3=0;_F3<_D3.length;++_F3){if(_a4===!1){const _y3=(cutoff[_F3]!==undefined)?cutoff[_F3]:cutoff[0];const _c4=(q[_F3]!==undefined)?q[_F3]:q[0];
this._b4(_y3,_c4);}const _d4=this._14*_D3[_F3]+this._24*this._44[_y3]+this._34*this._54[_y3]-this.__3*this._64[_y3]-this._04*this._74[_y3];this._54[_y3]=this._44[_y3];this._44[_y3]=_D3[_F3];this._74[_y3]=this._64[_y3];this._64[_y3]=_d4;const _I3=(bypass[_F3]!==undefined)?bypass[_F3]:bypass[0];_E3[_F3]=(_I3>0)?_D3[_F3]:_d4;}}return this._K3;}_b4(_e4,_f4){if(_e4===this._84&&_f4===this._94)return;const _g4=2*Math.PI*_e4/sampleRate;const alpha=Math.sin(_g4)/(2*_f4);const _h4=Math.cos(_g4);const _i4=1+alpha;
const __3=-2*_h4;const _04=1-alpha;const _14=(1-_h4)/2;const _24=1-_h4;const _34=(1-_h4)/2;this.__3=__3/_i4;this._04=_04/_i4;this._14=_14/_i4;this._24=_24/_i4;this._34=_34/_i4;this._84=_e4;this._94=_f4;}}registerProcessor("lpf2-processor",_Y3);class _j4 extends AudioWorkletProcessor{static get parameterDescriptors(){const _k4=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"freq",automationRate:"a-rate",defaultValue:Math.min(1500.0,
_k4),minValue:10.0,maxValue:_k4},{name:"q",automationRate:"a-rate",defaultValue:1.0,minValue:1.0,maxValue:100.0},{name:"gain",automationRate:"a-rate",defaultValue:1e-2,minValue:1e-6}];}constructor(_p3){super();this._q3();const _r3=_p3.outputChannelCount[0];this.__3=0;this._04=0;this._14=0;this._24=0;this._34=0;this._44=new Float32Array(_r3);this._54=new Float32Array(_r3);this._64=new Float32Array(_r3);this._74=new Float32Array(_r3);this._l4=-1;this._94=-1;this._m4=-1;}process(_B3,_C3,parameters){const input=_B3[0];
const output=_C3[0];const bypass=parameters.bypass;const freq=parameters.freq;const q=parameters.q;const gain=parameters.gain;const _a4=(freq.length===1&&q.length===1&&gain.length===1);if(_a4)this._b4(freq[0],q[0],gain[0]);for(let _y3=0;_y3<input.length;++_y3){const _D3=input[_y3];const _E3=output[_y3];for(let _F3=0;_F3<_D3.length;++_F3){if(_a4===!1){const _n4=(freq[_F3]!==undefined)?freq[_F3]:freq[0];const _c4=(q[_F3]!==undefined)?q[_F3]:q[0];const _o4=(gain[_F3]!==undefined)?gain[_F3]:gain[0];this._b4(_n4,
_c4,_o4);}const _d4=this._14*_D3[_F3]+this._24*this._44[_y3]+this._34*this._54[_y3]-this.__3*this._64[_y3]-this._04*this._74[_y3];this._54[_y3]=this._44[_y3];this._44[_y3]=_D3[_F3];this._74[_y3]=this._64[_y3];this._64[_y3]=_d4;const _I3=(bypass[_F3]!==undefined)?bypass[_F3]:bypass[0];_E3[_F3]=(_I3>0)?_D3[_F3]:_d4;}}return this._K3;}_b4(_p4,_f4,_q4){if(_p4===this._l4&&_f4===this._94&&_q4===this._m4)return;const _g4=2*Math.PI*_p4/sampleRate;const _h4=Math.cos(_g4);const _r4=Math.sqrt(_q4);const alpha=Math.sin(_g4)/(2*_f4);
const _s4=alpha/_r4;const _t4=alpha*_r4;const _i4=1+_s4;const __3=-2*_h4;const _04=1-_s4;const _14=1+_t4;const _24=__3;const _34=1-_t4;this.__3=__3/_i4;this._04=_04/_i4;this._14=_14/_i4;this._24=_24/_i4;this._34=_34/_i4;this._l4=_p4;this._94=_f4;this._m4=_q4;}}registerProcessor("peak-eq-processor",_j4);class _u4 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"gain",automationRate:"a-rate",defaultValue:0.5,
minValue:0.0}];}constructor(){super();this._q3();}process(_B3,_C3,parameters){const input=_B3[0];const output=_C3[0];const bypass=parameters.bypass;const gain=parameters.gain;for(let _y3=0;_y3<input.length;++_y3){const _D3=input[_y3];const _E3=output[_y3];for(let _F3=0;_F3<_D3.length;++_F3){_E3[_F3]=_D3[_F3];const _I3=(bypass[_F3]!==undefined)?bypass[_F3]:bypass[0];if(_I3>0.0){continue;}const _o4=(gain[_F3]!==undefined)?gain[_F3]:gain[0];_E3[_F3]*=_o4;}}return this._K3;}}registerProcessor("gain-processor",
_u4);class _v4 extends AudioWorkletProcessor{static get parameterDescriptors(){const _Z3=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"cutoff",automationRate:"a-rate",defaultValue:Math.min(1500.0,_Z3),minValue:10.0,maxValue:_Z3},{name:"q",automationRate:"a-rate",defaultValue:1.5,minValue:1.0,maxValue:100.0}];}constructor(_p3){super();this._q3();const _r3=_p3.outputChannelCount[0];this.__3=0;this._04=0;this._14=0;this._24=0;this._34=0;
this._44=new Float32Array(_r3);this._54=new Float32Array(_r3);this._64=new Float32Array(_r3);this._74=new Float32Array(_r3);this._84=-1;this._94=-1;}process(_B3,_C3,parameters){const input=_B3[0];const output=_C3[0];const bypass=parameters.bypass;const cutoff=parameters.cutoff;const q=parameters.q;const _a4=(cutoff.length===1&&q.length===1);if(_a4)this._b4(cutoff[0],q[0]);for(let _y3=0;_y3<input.length;++_y3){const _D3=input[_y3];const _E3=output[_y3];for(let _F3=0;_F3<_D3.length;++_F3){if(_a4===!1){const _y3=(cutoff[_F3]!==undefined)?cutoff[_F3]:cutoff[0];
const _c4=(q[_F3]!==undefined)?q[_F3]:q[0];this._b4(_y3,_c4);}const _d4=this._14*_D3[_F3]+this._24*this._44[_y3]+this._34*this._54[_y3]-this.__3*this._64[_y3]-this._04*this._74[_y3];this._54[_y3]=this._44[_y3];this._44[_y3]=_D3[_F3];this._74[_y3]=this._64[_y3];this._64[_y3]=_d4;const _I3=(bypass[_F3]!==undefined)?bypass[_F3]:bypass[0];_E3[_F3]=(_I3>0)?_D3[_F3]:_d4;}}return this._K3;}_b4(_e4,_f4){if(_e4===this._84&&_f4===this._94)return;const _g4=2*Math.PI*_e4/sampleRate;const alpha=Math.sin(_g4)/(2*_f4);
const _h4=Math.cos(_g4);const _i4=1+alpha;const __3=-2*_h4;const _04=1-alpha;const _14=(1+_h4)/2;const _24=-1-_h4;const _34=(1+_h4)/2;this.__3=__3/_i4;this._04=_04/_i4;this._14=_14/_i4;this._24=_24/_i4;this._34=_34/_i4;this._84=_e4;this._94=_f4;}}registerProcessor("hpf2-processor",_v4);class _w4 extends AudioWorkletProcessor{static get parameterDescriptors(){const _k4=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"freq",automationRate:"a-rate",
defaultValue:Math.min(5000.0,_k4),minValue:10.0,maxValue:_k4},{name:"q",automationRate:"a-rate",defaultValue:1.0,minValue:1.0,maxValue:100.0},{name:"gain",automationRate:"a-rate",defaultValue:1e-2,minValue:1e-6}];}constructor(_p3){super();this._q3();const _r3=_p3.outputChannelCount[0];this.__3=0;this._04=0;this._14=0;this._24=0;this._34=0;this._44=new Float32Array(_r3);this._54=new Float32Array(_r3);this._64=new Float32Array(_r3);this._74=new Float32Array(_r3);this._l4=-1;this._94=-1;this._m4=-1;}process(_B3,
_C3,parameters){const input=_B3[0];const output=_C3[0];const bypass=parameters.bypass;const freq=parameters.freq;const q=parameters.q;const gain=parameters.gain;const _a4=(freq.length===1&&q.length===1&&gain.length===1);if(_a4)this._b4(freq[0],q[0],gain[0]);for(let _y3=0;_y3<input.length;++_y3){const _D3=input[_y3];const _E3=output[_y3];for(let _F3=0;_F3<_D3.length;++_F3){if(_a4===!1){const _n4=(freq[_F3]!==undefined)?freq[_F3]:freq[0];const _c4=(q[_F3]!==undefined)?q[_F3]:q[0];const _o4=(gain[_F3]!==undefined)?gain[_F3]:gain[0];
this._b4(_n4,_c4,_o4);}const _d4=this._14*_D3[_F3]+this._24*this._44[_y3]+this._34*this._54[_y3]-this.__3*this._64[_y3]-this._04*this._74[_y3];this._54[_y3]=this._44[_y3];this._44[_y3]=_D3[_F3];this._74[_y3]=this._64[_y3];this._64[_y3]=_d4;const _I3=(bypass[_F3]!==undefined)?bypass[_F3]:bypass[0];_E3[_F3]=(_I3>0)?_D3[_F3]:_d4;}}return this._K3;}_b4(_p4,_f4,_q4){if(_p4===this._l4&&_f4===this._94&&_q4===this._m4)return;const _g4=2*Math.PI*_p4/sampleRate;const _h4=Math.cos(_g4);const _r4=Math.sqrt(_q4);const _x4=_r4+1;
const _y4=_r4-1;const _z4=_x4*_h4;const _A4=_y4*_h4;const _B4=_x4-_A4;const _C4=_x4+_A4;const alpha=Math.sin(_g4)/(2*_f4);const _D4=(2*Math.sqrt(_r4)*alpha);const _i4=_B4+_D4;const __3=2*(_y4-_z4);const _04=_B4-_D4;const _14=_r4*(_C4+_D4);const _24=-2*_r4*(_y4+_z4);const _34=_r4*(_C4-_D4);this.__3=__3/_i4;this._04=_04/_i4;this._14=_14/_i4;this._24=_24/_i4;this._34=_34/_i4;this._l4=_p4;this._94=_f4;this._m4=_q4;}}registerProcessor("hi-shelf-processor",_w4);function _E4(){}_E4._F4={_G4:0,_H4:1,_I4:2,_J4:3,_K4:4,
_L4:5};_E4._M4=function(_N4){return 1.0-_N4;};_E4._O4=function(_N4){return _N4;};_E4._P4=function(_N4){return 0.5*(Math.sin((_N4*2.0*Math.PI)-(Math.PI/2.0))+1.0);};_E4._Q4=function(_N4){if(_N4<0.5){return 0.0;}return 1.0;};_E4._R4=function(_N4){if(_N4<0.5){return 2.0*_N4;}return 2.0-(2.0*_N4);};_E4._S4=[_E4._M4,_E4._O4,_E4._P4,_E4._Q4,_E4._R4];_T4._U4=512;_T4._V4=1.0/_T4._U4;function _T4(_W4){this.data=new Float32Array(_T4._U4);for(let _z3=0;_z3<_T4._U4;++_z3){this.data[_z3]=_W4(_z3*_T4._V4);}}_T4.prototype._X4=function(_N4){
_N4=Math.max(0.0,_N4);_N4=Math.min(_N4,1.0);const _Y4=_N4*_T4._U4;const _Z4=~~_Y4;const __4=_Y4-_Z4;let _05=_Z4;let _15=_05+1;if(_05>=_T4._U4){_05-=_T4._U4;}if(_15>=_T4._U4){_15-=_T4._U4;}const _25=this.data[_05];const _35=this.data[_15];return _25+(_35-_25)*__4;};;_45._55=[];_45._65=!1;_45._75=0.0;_45._k4=20.0;function _45(){this._85=48000;this.shape=_E4._F4._I4;this.freq=1.0;this._95=0.0;this._V4=0.0;this._a5=0.0;if(_45._65==true){return;}for(let _z3=0;_z3<_E4._F4._L4;++_z3){_45._55[_z3]=new _T4(_E4._S4[_z3]);
}_45._65=true;}_45._b5=function(){return(_45._65==!0);};_45.prototype._c5=function(_d5){this._85=_d5;this._e5();};;_45.prototype._f5=function(_p4){_p4=Math.max(_45._75,_p4);_p4=Math.min(_p4,_45._k4);this.freq=_p4;this._e5();};;_45.prototype._g5=function(_h5){_h5=Math.max(0.0,_h5);_h5=Math.min(_h5,1.0);const _i5=_h5-this._a5;this._a5=_h5;this._95+=_i5;while(this._95>=1.0){this._95-=1.0;}while(this._95<0.0){this._95+=1.0;}};;_45.prototype._j5=function(_k5){_k5=Math.max(0,_k5);_k5=Math.min(_k5,_E4._F4._L4-1);
this.shape=_k5;};;_45.prototype._X4=function(){const _l5=_45._55[this.shape]._X4(this._95);this._95+=this._V4;while(this._95>=1.0){this._95-=1.0;}return _l5;};;_45.prototype._e5=function(){this._V4=this.freq/this._85;};;class _m5 extends AudioWorkletProcessor{static _n5=5.0;static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"time",automationRate:"a-rate",defaultValue:0.2,minValue:0.0,maxValue:_m5._n5},{name:"feedback",automationRate:"a-rate",
defaultValue:0.5,minValue:0.0,maxValue:1.0},{name:"mix",automationRate:"a-rate",defaultValue:0.35,minValue:0.0,maxValue:1.0}];}constructor(_p3){super();this._q3();const _r3=_p3.outputChannelCount[0];const _o5=(_m5._n5*sampleRate)+1;this.buffer=new Array(_r3);this._p5=new Uint32Array(_r3);for(let _y3=0;_y3<_r3;++_y3)this.buffer[_y3]=new Float32Array(_o5);}process(_B3,_C3,parameters){const input=_B3[0];const output=_C3[0];const bypass=parameters.bypass;const time=parameters.time;const feedback=parameters.feedback;
const mix=parameters.mix;for(let _y3=0;_y3<input.length;++_y3){const _D3=input[_y3];const _E3=output[_y3];for(let _F3=0;_F3<_D3.length;++_F3){_E3[_F3]=_D3[_F3];const _q5=(time[_F3]!==undefined)?time[_F3]:time[0];const _r5=this._X4(_y3,_q5);const _n4=(feedback[_F3]!==undefined)?feedback[_F3]:feedback[0];const _s5=_D3[_F3]+(_r5*_n4);this.write(_y3,_s5);const _I3=(bypass[_F3]!==undefined)?bypass[_F3]:bypass[0];if(_I3>0.0){continue;}const _J3=(mix[_F3]!==undefined)?mix[_F3]:mix[0];_E3[_F3]*=(1-_J3);_E3[_F3]+=(_r5*_J3);
}}return this._K3;}_X4(_t5,_u5){const _v5=_u5*sampleRate;let _05=(this._p5[_t5]-~~_v5);let _15=(_05-1);while(_05<0)_05+=this.buffer[_t5].length;while(_15<0)_15+=this.buffer[_t5].length;const _w5=_v5-~~_v5;const _25=this.buffer[_t5][_05];const _35=this.buffer[_t5][_15];return _25+(_35-_25)*_w5;}write(_t5,_83){++this._p5[_t5];this._p5[_t5]%=this.buffer[_t5].length;this.buffer[_t5][this._p5[_t5]]=_83;}}registerProcessor("delay-processor",_m5);AudioWorkletProcessor.prototype._q3=function(){this._K3=true;this.port.onmessage=(_x5)=>{
if(_x5.data==="kill")this._K3=false;};};;class _y5 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1}];}constructor(){super();this._q3();}process(_B3,_C3,parameters){const input=_B3[0];const bypass=parameters.bypass;for(let _y3=0;_y3<input.length;++_y3){const _D3=input[_y3];for(let _F3=0;_F3<_D3.length;++_F3){const _I3=(bypass[_F3]!==undefined)?bypass[_F3]:bypass[0];_C3[_I3][_y3][_F3]=_D3[_F3];}}return this._K3;
}}class _z5 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"gain",automationRate:"a-rate",defaultValue:1,minValue:0}];}constructor(){super();this._q3();}process(_B3,_C3,parameters){const _U3=_B3[0];const _V3=_B3[1];const output=_C3[0];const gain=parameters.gain;for(let _y3=0;_y3<_V3.length;++_y3){const _D3=_V3[_y3];const _E3=output[_y3];for(let _F3=0;_F3<_D3.length;++_F3)_E3[_F3]=_D3[_F3];}for(let _y3=0;_y3<_U3.length;++_y3){const _D3=_U3[_y3];const _E3=output[_y3];for(let _F3=0;_F3<_D3.length;
++_F3){const _o4=(gain[_F3]!==undefined)?gain[_F3]:gain[0];_E3[_F3]+=_D3[_F3]*_o4;}}return this._K3;}}registerProcessor("audio-bus-input",_y5);registerProcessor("audio-bus-output",_z5);class _A5 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"gain",automationRate:"a-rate",defaultValue:1.0,minValue:0.0},{name:"factor",automationRate:"a-rate",defaultValue:20,minValue:1,maxValue:100},{name:"resolution",
automationRate:"a-rate",defaultValue:8,minValue:2,maxValue:16},{name:"mix",automationRate:"a-rate",defaultValue:0.8,minValue:0.0,maxValue:1.0}];}static _B5=[undefined,undefined,2,4,8,16,32,64,128,256,512,1024,2048,4096,8192,16384,32768];constructor(_p3){super();this._q3();const _r3=_p3.outputChannelCount[0];this._C5=new Float32Array(_r3);this._D5=new Uint32Array(_r3);}process(_B3,_C3,parameters){const input=_B3[0];const output=_C3[0];const bypass=parameters.bypass;const gain=parameters.gain;const factor=parameters.factor;
const resolution=parameters.resolution;const mix=parameters.mix;for(let _y3=0;_y3<input.length;++_y3){const _D3=input[_y3];const _E3=output[_y3];for(let _F3=0;_F3<_D3.length;++_F3){_E3[_F3]=_D3[_F3];if(this._D5[_y3]===0)this._C5[_y3]=_D3[_F3];const _n4=(factor[_F3]!==undefined)?factor[_F3]:factor[0];++this._D5[_y3];this._D5[_y3]%=_n4;const _I3=(bypass[_F3]!==undefined)?bypass[_F3]:bypass[0];if(_I3>0.0){continue;}let _H3=this._C5[_y3];const _o4=(gain[_F3]!==undefined)?gain[_F3]:gain[0];_H3*=_o4;_H3=Math.max(Math.min(_H3,
1.0),-1.0);const _E5=(resolution[_F3]!==undefined)?resolution[_F3]:resolution[0];const max=(_H3>0.0)?_A5._B5[_E5]-1:_A5._B5[_E5];_H3=Math.round(_H3*max)/max;const _J3=(mix[_F3]!==undefined)?mix[_F3]:mix[0];_E3[_F3]*=(1.0-_J3);_E3[_F3]+=(_H3*_J3);}}return this._K3;}}registerProcessor("bitcrusher-processor",_A5);class _F5 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"rate",automationRate:"a-rate",defaultValue:5.0,
minValue:0.0,maxValue:20.0},{name:"intensity",automationRate:"a-rate",defaultValue:1.0,minValue:0.0,maxValue:1.0},{name:"offset",automationRate:"a-rate",defaultValue:0.0,minValue:0.0,maxValue:1.0},{name:"shape",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:4}];}constructor(_p3){super();this._q3();const _r3=_p3.outputChannelCount[0];this._G5=new Array(_r3).fill(1.0);this._H5=new Array(_r3).fill(0.0);this._I5=new Array(_r3).fill(_E4._F4._G4);this._J5=new Array(_r3);for(let _y3=0;_y3<_r3;++_y3){
this._J5[_y3]=new _45();this._J5[_y3]._c5(sampleRate);this._J5[_y3]._f5(this._G5[_y3]);this._J5[_y3]._j5(this._I5[_y3]);if(_y3%2===1){this._J5[_y3]._g5(this._H5[_y3]);}}}process(_B3,_C3,parameters){const input=_B3[0];const output=_C3[0];const bypass=parameters.bypass;const rate=parameters.rate;const intensity=parameters.intensity;const offset=parameters.offset;const shape=parameters.shape;for(let _y3=0;_y3<input.length;++_y3){const _D3=input[_y3];const _E3=output[_y3];for(let _F3=0;_F3<_D3.length;++_F3){_E3[_F3]=_D3[_F3];
const _E5=(rate[_F3]!==undefined)?rate[_F3]:rate[0];const _K5=(offset[_F3]!==undefined)?offset[_F3]:offset[0];const _L5=(shape[_F3]!==undefined)?shape[_F3]:shape[0];this._M5(_y3,_E5,_K5,_L5);const _N5=this._J5[_y3]._X4();const _I3=(bypass[_F3]!==undefined)?bypass[_F3]:bypass[0];if(_I3>0.0){continue;}const _z3=(intensity[_F3]!==undefined)?intensity[_F3]:intensity[0];const out=_D3[_F3]*_N5*_z3;_E3[_F3]*=(1.0-_z3);_E3[_F3]+=out;}}return this._K3;}_M5(_t5,_O5,_h5,_k5){if(_O5!==this._G5[_t5]){this._J5[_t5]._f5(_O5);
this._G5[_t5]=_O5;}if(_h5!==this._H5[_t5]){if(_t5%2===1){this._J5[_t5]._g5(_h5);}this._H5[_t5]=_h5;}if(_k5!==this._I5[_t5]){this._J5[_t5]._j5(_k5);this._I5[_t5]=_k5;}}}registerProcessor("tremolo-processor",_F5);class _P5{constructor(_u5=1e-3){this.setTime(_u5);}setTime(_u5){this._Q5=Math.exp(-1/(_u5*sampleRate));}process(_R5,_S5){return _R5+this._Q5*(_S5-_R5);}}class _T5{constructor(_U5,_V5){this._W5=new _P5(_U5);this._X5=new _P5(_V5);this._Y5=_U5;this._Z5=_V5;}__5(_u5){if(_u5===this._Y5)return;this._W5.setTime(_u5);
this._Y5=_u5;}_06(_u5){if(_u5===this._Z5)return;this._X5.setTime(_u5);this._Z5=_u5;}process(_R5,_S5){if(_R5>_S5)return this._W5.process(_R5,_S5);else return this._X5.process(_R5,_S5);}}class _16 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"ingain",automationRate:"a-rate",defaultValue:1,minValue:0},{name:"threshold",automationRate:"a-rate",defaultValue:0.125,minValue:1e-3,maxValue:1},{name:"ratio",
automationRate:"a-rate",defaultValue:4,minValue:1},{name:"attack",automationRate:"a-rate",defaultValue:0.05,minValue:1e-3,maxValue:1e-1},{name:"release",automationRate:"a-rate",defaultValue:0.25,minValue:1e-2,maxValue:1},{name:"outgain",automationRate:"a-rate",defaultValue:1,minValue:0}];}constructor(_26){super();this._q3();const _W5=_16.parameterDescriptors.find(_36=>_36.name==="attack");const _X5=_16.parameterDescriptors.find(_36=>_36.name==="release");this._46=new _T5(_W5.defaultValue,_X5.defaultValue);
this._56=0;}process(_66,_76,_86){const input=_66[0];const output=_76[0];const bypass=_86.bypass;const ingain=_86.ingain;const outgain=_86.outgain;const threshold=_86.threshold;const ratio=_86.ratio;const attack=_86.attack;const release=_86.release;if(input.length===0)return this._K3;for(let _F3=0;_F3<input[0].length;++_F3){let _96=input.map(_a6=>_a6[_F3]);output.forEach((_a6,_b6)=>{_a6[_F3]=_96[_b6];});const _c6=(ingain[_F3]!==undefined)?ingain[_F3]:ingain[0];_96=_96.map(_d6=>_d6*=_c6);const rect=_96.map(_d6=>Math.abs(_d6));
const max=Math.max(...rect);const _e6=_f6(max);const _q5=(threshold[_F3]!==undefined)?threshold[_F3]:threshold[0];const _g6=_f6(_q5);const _h6=Math.max(0,_e6-_g6);const _W5=(attack[_F3]!==undefined)?attack[_F3]:attack[0];const _X5=(release[_F3]!==undefined)?release[_F3]:release[0];this._46.__5(_W5);this._46._06(_X5);this._56=this._46.process(_h6,this._56);const _I3=(bypass[_F3]!==undefined)?bypass[_F3]:bypass[0];if(_I3>0)continue;const _E5=(ratio[_F3]!==undefined)?ratio[_F3]:ratio[0];const _i6=(this._56/_E5)-this._56;
const _o4=_j6(_i6);_96=_96.map(_d6=>_d6*=_o4);const _k6=(outgain[_F3]!==undefined)?outgain[_F3]:outgain[0];_96=_96.map(_d6=>_d6*=_k6);output.forEach((_a6,_b6)=>{_a6[_F3]=_96[_b6];});}return this._K3;}}function _f6(_l6){return 20*Math.log10(_l6);}function _j6(_l6){return Math.pow(10,_l6/20);}registerProcessor("compressor-processor",_16);class _m6 extends AudioWorkletProcessor{static get parameterDescriptors(){const _k4=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,
minValue:0,maxValue:1},{name:"freq",automationRate:"a-rate",defaultValue:Math.min(500.0,_k4),minValue:10.0,maxValue:_k4},{name:"q",automationRate:"a-rate",defaultValue:1.0,minValue:1.0,maxValue:100.0},{name:"gain",automationRate:"a-rate",defaultValue:1e-2,minValue:1e-6}];}constructor(_p3){super();this._q3();const _r3=_p3.outputChannelCount[0];this.__3=0;this._04=0;this._14=0;this._24=0;this._34=0;this._44=new Float32Array(_r3);this._54=new Float32Array(_r3);this._64=new Float32Array(_r3);this._74=new Float32Array(_r3);
this._l4=-1;this._94=-1;this._m4=-1;}process(_B3,_C3,parameters){const input=_B3[0];const output=_C3[0];const bypass=parameters.bypass;const freq=parameters.freq;const q=parameters.q;const gain=parameters.gain;const _a4=(freq.length===1&&q.length===1&&gain.length===1);if(_a4)this._b4(freq[0],q[0],gain[0]);for(let _y3=0;_y3<input.length;++_y3){const _D3=input[_y3];const _E3=output[_y3];for(let _F3=0;_F3<_D3.length;++_F3){if(_a4===!1){const _n4=(freq[_F3]!==undefined)?freq[_F3]:freq[0];const _c4=(q[_F3]!==undefined)?q[_F3]:q[0];
const _o4=(gain[_F3]!==undefined)?gain[_F3]:gain[0];this._b4(_n4,_c4,_o4);}const _d4=this._14*_D3[_F3]+this._24*this._44[_y3]+this._34*this._54[_y3]-this.__3*this._64[_y3]-this._04*this._74[_y3];this._54[_y3]=this._44[_y3];this._44[_y3]=_D3[_F3];this._74[_y3]=this._64[_y3];this._64[_y3]=_d4;const _I3=(bypass[_F3]!==undefined)?bypass[_F3]:bypass[0];_E3[_F3]=(_I3>0)?_D3[_F3]:_d4;}}return this._K3;}_b4(_p4,_f4,_q4){if(_p4===this._l4&&_f4===this._94&&_q4===this._m4)return;const _g4=2*Math.PI*_p4/sampleRate;
const _h4=Math.cos(_g4);const _r4=Math.sqrt(_q4);const _x4=_r4+1;const _y4=_r4-1;const _z4=_x4*_h4;const _A4=_y4*_h4;const _B4=_x4-_A4;const _C4=_x4+_A4;const alpha=Math.sin(_g4)/(2*_f4);const _D4=(2*Math.sqrt(_r4)*alpha);const _i4=_C4+_D4;const __3=-2*(_y4+_z4);const _04=_C4-_D4;const _14=_r4*(_B4+_D4);const _24=2*_r4*(_y4-_z4);const _34=_r4*(_B4-_D4);this.__3=__3/_i4;this._04=_04/_i4;this._14=_14/_i4;this._24=_24/_i4;this._34=_34/_i4;this._l4=_p4;this._94=_f4;this._m4=_q4;}}registerProcessor("lo-shelf-processor",
_m6);