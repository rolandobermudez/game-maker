class _53{constructor(_63){this._73=0;this._83=0;this.feedback=0;this._93=0;this.buffer=new Float32Array(_63);this._a3=0;}process(_b3){const out=this.buffer[this._a3];this._93=(this._93*this._73)+(out*this._83);this.buffer[this._a3]=_b3+(this._93*this.feedback);++this._a3;this._a3%=this.buffer.length;return out;}_c3(_d3){this.feedback=Math.min(Math.max(0,_d3),1);}_e3(_f3){this._73=Math.min(Math.max(0,_f3),1);this._83=1-this._73;}}class _g3{constructor(_63){this.feedback=0;this.buffer=new Float32Array(_63);
this._a3=0;}process(_b3){const out=this.buffer[this._a3];this.buffer[this._a3]=_b3+(out*this.feedback);++this._a3;this._a3%=this.buffer.length;return(out-_b3);}_c3(_d3){this.feedback=Math.min(Math.max(0,_d3),1);}}class _h3 extends AudioWorkletProcessor{static _i3=8;static _j3=4;static _k3=0.015;static _l3=0.4;static _m3=0.28;static _n3=0.7;static _o3=[1116,1188,1277,1356,1422,1491,1557,1617];static _p3=[1139,1211,1300,1379,1445,1514,1580,1640];static _q3=[556,441,341,225];static _r3=[579,464,364,248];static get parameterDescriptors(){
return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"size",automationRate:"a-rate",defaultValue:0.7,minValue:0.0,maxValue:1.0},{name:"damp",automationRate:"a-rate",defaultValue:0.1,minValue:0.0,maxValue:1.0},{name:"mix",automationRate:"a-rate",defaultValue:0.35,minValue:0.0,maxValue:1.0}];}constructor(_s3){super();this._t3();const _u3=_s3.outputChannelCount[0];this._v3=-1;this._w3=-1;this._x3=new Array(_u3);this._y3=new Array(_u3);const _z3=[_h3._o3,_h3._p3];const _A3=[_h3._q3,
_h3._r3];for(let _B3=0;_B3<_u3;++_B3){this._x3[_B3]=new Array(_h3._i3);this._y3[_B3]=new Array(_h3._j3);for(let _C3=0;_C3<_h3._i3;++_C3)this._x3[_B3][_C3]=new _53(_z3[_B3%_z3.length][_C3]);for(let _C3=0;_C3<_h3._j3;++_C3)this._y3[_B3][_C3]=new _g3(_A3[_B3%_A3.length][_C3]);}this._D3(0.5);this._e3(0.5);for(let _B3=0;_B3<_u3;++_B3)for(let _C3=0;_C3<_h3._j3;++_C3)this._y3[_B3][_C3]._c3(0.5);}process(_E3,_F3,parameters){const input=_E3[0];const output=_F3[0];const bypass=parameters.bypass;const size=parameters.size;
const damp=parameters.damp;const mix=parameters.mix;for(let _B3=0;_B3<input.length;++_B3){const _G3=input[_B3];const _H3=output[_B3];for(let _I3=0;_I3<_G3.length;++_I3){const _I3=(size[_I3]!==undefined)?size[_I3]:size[0];const _J3=(damp[_I3]!==undefined)?damp[_I3]:damp[0];this._D3(_I3);this._e3(_J3);_H3[_I3]=_G3[_I3];let out=0;const _K3=_G3[_I3]*_h3._k3;for(let _C3=0;_C3<_h3._i3;++_C3)out+=this._x3[_B3][_C3].process(_K3);for(let _C3=0;_C3<_h3._j3;++_C3)out=this._y3[_B3][_C3].process(out);const _L3=(bypass[_I3]!==undefined)?bypass[_I3]:bypass[0];
if(_L3>0.0){continue;}const _M3=(mix[_I3]!==undefined)?mix[_I3]:mix[0];_H3[_I3]*=(1-_M3);_H3[_I3]+=(out*_M3);}}return this._N3;}_D3(_63){if(_63===this._v3)return;const size=(_63*_h3._m3)+_h3._n3;for(let _B3=0;_B3<this._x3.length;++_B3)for(let _C3=0;_C3<_h3._i3;++_C3)this._x3[_B3][_C3]._c3(size);this._v3=_63;}_e3(_f3){if(_f3===this._w3)return;const damp=_f3*_h3._l3;for(let _B3=0;_B3<this._x3.length;++_B3)for(let _C3=0;_C3<_h3._i3;++_C3)this._x3[_B3][_C3]._e3(damp);this._w3=_f3;}}registerProcessor("reverb1-processor",
_h3);class _O3 extends AudioWorkletProcessor{static get parameterDescriptors(){return [];}constructor(){super();this._t3();}process(_P3,_Q3,_R3){const input=_P3[0];const _S3=_Q3[0];const _T3=_Q3[1];for(let _B3=0;_B3<input.length;++_B3){const _G3=input[_B3];const _U3=_S3[_B3];const _V3=_T3[_B3];for(let _I3=0;_I3<_G3.length;++_I3){_U3[_I3]=_G3[_I3];_V3[_I3]=_G3[_I3];}}return this._N3;}}class _W3 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,
minValue:0,maxValue:1}];}constructor(){super();this._t3();}process(_P3,_Q3,_R3){const _X3=_P3[0];const _Y3=_P3[1];const output=_Q3[0];const bypass=_R3.bypass;for(let _B3=0;_B3<_Y3.length;++_B3){const _Z3=_X3[_B3];const __3=_Y3[_B3];const _H3=output[_B3];for(let _I3=0;_I3<_Z3.length;++_I3){const _L3=(bypass[_I3]!==undefined)?bypass[_I3]:bypass[0];if(_L3>0){_H3[_I3]=__3[_I3];}else {_H3[_I3]=_Z3[_I3];}}}return this._N3;}}registerProcessor("eq-input",_O3);registerProcessor("eq-output",_W3);class _04 extends AudioWorkletProcessor{
static get parameterDescriptors(){const _14=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"cutoff",automationRate:"a-rate",defaultValue:Math.min(500.0,_14),minValue:10.0,maxValue:_14},{name:"q",automationRate:"a-rate",defaultValue:1.5,minValue:1.0,maxValue:100.0}];}constructor(_s3){super();this._t3();const _u3=_s3.outputChannelCount[0];this._24=0;this._34=0;this._44=0;this._54=0;this._64=0;this._74=new Float32Array(_u3);this._84=new Float32Array(_u3);
this._94=new Float32Array(_u3);this._a4=new Float32Array(_u3);this._b4=-1;this._c4=-1;}process(_E3,_F3,parameters){const input=_E3[0];const output=_F3[0];const bypass=parameters.bypass;const cutoff=parameters.cutoff;const q=parameters.q;const _d4=(cutoff.length===1&&q.length===1);if(_d4)this._e4(cutoff[0],q[0]);for(let _B3=0;_B3<input.length;++_B3){const _G3=input[_B3];const _H3=output[_B3];for(let _I3=0;_I3<_G3.length;++_I3){if(_d4===!1){const _B3=(cutoff[_I3]!==undefined)?cutoff[_I3]:cutoff[0];const _f4=(q[_I3]!==undefined)?q[_I3]:q[0];
this._e4(_B3,_f4);}const _g4=this._44*_G3[_I3]+this._54*this._74[_B3]+this._64*this._84[_B3]-this._24*this._94[_B3]-this._34*this._a4[_B3];this._84[_B3]=this._74[_B3];this._74[_B3]=_G3[_I3];this._a4[_B3]=this._94[_B3];this._94[_B3]=_g4;const _L3=(bypass[_I3]!==undefined)?bypass[_I3]:bypass[0];_H3[_I3]=(_L3>0)?_G3[_I3]:_g4;}}return this._N3;}_e4(_h4,_i4){if(_h4===this._b4&&_i4===this._c4)return;const _j4=2*Math.PI*_h4/sampleRate;const alpha=Math.sin(_j4)/(2*_i4);const _k4=Math.cos(_j4);const _l4=1+alpha;
const _24=-2*_k4;const _34=1-alpha;const _44=(1-_k4)/2;const _54=1-_k4;const _64=(1-_k4)/2;this._24=_24/_l4;this._34=_34/_l4;this._44=_44/_l4;this._54=_54/_l4;this._64=_64/_l4;this._b4=_h4;this._c4=_i4;}}registerProcessor("lpf2-processor",_04);class _m4 extends AudioWorkletProcessor{static get parameterDescriptors(){const _n4=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"freq",automationRate:"a-rate",defaultValue:Math.min(1500.0,
_n4),minValue:10.0,maxValue:_n4},{name:"q",automationRate:"a-rate",defaultValue:1.0,minValue:1.0,maxValue:100.0},{name:"gain",automationRate:"a-rate",defaultValue:1e-2,minValue:1e-6}];}constructor(_s3){super();this._t3();const _u3=_s3.outputChannelCount[0];this._24=0;this._34=0;this._44=0;this._54=0;this._64=0;this._74=new Float32Array(_u3);this._84=new Float32Array(_u3);this._94=new Float32Array(_u3);this._a4=new Float32Array(_u3);this._o4=-1;this._c4=-1;this._p4=-1;}process(_E3,_F3,parameters){const input=_E3[0];
const output=_F3[0];const bypass=parameters.bypass;const freq=parameters.freq;const q=parameters.q;const gain=parameters.gain;const _d4=(freq.length===1&&q.length===1&&gain.length===1);if(_d4)this._e4(freq[0],q[0],gain[0]);for(let _B3=0;_B3<input.length;++_B3){const _G3=input[_B3];const _H3=output[_B3];for(let _I3=0;_I3<_G3.length;++_I3){if(_d4===!1){const _q4=(freq[_I3]!==undefined)?freq[_I3]:freq[0];const _f4=(q[_I3]!==undefined)?q[_I3]:q[0];const _r4=(gain[_I3]!==undefined)?gain[_I3]:gain[0];this._e4(_q4,
_f4,_r4);}const _g4=this._44*_G3[_I3]+this._54*this._74[_B3]+this._64*this._84[_B3]-this._24*this._94[_B3]-this._34*this._a4[_B3];this._84[_B3]=this._74[_B3];this._74[_B3]=_G3[_I3];this._a4[_B3]=this._94[_B3];this._94[_B3]=_g4;const _L3=(bypass[_I3]!==undefined)?bypass[_I3]:bypass[0];_H3[_I3]=(_L3>0)?_G3[_I3]:_g4;}}return this._N3;}_e4(_s4,_i4,_t4){if(_s4===this._o4&&_i4===this._c4&&_t4===this._p4)return;const _j4=2*Math.PI*_s4/sampleRate;const _k4=Math.cos(_j4);const _u4=Math.sqrt(_t4);const alpha=Math.sin(_j4)/(2*_i4);
const _v4=alpha/_u4;const _w4=alpha*_u4;const _l4=1+_v4;const _24=-2*_k4;const _34=1-_v4;const _44=1+_w4;const _54=_24;const _64=1-_w4;this._24=_24/_l4;this._34=_34/_l4;this._44=_44/_l4;this._54=_54/_l4;this._64=_64/_l4;this._o4=_s4;this._c4=_i4;this._p4=_t4;}}registerProcessor("peak-eq-processor",_m4);class _x4 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"gain",automationRate:"a-rate",defaultValue:0.5,
minValue:0.0}];}constructor(){super();this._t3();}process(_E3,_F3,parameters){const input=_E3[0];const output=_F3[0];const bypass=parameters.bypass;const gain=parameters.gain;for(let _B3=0;_B3<input.length;++_B3){const _G3=input[_B3];const _H3=output[_B3];for(let _I3=0;_I3<_G3.length;++_I3){_H3[_I3]=_G3[_I3];const _L3=(bypass[_I3]!==undefined)?bypass[_I3]:bypass[0];if(_L3>0.0){continue;}const _r4=(gain[_I3]!==undefined)?gain[_I3]:gain[0];_H3[_I3]*=_r4;}}return this._N3;}}registerProcessor("gain-processor",
_x4);class _y4 extends AudioWorkletProcessor{static get parameterDescriptors(){const _14=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"cutoff",automationRate:"a-rate",defaultValue:Math.min(1500.0,_14),minValue:10.0,maxValue:_14},{name:"q",automationRate:"a-rate",defaultValue:1.5,minValue:1.0,maxValue:100.0}];}constructor(_s3){super();this._t3();const _u3=_s3.outputChannelCount[0];this._24=0;this._34=0;this._44=0;this._54=0;this._64=0;
this._74=new Float32Array(_u3);this._84=new Float32Array(_u3);this._94=new Float32Array(_u3);this._a4=new Float32Array(_u3);this._b4=-1;this._c4=-1;}process(_E3,_F3,parameters){const input=_E3[0];const output=_F3[0];const bypass=parameters.bypass;const cutoff=parameters.cutoff;const q=parameters.q;const _d4=(cutoff.length===1&&q.length===1);if(_d4)this._e4(cutoff[0],q[0]);for(let _B3=0;_B3<input.length;++_B3){const _G3=input[_B3];const _H3=output[_B3];for(let _I3=0;_I3<_G3.length;++_I3){if(_d4===!1){const _B3=(cutoff[_I3]!==undefined)?cutoff[_I3]:cutoff[0];
const _f4=(q[_I3]!==undefined)?q[_I3]:q[0];this._e4(_B3,_f4);}const _g4=this._44*_G3[_I3]+this._54*this._74[_B3]+this._64*this._84[_B3]-this._24*this._94[_B3]-this._34*this._a4[_B3];this._84[_B3]=this._74[_B3];this._74[_B3]=_G3[_I3];this._a4[_B3]=this._94[_B3];this._94[_B3]=_g4;const _L3=(bypass[_I3]!==undefined)?bypass[_I3]:bypass[0];_H3[_I3]=(_L3>0)?_G3[_I3]:_g4;}}return this._N3;}_e4(_h4,_i4){if(_h4===this._b4&&_i4===this._c4)return;const _j4=2*Math.PI*_h4/sampleRate;const alpha=Math.sin(_j4)/(2*_i4);
const _k4=Math.cos(_j4);const _l4=1+alpha;const _24=-2*_k4;const _34=1-alpha;const _44=(1+_k4)/2;const _54=-1-_k4;const _64=(1+_k4)/2;this._24=_24/_l4;this._34=_34/_l4;this._44=_44/_l4;this._54=_54/_l4;this._64=_64/_l4;this._b4=_h4;this._c4=_i4;}}registerProcessor("hpf2-processor",_y4);class _z4 extends AudioWorkletProcessor{static get parameterDescriptors(){const _n4=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"freq",automationRate:"a-rate",
defaultValue:Math.min(5000.0,_n4),minValue:10.0,maxValue:_n4},{name:"q",automationRate:"a-rate",defaultValue:1.0,minValue:1.0,maxValue:100.0},{name:"gain",automationRate:"a-rate",defaultValue:1e-2,minValue:1e-6}];}constructor(_s3){super();this._t3();const _u3=_s3.outputChannelCount[0];this._24=0;this._34=0;this._44=0;this._54=0;this._64=0;this._74=new Float32Array(_u3);this._84=new Float32Array(_u3);this._94=new Float32Array(_u3);this._a4=new Float32Array(_u3);this._o4=-1;this._c4=-1;this._p4=-1;}process(_E3,
_F3,parameters){const input=_E3[0];const output=_F3[0];const bypass=parameters.bypass;const freq=parameters.freq;const q=parameters.q;const gain=parameters.gain;const _d4=(freq.length===1&&q.length===1&&gain.length===1);if(_d4)this._e4(freq[0],q[0],gain[0]);for(let _B3=0;_B3<input.length;++_B3){const _G3=input[_B3];const _H3=output[_B3];for(let _I3=0;_I3<_G3.length;++_I3){if(_d4===!1){const _q4=(freq[_I3]!==undefined)?freq[_I3]:freq[0];const _f4=(q[_I3]!==undefined)?q[_I3]:q[0];const _r4=(gain[_I3]!==undefined)?gain[_I3]:gain[0];
this._e4(_q4,_f4,_r4);}const _g4=this._44*_G3[_I3]+this._54*this._74[_B3]+this._64*this._84[_B3]-this._24*this._94[_B3]-this._34*this._a4[_B3];this._84[_B3]=this._74[_B3];this._74[_B3]=_G3[_I3];this._a4[_B3]=this._94[_B3];this._94[_B3]=_g4;const _L3=(bypass[_I3]!==undefined)?bypass[_I3]:bypass[0];_H3[_I3]=(_L3>0)?_G3[_I3]:_g4;}}return this._N3;}_e4(_s4,_i4,_t4){if(_s4===this._o4&&_i4===this._c4&&_t4===this._p4)return;const _j4=2*Math.PI*_s4/sampleRate;const _k4=Math.cos(_j4);const _u4=Math.sqrt(_t4);const _A4=_u4+1;
const _B4=_u4-1;const _C4=_A4*_k4;const _D4=_B4*_k4;const _E4=_A4-_D4;const _F4=_A4+_D4;const alpha=Math.sin(_j4)/(2*_i4);const _G4=(2*Math.sqrt(_u4)*alpha);const _l4=_E4+_G4;const _24=2*(_B4-_C4);const _34=_E4-_G4;const _44=_u4*(_F4+_G4);const _54=-2*_u4*(_B4+_C4);const _64=_u4*(_F4-_G4);this._24=_24/_l4;this._34=_34/_l4;this._44=_44/_l4;this._54=_54/_l4;this._64=_64/_l4;this._o4=_s4;this._c4=_i4;this._p4=_t4;}}registerProcessor("hi-shelf-processor",_z4);function _H4(){}_H4._I4={_J4:0,_K4:1,_L4:2,_M4:3,_N4:4,
_O4:5};_H4._P4=function(_Q4){return 1.0-_Q4;};_H4._R4=function(_Q4){return _Q4;};_H4._S4=function(_Q4){return 0.5*(Math.sin((_Q4*2.0*Math.PI)-(Math.PI/2.0))+1.0);};_H4._T4=function(_Q4){if(_Q4<0.5){return 0.0;}return 1.0;};_H4._U4=function(_Q4){if(_Q4<0.5){return 2.0*_Q4;}return 2.0-(2.0*_Q4);};_H4._V4=[_H4._P4,_H4._R4,_H4._S4,_H4._T4,_H4._U4];_W4._X4=512;_W4._Y4=1.0/_W4._X4;function _W4(_Z4){this.data=new Float32Array(_W4._X4);for(let _C3=0;_C3<_W4._X4;++_C3){this.data[_C3]=_Z4(_C3*_W4._Y4);}}_W4.prototype.__4=function(_Q4){
_Q4=Math.max(0.0,_Q4);_Q4=Math.min(_Q4,1.0);const _05=_Q4*_W4._X4;const _15=~~_05;const _25=_05-_15;let _35=_15;let _45=_35+1;if(_35>=_W4._X4){_35-=_W4._X4;}if(_45>=_W4._X4){_45-=_W4._X4;}const _55=this.data[_35];const _65=this.data[_45];return _55+(_65-_55)*_25;};;_75._85=[];_75._95=!1;_75._a5=0.0;_75._n4=20.0;function _75(){this._b5=48000;this.shape=_H4._I4._L4;this.freq=1.0;this._c5=0.0;this._Y4=0.0;this._d5=0.0;if(_75._95==true){return;}for(let _C3=0;_C3<_H4._I4._O4;++_C3){_75._85[_C3]=new _W4(_H4._V4[_C3]);
}_75._95=true;}_75._e5=function(){return(_75._95==!0);};_75.prototype._f5=function(_g5){this._b5=_g5;this._h5();};;_75.prototype._i5=function(_s4){_s4=Math.max(_75._a5,_s4);_s4=Math.min(_s4,_75._n4);this.freq=_s4;this._h5();};;_75.prototype._j5=function(_k5){_k5=Math.max(0.0,_k5);_k5=Math.min(_k5,1.0);const _l5=_k5-this._d5;this._d5=_k5;this._c5+=_l5;while(this._c5>=1.0){this._c5-=1.0;}while(this._c5<0.0){this._c5+=1.0;}};;_75.prototype._m5=function(_n5){_n5=Math.max(0,_n5);_n5=Math.min(_n5,_H4._I4._O4-1);
this.shape=_n5;};;_75.prototype.__4=function(){const _o5=_75._85[this.shape].__4(this._c5);this._c5+=this._Y4;while(this._c5>=1.0){this._c5-=1.0;}return _o5;};;_75.prototype._h5=function(){this._Y4=this.freq/this._b5;};;class _p5 extends AudioWorkletProcessor{static _q5=5.0;static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"time",automationRate:"a-rate",defaultValue:0.2,minValue:0.0,maxValue:_p5._q5},{name:"feedback",automationRate:"a-rate",
defaultValue:0.5,minValue:0.0,maxValue:1.0},{name:"mix",automationRate:"a-rate",defaultValue:0.35,minValue:0.0,maxValue:1.0}];}constructor(_s3){super();this._t3();const _u3=_s3.outputChannelCount[0];const _r5=(_p5._q5*sampleRate)+1;this.buffer=new Array(_u3);this._s5=new Uint32Array(_u3);for(let _B3=0;_B3<_u3;++_B3)this.buffer[_B3]=new Float32Array(_r5);}process(_E3,_F3,parameters){const input=_E3[0];const output=_F3[0];const bypass=parameters.bypass;const time=parameters.time;const feedback=parameters.feedback;
const mix=parameters.mix;for(let _B3=0;_B3<input.length;++_B3){const _G3=input[_B3];const _H3=output[_B3];for(let _I3=0;_I3<_G3.length;++_I3){_H3[_I3]=_G3[_I3];const _t5=(time[_I3]!==undefined)?time[_I3]:time[0];const _u5=this.__4(_B3,_t5);const _q4=(feedback[_I3]!==undefined)?feedback[_I3]:feedback[0];const _v5=_G3[_I3]+(_u5*_q4);this.write(_B3,_v5);const _L3=(bypass[_I3]!==undefined)?bypass[_I3]:bypass[0];if(_L3>0.0){continue;}const _M3=(mix[_I3]!==undefined)?mix[_I3]:mix[0];_H3[_I3]*=(1-_M3);_H3[_I3]+=(_u5*_M3);
}}return this._N3;}__4(_w5,_x5){const _y5=_x5*sampleRate;let _35=(this._s5[_w5]-~~_y5);let _45=(_35-1);while(_35<0)_35+=this.buffer[_w5].length;while(_45<0)_45+=this.buffer[_w5].length;const _z5=_y5-~~_y5;const _55=this.buffer[_w5][_35];const _65=this.buffer[_w5][_45];return _55+(_65-_55)*_z5;}write(_w5,_b3){++this._s5[_w5];this._s5[_w5]%=this.buffer[_w5].length;this.buffer[_w5][this._s5[_w5]]=_b3;}}registerProcessor("delay-processor",_p5);AudioWorkletProcessor.prototype._t3=function(){this._N3=true;this.port.onmessage=(_A5)=>{
if(_A5.data==="kill")this._N3=false;};};;class _B5 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1}];}constructor(){super();this._t3();}process(_E3,_F3,parameters){const input=_E3[0];const bypass=parameters.bypass;for(let _B3=0;_B3<input.length;++_B3){const _G3=input[_B3];for(let _I3=0;_I3<_G3.length;++_I3){const _L3=(bypass[_I3]!==undefined)?bypass[_I3]:bypass[0];_F3[_L3][_B3][_I3]=_G3[_I3];}}return this._N3;
}}class _C5 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"gain",automationRate:"a-rate",defaultValue:1,minValue:0}];}constructor(){super();this._t3();}process(_E3,_F3,parameters){const _X3=_E3[0];const _Y3=_E3[1];const output=_F3[0];const gain=parameters.gain;for(let _B3=0;_B3<_Y3.length;++_B3){const _G3=_Y3[_B3];const _H3=output[_B3];for(let _I3=0;_I3<_G3.length;++_I3)_H3[_I3]=_G3[_I3];}for(let _B3=0;_B3<_X3.length;++_B3){const _G3=_X3[_B3];const _H3=output[_B3];for(let _I3=0;_I3<_G3.length;
++_I3){const _r4=(gain[_I3]!==undefined)?gain[_I3]:gain[0];_H3[_I3]+=_G3[_I3]*_r4;}}return this._N3;}}registerProcessor("audio-bus-input",_B5);registerProcessor("audio-bus-output",_C5);class _D5 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"gain",automationRate:"a-rate",defaultValue:1.0,minValue:0.0},{name:"factor",automationRate:"a-rate",defaultValue:20,minValue:1,maxValue:100},{name:"resolution",
automationRate:"a-rate",defaultValue:8,minValue:2,maxValue:16},{name:"mix",automationRate:"a-rate",defaultValue:0.8,minValue:0.0,maxValue:1.0}];}static _E5=[undefined,undefined,2,4,8,16,32,64,128,256,512,1024,2048,4096,8192,16384,32768];constructor(_s3){super();this._t3();const _u3=_s3.outputChannelCount[0];this._F5=new Float32Array(_u3);this._G5=new Uint32Array(_u3);}process(_E3,_F3,parameters){const input=_E3[0];const output=_F3[0];const bypass=parameters.bypass;const gain=parameters.gain;const factor=parameters.factor;
const resolution=parameters.resolution;const mix=parameters.mix;for(let _B3=0;_B3<input.length;++_B3){const _G3=input[_B3];const _H3=output[_B3];for(let _I3=0;_I3<_G3.length;++_I3){_H3[_I3]=_G3[_I3];if(this._G5[_B3]===0)this._F5[_B3]=_G3[_I3];const _q4=(factor[_I3]!==undefined)?factor[_I3]:factor[0];++this._G5[_B3];this._G5[_B3]%=_q4;const _L3=(bypass[_I3]!==undefined)?bypass[_I3]:bypass[0];if(_L3>0.0){continue;}let _K3=this._F5[_B3];const _r4=(gain[_I3]!==undefined)?gain[_I3]:gain[0];_K3*=_r4;_K3=Math.max(Math.min(_K3,
1.0),-1.0);const _H5=(resolution[_I3]!==undefined)?resolution[_I3]:resolution[0];const max=(_K3>0.0)?_D5._E5[_H5]-1:_D5._E5[_H5];_K3=Math.round(_K3*max)/max;const _M3=(mix[_I3]!==undefined)?mix[_I3]:mix[0];_H3[_I3]*=(1.0-_M3);_H3[_I3]+=(_K3*_M3);}}return this._N3;}}registerProcessor("bitcrusher-processor",_D5);class _I5 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"rate",automationRate:"a-rate",defaultValue:5.0,
minValue:0.0,maxValue:20.0},{name:"intensity",automationRate:"a-rate",defaultValue:1.0,minValue:0.0,maxValue:1.0},{name:"offset",automationRate:"a-rate",defaultValue:0.0,minValue:0.0,maxValue:1.0},{name:"shape",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:4}];}constructor(_s3){super();this._t3();const _u3=_s3.outputChannelCount[0];this._J5=new Array(_u3).fill(1.0);this._K5=new Array(_u3).fill(0.0);this._L5=new Array(_u3).fill(_H4._I4._J4);this._M5=new Array(_u3);for(let _B3=0;_B3<_u3;++_B3){
this._M5[_B3]=new _75();this._M5[_B3]._f5(sampleRate);this._M5[_B3]._i5(this._J5[_B3]);this._M5[_B3]._m5(this._L5[_B3]);if(_B3%2===1){this._M5[_B3]._j5(this._K5[_B3]);}}}process(_E3,_F3,parameters){const input=_E3[0];const output=_F3[0];const bypass=parameters.bypass;const rate=parameters.rate;const intensity=parameters.intensity;const offset=parameters.offset;const shape=parameters.shape;for(let _B3=0;_B3<input.length;++_B3){const _G3=input[_B3];const _H3=output[_B3];for(let _I3=0;_I3<_G3.length;++_I3){_H3[_I3]=_G3[_I3];
const _H5=(rate[_I3]!==undefined)?rate[_I3]:rate[0];const _N5=(offset[_I3]!==undefined)?offset[_I3]:offset[0];const _O5=(shape[_I3]!==undefined)?shape[_I3]:shape[0];this._P5(_B3,_H5,_N5,_O5);const _Q5=this._M5[_B3].__4();const _L3=(bypass[_I3]!==undefined)?bypass[_I3]:bypass[0];if(_L3>0.0){continue;}const _C3=(intensity[_I3]!==undefined)?intensity[_I3]:intensity[0];const out=_G3[_I3]*_Q5*_C3;_H3[_I3]*=(1.0-_C3);_H3[_I3]+=out;}}return this._N3;}_P5(_w5,_R5,_k5,_n5){if(_R5!==this._J5[_w5]){this._M5[_w5]._i5(_R5);
this._J5[_w5]=_R5;}if(_k5!==this._K5[_w5]){if(_w5%2===1){this._M5[_w5]._j5(_k5);}this._K5[_w5]=_k5;}if(_n5!==this._L5[_w5]){this._M5[_w5]._m5(_n5);this._L5[_w5]=_n5;}}}registerProcessor("tremolo-processor",_I5);class _S5{constructor(_x5=1e-3){this.setTime(_x5);}setTime(_x5){this._T5=Math.exp(-1/(_x5*sampleRate));}process(_U5,_V5){return _U5+this._T5*(_V5-_U5);}}class _W5{constructor(_X5,_Y5){this._Z5=new _S5(_X5);this.__5=new _S5(_Y5);this._06=_X5;this._16=_Y5;}_26(_x5){if(_x5===this._06)return;this._Z5.setTime(_x5);
this._06=_x5;}_36(_x5){if(_x5===this._16)return;this.__5.setTime(_x5);this._16=_x5;}process(_U5,_V5){if(_U5>_V5)return this._Z5.process(_U5,_V5);else return this.__5.process(_U5,_V5);}}class _46 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"ingain",automationRate:"a-rate",defaultValue:1,minValue:0},{name:"threshold",automationRate:"a-rate",defaultValue:0.125,minValue:1e-3,maxValue:1},{name:"ratio",
automationRate:"a-rate",defaultValue:4,minValue:1},{name:"attack",automationRate:"a-rate",defaultValue:0.05,minValue:1e-3,maxValue:1e-1},{name:"release",automationRate:"a-rate",defaultValue:0.25,minValue:1e-2,maxValue:1},{name:"outgain",automationRate:"a-rate",defaultValue:1,minValue:0}];}constructor(_56){super();this._t3();const _Z5=_46.parameterDescriptors.find(_66=>_66.name==="attack");const __5=_46.parameterDescriptors.find(_66=>_66.name==="release");this._76=new _W5(_Z5.defaultValue,__5.defaultValue);
this._86=0;}process(_96,_a6,_b6){const input=_96[0];const output=_a6[0];const bypass=_b6.bypass;const ingain=_b6.ingain;const outgain=_b6.outgain;const threshold=_b6.threshold;const ratio=_b6.ratio;const attack=_b6.attack;const release=_b6.release;if(input.length===0)return this._N3;for(let _I3=0;_I3<input[0].length;++_I3){let _c6=input.map(_d6=>_d6[_I3]);output.forEach((_d6,_e6)=>{_d6[_I3]=_c6[_e6];});const _f6=(ingain[_I3]!==undefined)?ingain[_I3]:ingain[0];_c6=_c6.map(_g6=>_g6*=_f6);const rect=_c6.map(_g6=>Math.abs(_g6));
const max=Math.max(...rect);const _h6=_i6(max);const _t5=(threshold[_I3]!==undefined)?threshold[_I3]:threshold[0];const _j6=_i6(_t5);const _k6=Math.max(0,_h6-_j6);const _Z5=(attack[_I3]!==undefined)?attack[_I3]:attack[0];const __5=(release[_I3]!==undefined)?release[_I3]:release[0];this._76._26(_Z5);this._76._36(__5);this._86=this._76.process(_k6,this._86);const _L3=(bypass[_I3]!==undefined)?bypass[_I3]:bypass[0];if(_L3>0)continue;const _H5=(ratio[_I3]!==undefined)?ratio[_I3]:ratio[0];const _l6=(this._86/_H5)-this._86;
const _r4=_m6(_l6);_c6=_c6.map(_g6=>_g6*=_r4);const _n6=(outgain[_I3]!==undefined)?outgain[_I3]:outgain[0];_c6=_c6.map(_g6=>_g6*=_n6);output.forEach((_d6,_e6)=>{_d6[_I3]=_c6[_e6];});}return this._N3;}}function _i6(_o6){return 20*Math.log10(_o6);}function _m6(_o6){return Math.pow(10,_o6/20);}registerProcessor("compressor-processor",_46);class _p6 extends AudioWorkletProcessor{static get parameterDescriptors(){const _n4=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,
minValue:0,maxValue:1},{name:"freq",automationRate:"a-rate",defaultValue:Math.min(500.0,_n4),minValue:10.0,maxValue:_n4},{name:"q",automationRate:"a-rate",defaultValue:1.0,minValue:1.0,maxValue:100.0},{name:"gain",automationRate:"a-rate",defaultValue:1e-2,minValue:1e-6}];}constructor(_s3){super();this._t3();const _u3=_s3.outputChannelCount[0];this._24=0;this._34=0;this._44=0;this._54=0;this._64=0;this._74=new Float32Array(_u3);this._84=new Float32Array(_u3);this._94=new Float32Array(_u3);this._a4=new Float32Array(_u3);
this._o4=-1;this._c4=-1;this._p4=-1;}process(_E3,_F3,parameters){const input=_E3[0];const output=_F3[0];const bypass=parameters.bypass;const freq=parameters.freq;const q=parameters.q;const gain=parameters.gain;const _d4=(freq.length===1&&q.length===1&&gain.length===1);if(_d4)this._e4(freq[0],q[0],gain[0]);for(let _B3=0;_B3<input.length;++_B3){const _G3=input[_B3];const _H3=output[_B3];for(let _I3=0;_I3<_G3.length;++_I3){if(_d4===!1){const _q4=(freq[_I3]!==undefined)?freq[_I3]:freq[0];const _f4=(q[_I3]!==undefined)?q[_I3]:q[0];
const _r4=(gain[_I3]!==undefined)?gain[_I3]:gain[0];this._e4(_q4,_f4,_r4);}const _g4=this._44*_G3[_I3]+this._54*this._74[_B3]+this._64*this._84[_B3]-this._24*this._94[_B3]-this._34*this._a4[_B3];this._84[_B3]=this._74[_B3];this._74[_B3]=_G3[_I3];this._a4[_B3]=this._94[_B3];this._94[_B3]=_g4;const _L3=(bypass[_I3]!==undefined)?bypass[_I3]:bypass[0];_H3[_I3]=(_L3>0)?_G3[_I3]:_g4;}}return this._N3;}_e4(_s4,_i4,_t4){if(_s4===this._o4&&_i4===this._c4&&_t4===this._p4)return;const _j4=2*Math.PI*_s4/sampleRate;
const _k4=Math.cos(_j4);const _u4=Math.sqrt(_t4);const _A4=_u4+1;const _B4=_u4-1;const _C4=_A4*_k4;const _D4=_B4*_k4;const _E4=_A4-_D4;const _F4=_A4+_D4;const alpha=Math.sin(_j4)/(2*_i4);const _G4=(2*Math.sqrt(_u4)*alpha);const _l4=_F4+_G4;const _24=-2*(_B4+_C4);const _34=_F4-_G4;const _44=_u4*(_E4+_G4);const _54=2*_u4*(_B4-_C4);const _64=_u4*(_E4-_G4);this._24=_24/_l4;this._34=_34/_l4;this._44=_44/_l4;this._54=_54/_l4;this._64=_64/_l4;this._o4=_s4;this._c4=_i4;this._p4=_t4;}}registerProcessor("lo-shelf-processor",
_p6);