class _S1{constructor(_T1){this._U1=0;this._V1=0;this.feedback=0;this._W1=0;this.buffer=new Float32Array(_T1);this._X1=0;}process(_Y1){const out=this.buffer[this._X1];this._W1=(this._W1*this._U1)+(out*this._V1);this.buffer[this._X1]=_Y1+(this._W1*this.feedback);++this._X1;this._X1%=this.buffer.length;return out;}_Z1(__1){this.feedback=Math.min(Math.max(0,__1),1);}_02(_12){this._U1=Math.min(Math.max(0,_12),1);this._V1=1-this._U1;}}class _22{constructor(_T1){this.feedback=0;this.buffer=new Float32Array(_T1);
this._X1=0;}process(_Y1){const out=this.buffer[this._X1];this.buffer[this._X1]=_Y1+(out*this.feedback);++this._X1;this._X1%=this.buffer.length;return(out-_Y1);}_Z1(__1){this.feedback=Math.min(Math.max(0,__1),1);}}class _32 extends AudioWorkletProcessor{static _42=8;static _52=4;static _62=0.015;static _72=0.4;static _82=0.28;static _92=0.7;static _a2=[1116,1188,1277,1356,1422,1491,1557,1617];static _b2=[1139,1211,1300,1379,1445,1514,1580,1640];static _c2=[556,441,341,225];static _d2=[579,464,364,248];static get parameterDescriptors(){
return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"size",automationRate:"a-rate",defaultValue:0.7,minValue:0.0,maxValue:1.0},{name:"damp",automationRate:"a-rate",defaultValue:0.1,minValue:0.0,maxValue:1.0},{name:"mix",automationRate:"a-rate",defaultValue:0.35,minValue:0.0,maxValue:1.0}];}constructor(_e2){super();this._f2();const _g2=_e2.outputChannelCount[0];this._h2=-1;this._i2=-1;this._j2=new Array(_g2);this._k2=new Array(_g2);const _l2=[_32._a2,_32._b2];const _m2=[_32._c2,
_32._d2];for(let _n2=0;_n2<_g2;++_n2){this._j2[_n2]=new Array(_32._42);this._k2[_n2]=new Array(_32._52);for(let _o2=0;_o2<_32._42;++_o2)this._j2[_n2][_o2]=new _S1(_l2[_n2%_l2.length][_o2]);for(let _o2=0;_o2<_32._52;++_o2)this._k2[_n2][_o2]=new _22(_m2[_n2%_m2.length][_o2]);}this._p2(0.5);this._02(0.5);for(let _n2=0;_n2<_g2;++_n2)for(let _o2=0;_o2<_32._52;++_o2)this._k2[_n2][_o2]._Z1(0.5);}process(_q2,_r2,parameters){const input=_q2[0];const output=_r2[0];const bypass=parameters.bypass;const size=parameters.size;
const damp=parameters.damp;const mix=parameters.mix;for(let _n2=0;_n2<input.length;++_n2){const _s2=input[_n2];const _t2=output[_n2];for(let _u2=0;_u2<_s2.length;++_u2){const _u2=(size[_u2]!==undefined)?size[_u2]:size[0];const _v2=(damp[_u2]!==undefined)?damp[_u2]:damp[0];this._p2(_u2);this._02(_v2);_t2[_u2]=_s2[_u2];let out=0;const _w2=_s2[_u2]*_32._62;for(let _o2=0;_o2<_32._42;++_o2)out+=this._j2[_n2][_o2].process(_w2);for(let _o2=0;_o2<_32._52;++_o2)out=this._k2[_n2][_o2].process(out);const _x2=(bypass[_u2]!==undefined)?bypass[_u2]:bypass[0];
if(_x2>0.0){continue;}const _y2=(mix[_u2]!==undefined)?mix[_u2]:mix[0];_t2[_u2]*=(1-_y2);_t2[_u2]+=(out*_y2);}}return this._z2;}_p2(_T1){if(_T1===this._h2)return;const size=(_T1*_32._82)+_32._92;for(let _n2=0;_n2<this._j2.length;++_n2)for(let _o2=0;_o2<_32._42;++_o2)this._j2[_n2][_o2]._Z1(size);this._h2=_T1;}_02(_12){if(_12===this._i2)return;const damp=_12*_32._72;for(let _n2=0;_n2<this._j2.length;++_n2)for(let _o2=0;_o2<_32._42;++_o2)this._j2[_n2][_o2]._02(damp);this._i2=_12;}}registerProcessor("reverb1-processor",
_32);class _A2 extends AudioWorkletProcessor{static get parameterDescriptors(){return [];}constructor(){super();this._f2();}process(_B2,_C2,_D2){const input=_B2[0];const _E2=_C2[0];const _F2=_C2[1];for(let _n2=0;_n2<input.length;++_n2){const _s2=input[_n2];const _G2=_E2[_n2];const _H2=_F2[_n2];for(let _u2=0;_u2<_s2.length;++_u2){_G2[_u2]=_s2[_u2];_H2[_u2]=_s2[_u2];}}return this._z2;}}class _I2 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,
minValue:0,maxValue:1}];}constructor(){super();this._f2();}process(_B2,_C2,_D2){const _J2=_B2[0];const _K2=_B2[1];const output=_C2[0];const bypass=_D2.bypass;for(let _n2=0;_n2<_K2.length;++_n2){const _L2=_J2[_n2];const _M2=_K2[_n2];const _t2=output[_n2];for(let _u2=0;_u2<_L2.length;++_u2){const _x2=(bypass[_u2]!==undefined)?bypass[_u2]:bypass[0];if(_x2>0){_t2[_u2]=_M2[_u2];}else {_t2[_u2]=_L2[_u2];}}}return this._z2;}}registerProcessor("eq-input",_A2);registerProcessor("eq-output",_I2);class _N2 extends AudioWorkletProcessor{
static get parameterDescriptors(){const _O2=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"cutoff",automationRate:"a-rate",defaultValue:Math.min(500.0,_O2),minValue:10.0,maxValue:_O2},{name:"q",automationRate:"a-rate",defaultValue:1.5,minValue:1.0,maxValue:100.0}];}constructor(_e2){super();this._f2();const _g2=_e2.outputChannelCount[0];this._P2=0;this._Q2=0;this._R2=0;this._S2=0;this._T2=0;this._U2=new Float32Array(_g2);this._V2=new Float32Array(_g2);
this._W2=new Float32Array(_g2);this._X2=new Float32Array(_g2);this._Y2=-1;this._Z2=-1;}process(_q2,_r2,parameters){const input=_q2[0];const output=_r2[0];const bypass=parameters.bypass;const cutoff=parameters.cutoff;const q=parameters.q;const __2=(cutoff.length===1&&q.length===1);if(__2)this._03(cutoff[0],q[0]);for(let _n2=0;_n2<input.length;++_n2){const _s2=input[_n2];const _t2=output[_n2];for(let _u2=0;_u2<_s2.length;++_u2){if(__2===!1){const _n2=(cutoff[_u2]!==undefined)?cutoff[_u2]:cutoff[0];const _13=(q[_u2]!==undefined)?q[_u2]:q[0];
this._03(_n2,_13);}const _23=this._R2*_s2[_u2]+this._S2*this._U2[_n2]+this._T2*this._V2[_n2]-this._P2*this._W2[_n2]-this._Q2*this._X2[_n2];this._V2[_n2]=this._U2[_n2];this._U2[_n2]=_s2[_u2];this._X2[_n2]=this._W2[_n2];this._W2[_n2]=_23;const _x2=(bypass[_u2]!==undefined)?bypass[_u2]:bypass[0];_t2[_u2]=(_x2>0)?_s2[_u2]:_23;}}return this._z2;}_03(_33,_43){if(_33===this._Y2&&_43===this._Z2)return;const _53=2*Math.PI*_33/sampleRate;const alpha=Math.sin(_53)/(2*_43);const _63=Math.cos(_53);const _73=1+alpha;
const _P2=-2*_63;const _Q2=1-alpha;const _R2=(1-_63)/2;const _S2=1-_63;const _T2=(1-_63)/2;this._P2=_P2/_73;this._Q2=_Q2/_73;this._R2=_R2/_73;this._S2=_S2/_73;this._T2=_T2/_73;this._Y2=_33;this._Z2=_43;}}registerProcessor("lpf2-processor",_N2);class _83 extends AudioWorkletProcessor{static get parameterDescriptors(){const _93=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"freq",automationRate:"a-rate",defaultValue:Math.min(1500.0,
_93),minValue:10.0,maxValue:_93},{name:"q",automationRate:"a-rate",defaultValue:1.0,minValue:1.0,maxValue:100.0},{name:"gain",automationRate:"a-rate",defaultValue:1e-2,minValue:1e-6}];}constructor(_e2){super();this._f2();const _g2=_e2.outputChannelCount[0];this._P2=0;this._Q2=0;this._R2=0;this._S2=0;this._T2=0;this._U2=new Float32Array(_g2);this._V2=new Float32Array(_g2);this._W2=new Float32Array(_g2);this._X2=new Float32Array(_g2);this._a3=-1;this._Z2=-1;this._b3=-1;}process(_q2,_r2,parameters){const input=_q2[0];
const output=_r2[0];const bypass=parameters.bypass;const freq=parameters.freq;const q=parameters.q;const gain=parameters.gain;const __2=(freq.length===1&&q.length===1&&gain.length===1);if(__2)this._03(freq[0],q[0],gain[0]);for(let _n2=0;_n2<input.length;++_n2){const _s2=input[_n2];const _t2=output[_n2];for(let _u2=0;_u2<_s2.length;++_u2){if(__2===!1){const _c3=(freq[_u2]!==undefined)?freq[_u2]:freq[0];const _13=(q[_u2]!==undefined)?q[_u2]:q[0];const _d3=(gain[_u2]!==undefined)?gain[_u2]:gain[0];this._03(_c3,
_13,_d3);}const _23=this._R2*_s2[_u2]+this._S2*this._U2[_n2]+this._T2*this._V2[_n2]-this._P2*this._W2[_n2]-this._Q2*this._X2[_n2];this._V2[_n2]=this._U2[_n2];this._U2[_n2]=_s2[_u2];this._X2[_n2]=this._W2[_n2];this._W2[_n2]=_23;const _x2=(bypass[_u2]!==undefined)?bypass[_u2]:bypass[0];_t2[_u2]=(_x2>0)?_s2[_u2]:_23;}}return this._z2;}_03(_e3,_43,_f3){if(_e3===this._a3&&_43===this._Z2&&_f3===this._b3)return;const _53=2*Math.PI*_e3/sampleRate;const _63=Math.cos(_53);const _g3=Math.sqrt(_f3);const alpha=Math.sin(_53)/(2*_43);
const _h3=alpha/_g3;const _i3=alpha*_g3;const _73=1+_h3;const _P2=-2*_63;const _Q2=1-_h3;const _R2=1+_i3;const _S2=_P2;const _T2=1-_i3;this._P2=_P2/_73;this._Q2=_Q2/_73;this._R2=_R2/_73;this._S2=_S2/_73;this._T2=_T2/_73;this._a3=_e3;this._Z2=_43;this._b3=_f3;}}registerProcessor("peak-eq-processor",_83);class _j3 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"gain",automationRate:"a-rate",defaultValue:0.5,
minValue:0.0}];}constructor(){super();this._f2();}process(_q2,_r2,parameters){const input=_q2[0];const output=_r2[0];const bypass=parameters.bypass;const gain=parameters.gain;for(let _n2=0;_n2<input.length;++_n2){const _s2=input[_n2];const _t2=output[_n2];for(let _u2=0;_u2<_s2.length;++_u2){_t2[_u2]=_s2[_u2];const _x2=(bypass[_u2]!==undefined)?bypass[_u2]:bypass[0];if(_x2>0.0){continue;}const _d3=(gain[_u2]!==undefined)?gain[_u2]:gain[0];_t2[_u2]*=_d3;}}return this._z2;}}registerProcessor("gain-processor",
_j3);class _k3 extends AudioWorkletProcessor{static get parameterDescriptors(){const _O2=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"cutoff",automationRate:"a-rate",defaultValue:Math.min(1500.0,_O2),minValue:10.0,maxValue:_O2},{name:"q",automationRate:"a-rate",defaultValue:1.5,minValue:1.0,maxValue:100.0}];}constructor(_e2){super();this._f2();const _g2=_e2.outputChannelCount[0];this._P2=0;this._Q2=0;this._R2=0;this._S2=0;this._T2=0;
this._U2=new Float32Array(_g2);this._V2=new Float32Array(_g2);this._W2=new Float32Array(_g2);this._X2=new Float32Array(_g2);this._Y2=-1;this._Z2=-1;}process(_q2,_r2,parameters){const input=_q2[0];const output=_r2[0];const bypass=parameters.bypass;const cutoff=parameters.cutoff;const q=parameters.q;const __2=(cutoff.length===1&&q.length===1);if(__2)this._03(cutoff[0],q[0]);for(let _n2=0;_n2<input.length;++_n2){const _s2=input[_n2];const _t2=output[_n2];for(let _u2=0;_u2<_s2.length;++_u2){if(__2===!1){const _n2=(cutoff[_u2]!==undefined)?cutoff[_u2]:cutoff[0];
const _13=(q[_u2]!==undefined)?q[_u2]:q[0];this._03(_n2,_13);}const _23=this._R2*_s2[_u2]+this._S2*this._U2[_n2]+this._T2*this._V2[_n2]-this._P2*this._W2[_n2]-this._Q2*this._X2[_n2];this._V2[_n2]=this._U2[_n2];this._U2[_n2]=_s2[_u2];this._X2[_n2]=this._W2[_n2];this._W2[_n2]=_23;const _x2=(bypass[_u2]!==undefined)?bypass[_u2]:bypass[0];_t2[_u2]=(_x2>0)?_s2[_u2]:_23;}}return this._z2;}_03(_33,_43){if(_33===this._Y2&&_43===this._Z2)return;const _53=2*Math.PI*_33/sampleRate;const alpha=Math.sin(_53)/(2*_43);
const _63=Math.cos(_53);const _73=1+alpha;const _P2=-2*_63;const _Q2=1-alpha;const _R2=(1+_63)/2;const _S2=-1-_63;const _T2=(1+_63)/2;this._P2=_P2/_73;this._Q2=_Q2/_73;this._R2=_R2/_73;this._S2=_S2/_73;this._T2=_T2/_73;this._Y2=_33;this._Z2=_43;}}registerProcessor("hpf2-processor",_k3);class _l3 extends AudioWorkletProcessor{static get parameterDescriptors(){const _93=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"freq",automationRate:"a-rate",
defaultValue:Math.min(5000.0,_93),minValue:10.0,maxValue:_93},{name:"q",automationRate:"a-rate",defaultValue:1.0,minValue:1.0,maxValue:100.0},{name:"gain",automationRate:"a-rate",defaultValue:1e-2,minValue:1e-6}];}constructor(_e2){super();this._f2();const _g2=_e2.outputChannelCount[0];this._P2=0;this._Q2=0;this._R2=0;this._S2=0;this._T2=0;this._U2=new Float32Array(_g2);this._V2=new Float32Array(_g2);this._W2=new Float32Array(_g2);this._X2=new Float32Array(_g2);this._a3=-1;this._Z2=-1;this._b3=-1;}process(_q2,
_r2,parameters){const input=_q2[0];const output=_r2[0];const bypass=parameters.bypass;const freq=parameters.freq;const q=parameters.q;const gain=parameters.gain;const __2=(freq.length===1&&q.length===1&&gain.length===1);if(__2)this._03(freq[0],q[0],gain[0]);for(let _n2=0;_n2<input.length;++_n2){const _s2=input[_n2];const _t2=output[_n2];for(let _u2=0;_u2<_s2.length;++_u2){if(__2===!1){const _c3=(freq[_u2]!==undefined)?freq[_u2]:freq[0];const _13=(q[_u2]!==undefined)?q[_u2]:q[0];const _d3=(gain[_u2]!==undefined)?gain[_u2]:gain[0];
this._03(_c3,_13,_d3);}const _23=this._R2*_s2[_u2]+this._S2*this._U2[_n2]+this._T2*this._V2[_n2]-this._P2*this._W2[_n2]-this._Q2*this._X2[_n2];this._V2[_n2]=this._U2[_n2];this._U2[_n2]=_s2[_u2];this._X2[_n2]=this._W2[_n2];this._W2[_n2]=_23;const _x2=(bypass[_u2]!==undefined)?bypass[_u2]:bypass[0];_t2[_u2]=(_x2>0)?_s2[_u2]:_23;}}return this._z2;}_03(_e3,_43,_f3){if(_e3===this._a3&&_43===this._Z2&&_f3===this._b3)return;const _53=2*Math.PI*_e3/sampleRate;const _63=Math.cos(_53);const _g3=Math.sqrt(_f3);const _m3=_g3+1;
const _n3=_g3-1;const _o3=_m3*_63;const _p3=_n3*_63;const _q3=_m3-_p3;const _r3=_m3+_p3;const alpha=Math.sin(_53)/(2*_43);const _s3=(2*Math.sqrt(_g3)*alpha);const _73=_q3+_s3;const _P2=2*(_n3-_o3);const _Q2=_q3-_s3;const _R2=_g3*(_r3+_s3);const _S2=-2*_g3*(_n3+_o3);const _T2=_g3*(_r3-_s3);this._P2=_P2/_73;this._Q2=_Q2/_73;this._R2=_R2/_73;this._S2=_S2/_73;this._T2=_T2/_73;this._a3=_e3;this._Z2=_43;this._b3=_f3;}}registerProcessor("hi-shelf-processor",_l3);function _t3(){}_t3._u3={_v3:0,_w3:1,_x3:2,_y3:3,_z3:4,
_A3:5};_t3._B3=function(_C3){return 1.0-_C3;};_t3._D3=function(_C3){return _C3;};_t3._E3=function(_C3){return 0.5*(Math.sin((_C3*2.0*Math.PI)-(Math.PI/2.0))+1.0);};_t3._F3=function(_C3){if(_C3<0.5){return 0.0;}return 1.0;};_t3._G3=function(_C3){if(_C3<0.5){return 2.0*_C3;}return 2.0-(2.0*_C3);};_t3._H3=[_t3._B3,_t3._D3,_t3._E3,_t3._F3,_t3._G3];_I3._J3=512;_I3._K3=1.0/_I3._J3;function _I3(_L3){this.data=new Float32Array(_I3._J3);for(let _o2=0;_o2<_I3._J3;++_o2){this.data[_o2]=_L3(_o2*_I3._K3);}}_I3.prototype._M3=function(_C3){
_C3=Math.max(0.0,_C3);_C3=Math.min(_C3,1.0);const _N3=_C3*_I3._J3;const _O3=~~_N3;const _P3=_N3-_O3;let _Q3=_O3;let _R3=_Q3+1;if(_Q3>=_I3._J3){_Q3-=_I3._J3;}if(_R3>=_I3._J3){_R3-=_I3._J3;}const _S3=this.data[_Q3];const _T3=this.data[_R3];return _S3+(_T3-_S3)*_P3;};;_U3._V3=[];_U3._W3=!1;_U3._X3=0.0;_U3._93=20.0;function _U3(){this._Y3=48000;this.shape=_t3._u3._x3;this.freq=1.0;this._Z3=0.0;this._K3=0.0;this.__3=0.0;if(_U3._W3==true){return;}for(let _o2=0;_o2<_t3._u3._A3;++_o2){_U3._V3[_o2]=new _I3(_t3._H3[_o2]);
}_U3._W3=true;}_U3._04=function(){return(_U3._W3==!0);};_U3.prototype._14=function(_24){this._Y3=_24;this._34();};;_U3.prototype._44=function(_e3){_e3=Math.max(_U3._X3,_e3);_e3=Math.min(_e3,_U3._93);this.freq=_e3;this._34();};;_U3.prototype._54=function(_64){_64=Math.max(0.0,_64);_64=Math.min(_64,1.0);const _74=_64-this.__3;this.__3=_64;this._Z3+=_74;while(this._Z3>=1.0){this._Z3-=1.0;}while(this._Z3<0.0){this._Z3+=1.0;}};;_U3.prototype._84=function(_94){_94=Math.max(0,_94);_94=Math.min(_94,_t3._u3._A3-1);
this.shape=_94;};;_U3.prototype._M3=function(){const _a4=_U3._V3[this.shape]._M3(this._Z3);this._Z3+=this._K3;while(this._Z3>=1.0){this._Z3-=1.0;}return _a4;};;_U3.prototype._34=function(){this._K3=this.freq/this._Y3;};;class _b4 extends AudioWorkletProcessor{static _c4=5.0;static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"time",automationRate:"a-rate",defaultValue:0.2,minValue:0.0,maxValue:_b4._c4},{name:"feedback",automationRate:"a-rate",
defaultValue:0.5,minValue:0.0,maxValue:1.0},{name:"mix",automationRate:"a-rate",defaultValue:0.35,minValue:0.0,maxValue:1.0}];}constructor(_e2){super();this._f2();const _g2=_e2.outputChannelCount[0];const _d4=(_b4._c4*sampleRate)+1;this.buffer=new Array(_g2);this._e4=new Uint32Array(_g2);for(let _n2=0;_n2<_g2;++_n2)this.buffer[_n2]=new Float32Array(_d4);}process(_q2,_r2,parameters){const input=_q2[0];const output=_r2[0];const bypass=parameters.bypass;const time=parameters.time;const feedback=parameters.feedback;
const mix=parameters.mix;for(let _n2=0;_n2<input.length;++_n2){const _s2=input[_n2];const _t2=output[_n2];for(let _u2=0;_u2<_s2.length;++_u2){_t2[_u2]=_s2[_u2];const _f4=(time[_u2]!==undefined)?time[_u2]:time[0];const _g4=this._M3(_n2,_f4);const _c3=(feedback[_u2]!==undefined)?feedback[_u2]:feedback[0];const _h4=_s2[_u2]+(_g4*_c3);this.write(_n2,_h4);const _x2=(bypass[_u2]!==undefined)?bypass[_u2]:bypass[0];if(_x2>0.0){continue;}const _y2=(mix[_u2]!==undefined)?mix[_u2]:mix[0];_t2[_u2]*=(1-_y2);_t2[_u2]+=(_g4*_y2);
}}return this._z2;}_M3(_i4,_j4){const _k4=_j4*sampleRate;let _Q3=(this._e4[_i4]-~~_k4);let _R3=(_Q3-1);while(_Q3<0)_Q3+=this.buffer[_i4].length;while(_R3<0)_R3+=this.buffer[_i4].length;const _l4=_k4-~~_k4;const _S3=this.buffer[_i4][_Q3];const _T3=this.buffer[_i4][_R3];return _S3+(_T3-_S3)*_l4;}write(_i4,_Y1){++this._e4[_i4];this._e4[_i4]%=this.buffer[_i4].length;this.buffer[_i4][this._e4[_i4]]=_Y1;}}registerProcessor("delay-processor",_b4);AudioWorkletProcessor.prototype._f2=function(){this._z2=true;this.port.onmessage=(_m4)=>{
if(_m4.data==="kill")this._z2=false;};};;class _n4 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1}];}constructor(){super();this._f2();}process(_q2,_r2,parameters){const input=_q2[0];const bypass=parameters.bypass;for(let _n2=0;_n2<input.length;++_n2){const _s2=input[_n2];for(let _u2=0;_u2<_s2.length;++_u2){const _x2=(bypass[_u2]!==undefined)?bypass[_u2]:bypass[0];_r2[_x2][_n2][_u2]=_s2[_u2];}}return this._z2;
}}class _o4 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"gain",automationRate:"a-rate",defaultValue:1,minValue:0}];}constructor(){super();this._f2();}process(_q2,_r2,parameters){const _J2=_q2[0];const _K2=_q2[1];const output=_r2[0];const gain=parameters.gain;for(let _n2=0;_n2<_K2.length;++_n2){const _s2=_K2[_n2];const _t2=output[_n2];for(let _u2=0;_u2<_s2.length;++_u2)_t2[_u2]=_s2[_u2];}for(let _n2=0;_n2<_J2.length;++_n2){const _s2=_J2[_n2];const _t2=output[_n2];for(let _u2=0;_u2<_s2.length;
++_u2){const _d3=(gain[_u2]!==undefined)?gain[_u2]:gain[0];_t2[_u2]+=_s2[_u2]*_d3;}}return this._z2;}}registerProcessor("audio-bus-input",_n4);registerProcessor("audio-bus-output",_o4);class _p4 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"gain",automationRate:"a-rate",defaultValue:1.0,minValue:0.0},{name:"factor",automationRate:"a-rate",defaultValue:20,minValue:1,maxValue:100},{name:"resolution",
automationRate:"a-rate",defaultValue:8,minValue:2,maxValue:16},{name:"mix",automationRate:"a-rate",defaultValue:0.8,minValue:0.0,maxValue:1.0}];}static _q4=[undefined,undefined,2,4,8,16,32,64,128,256,512,1024,2048,4096,8192,16384,32768];constructor(_e2){super();this._f2();const _g2=_e2.outputChannelCount[0];this._r4=new Float32Array(_g2);this._s4=new Uint32Array(_g2);}process(_q2,_r2,parameters){const input=_q2[0];const output=_r2[0];const bypass=parameters.bypass;const gain=parameters.gain;const factor=parameters.factor;
const resolution=parameters.resolution;const mix=parameters.mix;for(let _n2=0;_n2<input.length;++_n2){const _s2=input[_n2];const _t2=output[_n2];for(let _u2=0;_u2<_s2.length;++_u2){_t2[_u2]=_s2[_u2];if(this._s4[_n2]===0)this._r4[_n2]=_s2[_u2];const _c3=(factor[_u2]!==undefined)?factor[_u2]:factor[0];++this._s4[_n2];this._s4[_n2]%=_c3;const _x2=(bypass[_u2]!==undefined)?bypass[_u2]:bypass[0];if(_x2>0.0){continue;}let _w2=this._r4[_n2];const _d3=(gain[_u2]!==undefined)?gain[_u2]:gain[0];_w2*=_d3;_w2=Math.max(Math.min(_w2,
1.0),-1.0);const _t4=(resolution[_u2]!==undefined)?resolution[_u2]:resolution[0];const max=(_w2>0.0)?_p4._q4[_t4]-1:_p4._q4[_t4];_w2=Math.round(_w2*max)/max;const _y2=(mix[_u2]!==undefined)?mix[_u2]:mix[0];_t2[_u2]*=(1.0-_y2);_t2[_u2]+=(_w2*_y2);}}return this._z2;}}registerProcessor("bitcrusher-processor",_p4);class _u4 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"rate",automationRate:"a-rate",defaultValue:5.0,
minValue:0.0,maxValue:20.0},{name:"intensity",automationRate:"a-rate",defaultValue:1.0,minValue:0.0,maxValue:1.0},{name:"offset",automationRate:"a-rate",defaultValue:0.0,minValue:0.0,maxValue:1.0},{name:"shape",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:4}];}constructor(_e2){super();this._f2();const _g2=_e2.outputChannelCount[0];this._v4=new Array(_g2).fill(1.0);this._w4=new Array(_g2).fill(0.0);this._x4=new Array(_g2).fill(_t3._u3._v3);this._y4=new Array(_g2);for(let _n2=0;_n2<_g2;++_n2){
this._y4[_n2]=new _U3();this._y4[_n2]._14(sampleRate);this._y4[_n2]._44(this._v4[_n2]);this._y4[_n2]._84(this._x4[_n2]);if(_n2%2===1){this._y4[_n2]._54(this._w4[_n2]);}}}process(_q2,_r2,parameters){const input=_q2[0];const output=_r2[0];const bypass=parameters.bypass;const rate=parameters.rate;const intensity=parameters.intensity;const offset=parameters.offset;const shape=parameters.shape;for(let _n2=0;_n2<input.length;++_n2){const _s2=input[_n2];const _t2=output[_n2];for(let _u2=0;_u2<_s2.length;++_u2){_t2[_u2]=_s2[_u2];
const _t4=(rate[_u2]!==undefined)?rate[_u2]:rate[0];const _z4=(offset[_u2]!==undefined)?offset[_u2]:offset[0];const _A4=(shape[_u2]!==undefined)?shape[_u2]:shape[0];this._B4(_n2,_t4,_z4,_A4);const _C4=this._y4[_n2]._M3();const _x2=(bypass[_u2]!==undefined)?bypass[_u2]:bypass[0];if(_x2>0.0){continue;}const _o2=(intensity[_u2]!==undefined)?intensity[_u2]:intensity[0];const out=_s2[_u2]*_C4*_o2;_t2[_u2]*=(1.0-_o2);_t2[_u2]+=out;}}return this._z2;}_B4(_i4,_D4,_64,_94){if(_D4!==this._v4[_i4]){this._y4[_i4]._44(_D4);
this._v4[_i4]=_D4;}if(_64!==this._w4[_i4]){if(_i4%2===1){this._y4[_i4]._54(_64);}this._w4[_i4]=_64;}if(_94!==this._x4[_i4]){this._y4[_i4]._84(_94);this._x4[_i4]=_94;}}}registerProcessor("tremolo-processor",_u4);class _E4{constructor(_j4=1e-3){this.setTime(_j4);}setTime(_j4){this._F4=Math.exp(-1/(_j4*sampleRate));}process(_G4,_H4){return _G4+this._F4*(_H4-_G4);}}class _I4{constructor(_J4,_K4){this._L4=new _E4(_J4);this._M4=new _E4(_K4);this._N4=_J4;this._O4=_K4;}_P4(_j4){if(_j4===this._N4)return;this._L4.setTime(_j4);
this._N4=_j4;}_Q4(_j4){if(_j4===this._O4)return;this._M4.setTime(_j4);this._O4=_j4;}process(_G4,_H4){if(_G4>_H4)return this._L4.process(_G4,_H4);else return this._M4.process(_G4,_H4);}}class _R4 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"ingain",automationRate:"a-rate",defaultValue:1,minValue:0},{name:"threshold",automationRate:"a-rate",defaultValue:0.125,minValue:1e-3,maxValue:1},{name:"ratio",
automationRate:"a-rate",defaultValue:4,minValue:1},{name:"attack",automationRate:"a-rate",defaultValue:0.05,minValue:1e-3,maxValue:1e-1},{name:"release",automationRate:"a-rate",defaultValue:0.25,minValue:1e-2,maxValue:1},{name:"outgain",automationRate:"a-rate",defaultValue:1,minValue:0}];}constructor(_S4){super();this._f2();const _L4=_R4.parameterDescriptors.find(_T4=>_T4.name==="attack");const _M4=_R4.parameterDescriptors.find(_T4=>_T4.name==="release");this._U4=new _I4(_L4.defaultValue,_M4.defaultValue);
this._V4=0;}process(_W4,_X4,_Y4){const input=_W4[0];const output=_X4[0];const bypass=_Y4.bypass;const ingain=_Y4.ingain;const outgain=_Y4.outgain;const threshold=_Y4.threshold;const ratio=_Y4.ratio;const attack=_Y4.attack;const release=_Y4.release;if(input.length===0)return this._z2;for(let _u2=0;_u2<input[0].length;++_u2){let _Z4=input.map(__4=>__4[_u2]);output.forEach((__4,_05)=>{__4[_u2]=_Z4[_05];});const _15=(ingain[_u2]!==undefined)?ingain[_u2]:ingain[0];_Z4=_Z4.map(_25=>_25*=_15);const rect=_Z4.map(_25=>Math.abs(_25));
const max=Math.max(...rect);const _35=_45(max);const _f4=(threshold[_u2]!==undefined)?threshold[_u2]:threshold[0];const _55=_45(_f4);const _65=Math.max(0,_35-_55);const _L4=(attack[_u2]!==undefined)?attack[_u2]:attack[0];const _M4=(release[_u2]!==undefined)?release[_u2]:release[0];this._U4._P4(_L4);this._U4._Q4(_M4);this._V4=this._U4.process(_65,this._V4);const _x2=(bypass[_u2]!==undefined)?bypass[_u2]:bypass[0];if(_x2>0)continue;const _t4=(ratio[_u2]!==undefined)?ratio[_u2]:ratio[0];const _75=(this._V4/_t4)-this._V4;
const _d3=_85(_75);_Z4=_Z4.map(_25=>_25*=_d3);const _95=(outgain[_u2]!==undefined)?outgain[_u2]:outgain[0];_Z4=_Z4.map(_25=>_25*=_95);output.forEach((__4,_05)=>{__4[_u2]=_Z4[_05];});}return this._z2;}}function _45(_a5){return 20*Math.log10(_a5);}function _85(_a5){return Math.pow(10,_a5/20);}registerProcessor("compressor-processor",_R4);class _b5 extends AudioWorkletProcessor{static get parameterDescriptors(){const _93=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,
minValue:0,maxValue:1},{name:"freq",automationRate:"a-rate",defaultValue:Math.min(500.0,_93),minValue:10.0,maxValue:_93},{name:"q",automationRate:"a-rate",defaultValue:1.0,minValue:1.0,maxValue:100.0},{name:"gain",automationRate:"a-rate",defaultValue:1e-2,minValue:1e-6}];}constructor(_e2){super();this._f2();const _g2=_e2.outputChannelCount[0];this._P2=0;this._Q2=0;this._R2=0;this._S2=0;this._T2=0;this._U2=new Float32Array(_g2);this._V2=new Float32Array(_g2);this._W2=new Float32Array(_g2);this._X2=new Float32Array(_g2);
this._a3=-1;this._Z2=-1;this._b3=-1;}process(_q2,_r2,parameters){const input=_q2[0];const output=_r2[0];const bypass=parameters.bypass;const freq=parameters.freq;const q=parameters.q;const gain=parameters.gain;const __2=(freq.length===1&&q.length===1&&gain.length===1);if(__2)this._03(freq[0],q[0],gain[0]);for(let _n2=0;_n2<input.length;++_n2){const _s2=input[_n2];const _t2=output[_n2];for(let _u2=0;_u2<_s2.length;++_u2){if(__2===!1){const _c3=(freq[_u2]!==undefined)?freq[_u2]:freq[0];const _13=(q[_u2]!==undefined)?q[_u2]:q[0];
const _d3=(gain[_u2]!==undefined)?gain[_u2]:gain[0];this._03(_c3,_13,_d3);}const _23=this._R2*_s2[_u2]+this._S2*this._U2[_n2]+this._T2*this._V2[_n2]-this._P2*this._W2[_n2]-this._Q2*this._X2[_n2];this._V2[_n2]=this._U2[_n2];this._U2[_n2]=_s2[_u2];this._X2[_n2]=this._W2[_n2];this._W2[_n2]=_23;const _x2=(bypass[_u2]!==undefined)?bypass[_u2]:bypass[0];_t2[_u2]=(_x2>0)?_s2[_u2]:_23;}}return this._z2;}_03(_e3,_43,_f3){if(_e3===this._a3&&_43===this._Z2&&_f3===this._b3)return;const _53=2*Math.PI*_e3/sampleRate;
const _63=Math.cos(_53);const _g3=Math.sqrt(_f3);const _m3=_g3+1;const _n3=_g3-1;const _o3=_m3*_63;const _p3=_n3*_63;const _q3=_m3-_p3;const _r3=_m3+_p3;const alpha=Math.sin(_53)/(2*_43);const _s3=(2*Math.sqrt(_g3)*alpha);const _73=_r3+_s3;const _P2=-2*(_n3+_o3);const _Q2=_r3-_s3;const _R2=_g3*(_q3+_s3);const _S2=2*_g3*(_n3-_o3);const _T2=_g3*(_q3-_s3);this._P2=_P2/_73;this._Q2=_Q2/_73;this._R2=_R2/_73;this._S2=_S2/_73;this._T2=_T2/_73;this._a3=_e3;this._Z2=_43;this._b3=_f3;}}registerProcessor("lo-shelf-processor",
_b5);