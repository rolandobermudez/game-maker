class _12{constructor(_22){this._32=0;this._42=0;this.feedback=0;this._52=0;this.buffer=new Float32Array(_22);this._62=0;}process(_72){const out=this.buffer[this._62];this._52=(this._52*this._32)+(out*this._42);this.buffer[this._62]=_72+(this._52*this.feedback);++this._62;this._62%=this.buffer.length;return out;}_82(_92){this.feedback=Math.min(Math.max(0,_92),1);}_a2(_b2){this._32=Math.min(Math.max(0,_b2),1);this._42=1-this._32;}}class _c2{constructor(_22){this.feedback=0;this.buffer=new Float32Array(_22);
this._62=0;}process(_72){const out=this.buffer[this._62];this.buffer[this._62]=_72+(out*this.feedback);++this._62;this._62%=this.buffer.length;return(out-_72);}_82(_92){this.feedback=Math.min(Math.max(0,_92),1);}}class _d2 extends AudioWorkletProcessor{static _e2=8;static _f2=4;static _g2=0.015;static _h2=0.4;static _i2=0.28;static _j2=0.7;static _k2=[1116,1188,1277,1356,1422,1491,1557,1617];static _l2=[1139,1211,1300,1379,1445,1514,1580,1640];static _m2=[556,441,341,225];static _n2=[579,464,364,248];static get parameterDescriptors(){
return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"size",automationRate:"a-rate",defaultValue:0.7,minValue:0.0,maxValue:1.0},{name:"damp",automationRate:"a-rate",defaultValue:0.1,minValue:0.0,maxValue:1.0},{name:"mix",automationRate:"a-rate",defaultValue:0.35,minValue:0.0,maxValue:1.0}];}constructor(_o2){super();this._p2();const _q2=_o2.outputChannelCount[0];this._r2=-1;this._s2=-1;this._t2=new Array(_q2);this._u2=new Array(_q2);const _v2=[_d2._k2,_d2._l2];const _w2=[_d2._m2,
_d2._n2];for(let _x2=0;_x2<_q2;++_x2){this._t2[_x2]=new Array(_d2._e2);this._u2[_x2]=new Array(_d2._f2);for(let _y2=0;_y2<_d2._e2;++_y2)this._t2[_x2][_y2]=new _12(_v2[_x2%_v2.length][_y2]);for(let _y2=0;_y2<_d2._f2;++_y2)this._u2[_x2][_y2]=new _c2(_w2[_x2%_w2.length][_y2]);}this._z2(0.5);this._a2(0.5);for(let _x2=0;_x2<_q2;++_x2)for(let _y2=0;_y2<_d2._f2;++_y2)this._u2[_x2][_y2]._82(0.5);}process(_A2,_B2,parameters){const input=_A2[0];const output=_B2[0];const bypass=parameters.bypass;const size=parameters.size;
const damp=parameters.damp;const mix=parameters.mix;for(let _x2=0;_x2<input.length;++_x2){const _C2=input[_x2];const _D2=output[_x2];for(let _E2=0;_E2<_C2.length;++_E2){const _E2=(size[_E2]!==undefined)?size[_E2]:size[0];const _F2=(damp[_E2]!==undefined)?damp[_E2]:damp[0];this._z2(_E2);this._a2(_F2);_D2[_E2]=_C2[_E2];let out=0;const _G2=_C2[_E2]*_d2._g2;for(let _y2=0;_y2<_d2._e2;++_y2)out+=this._t2[_x2][_y2].process(_G2);for(let _y2=0;_y2<_d2._f2;++_y2)out=this._u2[_x2][_y2].process(out);const _H2=(bypass[_E2]!==undefined)?bypass[_E2]:bypass[0];
if(_H2>0.0){continue;}const _I2=(mix[_E2]!==undefined)?mix[_E2]:mix[0];_D2[_E2]*=(1-_I2);_D2[_E2]+=(out*_I2);}}return this._J2;}_z2(_22){if(_22===this._r2)return;const size=(_22*_d2._i2)+_d2._j2;for(let _x2=0;_x2<this._t2.length;++_x2)for(let _y2=0;_y2<_d2._e2;++_y2)this._t2[_x2][_y2]._82(size);this._r2=_22;}_a2(_b2){if(_b2===this._s2)return;const damp=_b2*_d2._h2;for(let _x2=0;_x2<this._t2.length;++_x2)for(let _y2=0;_y2<_d2._e2;++_y2)this._t2[_x2][_y2]._a2(damp);this._s2=_b2;}}registerProcessor("reverb1-processor",
_d2);class _K2 extends AudioWorkletProcessor{static get parameterDescriptors(){return [];}constructor(){super();this._p2();}process(_L2,_M2,_N2){const input=_L2[0];const _O2=_M2[0];const _P2=_M2[1];for(let _x2=0;_x2<input.length;++_x2){const _C2=input[_x2];const _Q2=_O2[_x2];const _R2=_P2[_x2];for(let _E2=0;_E2<_C2.length;++_E2){_Q2[_E2]=_C2[_E2];_R2[_E2]=_C2[_E2];}}return this._J2;}}class _S2 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,
minValue:0,maxValue:1}];}constructor(){super();this._p2();}process(_L2,_M2,_N2){const _T2=_L2[0];const _U2=_L2[1];const output=_M2[0];const bypass=_N2.bypass;for(let _x2=0;_x2<_U2.length;++_x2){const _V2=_T2[_x2];const _W2=_U2[_x2];const _D2=output[_x2];for(let _E2=0;_E2<_V2.length;++_E2){const _H2=(bypass[_E2]!==undefined)?bypass[_E2]:bypass[0];if(_H2>0){_D2[_E2]=_W2[_E2];}else {_D2[_E2]=_V2[_E2];}}}return this._J2;}}registerProcessor("eq-input",_K2);registerProcessor("eq-output",_S2);class _X2 extends AudioWorkletProcessor{
static get parameterDescriptors(){const _Y2=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"cutoff",automationRate:"a-rate",defaultValue:Math.min(500.0,_Y2),minValue:10.0,maxValue:_Y2},{name:"q",automationRate:"a-rate",defaultValue:1.5,minValue:1.0,maxValue:100.0}];}constructor(_o2){super();this._p2();const _q2=_o2.outputChannelCount[0];this._Z2=0;this.__2=0;this._03=0;this._13=0;this._23=0;this._33=new Float32Array(_q2);this._43=new Float32Array(_q2);
this._53=new Float32Array(_q2);this._63=new Float32Array(_q2);this._73=-1;this._83=-1;}process(_A2,_B2,parameters){const input=_A2[0];const output=_B2[0];const bypass=parameters.bypass;const cutoff=parameters.cutoff;const q=parameters.q;const _93=(cutoff.length===1&&q.length===1);if(_93)this._a3(cutoff[0],q[0]);for(let _x2=0;_x2<input.length;++_x2){const _C2=input[_x2];const _D2=output[_x2];for(let _E2=0;_E2<_C2.length;++_E2){if(_93===!1){const _x2=(cutoff[_E2]!==undefined)?cutoff[_E2]:cutoff[0];const _b3=(q[_E2]!==undefined)?q[_E2]:q[0];
this._a3(_x2,_b3);}const _c3=this._03*_C2[_E2]+this._13*this._33[_x2]+this._23*this._43[_x2]-this._Z2*this._53[_x2]-this.__2*this._63[_x2];this._43[_x2]=this._33[_x2];this._33[_x2]=_C2[_E2];this._63[_x2]=this._53[_x2];this._53[_x2]=_c3;const _H2=(bypass[_E2]!==undefined)?bypass[_E2]:bypass[0];_D2[_E2]=(_H2>0)?_C2[_E2]:_c3;}}return this._J2;}_a3(_d3,_e3){if(_d3===this._73&&_e3===this._83)return;const _f3=2*Math.PI*_d3/sampleRate;const alpha=Math.sin(_f3)/(2*_e3);const _g3=Math.cos(_f3);const _h3=1+alpha;
const _Z2=-2*_g3;const __2=1-alpha;const _03=(1-_g3)/2;const _13=1-_g3;const _23=(1-_g3)/2;this._Z2=_Z2/_h3;this.__2=__2/_h3;this._03=_03/_h3;this._13=_13/_h3;this._23=_23/_h3;this._73=_d3;this._83=_e3;}}registerProcessor("lpf2-processor",_X2);class _i3 extends AudioWorkletProcessor{static get parameterDescriptors(){const _j3=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"freq",automationRate:"a-rate",defaultValue:Math.min(1500.0,
_j3),minValue:10.0,maxValue:_j3},{name:"q",automationRate:"a-rate",defaultValue:1.0,minValue:1.0,maxValue:100.0},{name:"gain",automationRate:"a-rate",defaultValue:1e-2,minValue:1e-6}];}constructor(_o2){super();this._p2();const _q2=_o2.outputChannelCount[0];this._Z2=0;this.__2=0;this._03=0;this._13=0;this._23=0;this._33=new Float32Array(_q2);this._43=new Float32Array(_q2);this._53=new Float32Array(_q2);this._63=new Float32Array(_q2);this._k3=-1;this._83=-1;this._l3=-1;}process(_A2,_B2,parameters){const input=_A2[0];
const output=_B2[0];const bypass=parameters.bypass;const freq=parameters.freq;const q=parameters.q;const gain=parameters.gain;const _93=(freq.length===1&&q.length===1&&gain.length===1);if(_93)this._a3(freq[0],q[0],gain[0]);for(let _x2=0;_x2<input.length;++_x2){const _C2=input[_x2];const _D2=output[_x2];for(let _E2=0;_E2<_C2.length;++_E2){if(_93===!1){const _m3=(freq[_E2]!==undefined)?freq[_E2]:freq[0];const _b3=(q[_E2]!==undefined)?q[_E2]:q[0];const _n3=(gain[_E2]!==undefined)?gain[_E2]:gain[0];this._a3(_m3,
_b3,_n3);}const _c3=this._03*_C2[_E2]+this._13*this._33[_x2]+this._23*this._43[_x2]-this._Z2*this._53[_x2]-this.__2*this._63[_x2];this._43[_x2]=this._33[_x2];this._33[_x2]=_C2[_E2];this._63[_x2]=this._53[_x2];this._53[_x2]=_c3;const _H2=(bypass[_E2]!==undefined)?bypass[_E2]:bypass[0];_D2[_E2]=(_H2>0)?_C2[_E2]:_c3;}}return this._J2;}_a3(_o3,_e3,_p3){if(_o3===this._k3&&_e3===this._83&&_p3===this._l3)return;const _f3=2*Math.PI*_o3/sampleRate;const _g3=Math.cos(_f3);const _q3=Math.sqrt(_p3);const alpha=Math.sin(_f3)/(2*_e3);
const _r3=alpha/_q3;const _s3=alpha*_q3;const _h3=1+_r3;const _Z2=-2*_g3;const __2=1-_r3;const _03=1+_s3;const _13=_Z2;const _23=1-_s3;this._Z2=_Z2/_h3;this.__2=__2/_h3;this._03=_03/_h3;this._13=_13/_h3;this._23=_23/_h3;this._k3=_o3;this._83=_e3;this._l3=_p3;}}registerProcessor("peak-eq-processor",_i3);class _t3 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"gain",automationRate:"a-rate",defaultValue:0.5,
minValue:0.0}];}constructor(){super();this._p2();}process(_A2,_B2,parameters){const input=_A2[0];const output=_B2[0];const bypass=parameters.bypass;const gain=parameters.gain;for(let _x2=0;_x2<input.length;++_x2){const _C2=input[_x2];const _D2=output[_x2];for(let _E2=0;_E2<_C2.length;++_E2){_D2[_E2]=_C2[_E2];const _H2=(bypass[_E2]!==undefined)?bypass[_E2]:bypass[0];if(_H2>0.0){continue;}const _n3=(gain[_E2]!==undefined)?gain[_E2]:gain[0];_D2[_E2]*=_n3;}}return this._J2;}}registerProcessor("gain-processor",
_t3);class _u3 extends AudioWorkletProcessor{static get parameterDescriptors(){const _Y2=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"cutoff",automationRate:"a-rate",defaultValue:Math.min(1500.0,_Y2),minValue:10.0,maxValue:_Y2},{name:"q",automationRate:"a-rate",defaultValue:1.5,minValue:1.0,maxValue:100.0}];}constructor(_o2){super();this._p2();const _q2=_o2.outputChannelCount[0];this._Z2=0;this.__2=0;this._03=0;this._13=0;this._23=0;
this._33=new Float32Array(_q2);this._43=new Float32Array(_q2);this._53=new Float32Array(_q2);this._63=new Float32Array(_q2);this._73=-1;this._83=-1;}process(_A2,_B2,parameters){const input=_A2[0];const output=_B2[0];const bypass=parameters.bypass;const cutoff=parameters.cutoff;const q=parameters.q;const _93=(cutoff.length===1&&q.length===1);if(_93)this._a3(cutoff[0],q[0]);for(let _x2=0;_x2<input.length;++_x2){const _C2=input[_x2];const _D2=output[_x2];for(let _E2=0;_E2<_C2.length;++_E2){if(_93===!1){const _x2=(cutoff[_E2]!==undefined)?cutoff[_E2]:cutoff[0];
const _b3=(q[_E2]!==undefined)?q[_E2]:q[0];this._a3(_x2,_b3);}const _c3=this._03*_C2[_E2]+this._13*this._33[_x2]+this._23*this._43[_x2]-this._Z2*this._53[_x2]-this.__2*this._63[_x2];this._43[_x2]=this._33[_x2];this._33[_x2]=_C2[_E2];this._63[_x2]=this._53[_x2];this._53[_x2]=_c3;const _H2=(bypass[_E2]!==undefined)?bypass[_E2]:bypass[0];_D2[_E2]=(_H2>0)?_C2[_E2]:_c3;}}return this._J2;}_a3(_d3,_e3){if(_d3===this._73&&_e3===this._83)return;const _f3=2*Math.PI*_d3/sampleRate;const alpha=Math.sin(_f3)/(2*_e3);
const _g3=Math.cos(_f3);const _h3=1+alpha;const _Z2=-2*_g3;const __2=1-alpha;const _03=(1+_g3)/2;const _13=-1-_g3;const _23=(1+_g3)/2;this._Z2=_Z2/_h3;this.__2=__2/_h3;this._03=_03/_h3;this._13=_13/_h3;this._23=_23/_h3;this._73=_d3;this._83=_e3;}}registerProcessor("hpf2-processor",_u3);class _v3 extends AudioWorkletProcessor{static get parameterDescriptors(){const _j3=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"freq",automationRate:"a-rate",
defaultValue:Math.min(5000.0,_j3),minValue:10.0,maxValue:_j3},{name:"q",automationRate:"a-rate",defaultValue:1.0,minValue:1.0,maxValue:100.0},{name:"gain",automationRate:"a-rate",defaultValue:1e-2,minValue:1e-6}];}constructor(_o2){super();this._p2();const _q2=_o2.outputChannelCount[0];this._Z2=0;this.__2=0;this._03=0;this._13=0;this._23=0;this._33=new Float32Array(_q2);this._43=new Float32Array(_q2);this._53=new Float32Array(_q2);this._63=new Float32Array(_q2);this._k3=-1;this._83=-1;this._l3=-1;}process(_A2,
_B2,parameters){const input=_A2[0];const output=_B2[0];const bypass=parameters.bypass;const freq=parameters.freq;const q=parameters.q;const gain=parameters.gain;const _93=(freq.length===1&&q.length===1&&gain.length===1);if(_93)this._a3(freq[0],q[0],gain[0]);for(let _x2=0;_x2<input.length;++_x2){const _C2=input[_x2];const _D2=output[_x2];for(let _E2=0;_E2<_C2.length;++_E2){if(_93===!1){const _m3=(freq[_E2]!==undefined)?freq[_E2]:freq[0];const _b3=(q[_E2]!==undefined)?q[_E2]:q[0];const _n3=(gain[_E2]!==undefined)?gain[_E2]:gain[0];
this._a3(_m3,_b3,_n3);}const _c3=this._03*_C2[_E2]+this._13*this._33[_x2]+this._23*this._43[_x2]-this._Z2*this._53[_x2]-this.__2*this._63[_x2];this._43[_x2]=this._33[_x2];this._33[_x2]=_C2[_E2];this._63[_x2]=this._53[_x2];this._53[_x2]=_c3;const _H2=(bypass[_E2]!==undefined)?bypass[_E2]:bypass[0];_D2[_E2]=(_H2>0)?_C2[_E2]:_c3;}}return this._J2;}_a3(_o3,_e3,_p3){if(_o3===this._k3&&_e3===this._83&&_p3===this._l3)return;const _f3=2*Math.PI*_o3/sampleRate;const _g3=Math.cos(_f3);const _q3=Math.sqrt(_p3);const _w3=_q3+1;
const _x3=_q3-1;const _y3=_w3*_g3;const _z3=_x3*_g3;const _A3=_w3-_z3;const _B3=_w3+_z3;const alpha=Math.sin(_f3)/(2*_e3);const _C3=(2*Math.sqrt(_q3)*alpha);const _h3=_A3+_C3;const _Z2=2*(_x3-_y3);const __2=_A3-_C3;const _03=_q3*(_B3+_C3);const _13=-2*_q3*(_x3+_y3);const _23=_q3*(_B3-_C3);this._Z2=_Z2/_h3;this.__2=__2/_h3;this._03=_03/_h3;this._13=_13/_h3;this._23=_23/_h3;this._k3=_o3;this._83=_e3;this._l3=_p3;}}registerProcessor("hi-shelf-processor",_v3);function _D3(){}_D3._E3={_F3:0,_G3:1,_H3:2,_I3:3,_J3:4,
_K3:5};_D3._L3=function(_M3){return 1.0-_M3;};_D3._N3=function(_M3){return _M3;};_D3._O3=function(_M3){return 0.5*(Math.sin((_M3*2.0*Math.PI)-(Math.PI/2.0))+1.0);};_D3._P3=function(_M3){if(_M3<0.5){return 0.0;}return 1.0;};_D3._Q3=function(_M3){if(_M3<0.5){return 2.0*_M3;}return 2.0-(2.0*_M3);};_D3._R3=[_D3._L3,_D3._N3,_D3._O3,_D3._P3,_D3._Q3];_S3._T3=512;_S3._U3=1.0/_S3._T3;function _S3(_V3){this.data=new Float32Array(_S3._T3);for(let _y2=0;_y2<_S3._T3;++_y2){this.data[_y2]=_V3(_y2*_S3._U3);}}_S3.prototype._W3=function(_M3){
_M3=Math.max(0.0,_M3);_M3=Math.min(_M3,1.0);const _X3=_M3*_S3._T3;const _Y3=~~_X3;const _Z3=_X3-_Y3;let __3=_Y3;let _04=__3+1;if(__3>=_S3._T3){__3-=_S3._T3;}if(_04>=_S3._T3){_04-=_S3._T3;}const _14=this.data[__3];const _24=this.data[_04];return _14+(_24-_14)*_Z3;};;_34._44=[];_34._54=!1;_34._64=0.0;_34._j3=20.0;function _34(){this._74=48000;this.shape=_D3._E3._H3;this.freq=1.0;this._84=0.0;this._U3=0.0;this._94=0.0;if(_34._54==true){return;}for(let _y2=0;_y2<_D3._E3._K3;++_y2){_34._44[_y2]=new _S3(_D3._R3[_y2]);
}_34._54=true;}_34._a4=function(){return(_34._54==!0);};_34.prototype._b4=function(_c4){this._74=_c4;this._d4();};;_34.prototype._e4=function(_o3){_o3=Math.max(_34._64,_o3);_o3=Math.min(_o3,_34._j3);this.freq=_o3;this._d4();};;_34.prototype._f4=function(_g4){_g4=Math.max(0.0,_g4);_g4=Math.min(_g4,1.0);const _h4=_g4-this._94;this._94=_g4;this._84+=_h4;while(this._84>=1.0){this._84-=1.0;}while(this._84<0.0){this._84+=1.0;}};;_34.prototype._i4=function(_j4){_j4=Math.max(0,_j4);_j4=Math.min(_j4,_D3._E3._K3-1);
this.shape=_j4;};;_34.prototype._W3=function(){const _k4=_34._44[this.shape]._W3(this._84);this._84+=this._U3;while(this._84>=1.0){this._84-=1.0;}return _k4;};;_34.prototype._d4=function(){this._U3=this.freq/this._74;};;class _l4 extends AudioWorkletProcessor{static _m4=5.0;static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"time",automationRate:"a-rate",defaultValue:0.2,minValue:0.0,maxValue:_l4._m4},{name:"feedback",automationRate:"a-rate",
defaultValue:0.5,minValue:0.0,maxValue:1.0},{name:"mix",automationRate:"a-rate",defaultValue:0.35,minValue:0.0,maxValue:1.0}];}constructor(_o2){super();this._p2();const _q2=_o2.outputChannelCount[0];const _n4=(_l4._m4*sampleRate)+1;this.buffer=new Array(_q2);this._o4=new Uint32Array(_q2);for(let _x2=0;_x2<_q2;++_x2)this.buffer[_x2]=new Float32Array(_n4);}process(_A2,_B2,parameters){const input=_A2[0];const output=_B2[0];const bypass=parameters.bypass;const time=parameters.time;const feedback=parameters.feedback;
const mix=parameters.mix;for(let _x2=0;_x2<input.length;++_x2){const _C2=input[_x2];const _D2=output[_x2];for(let _E2=0;_E2<_C2.length;++_E2){_D2[_E2]=_C2[_E2];const _p4=(time[_E2]!==undefined)?time[_E2]:time[0];const _q4=this._W3(_x2,_p4);const _m3=(feedback[_E2]!==undefined)?feedback[_E2]:feedback[0];const _r4=_C2[_E2]+(_q4*_m3);this.write(_x2,_r4);const _H2=(bypass[_E2]!==undefined)?bypass[_E2]:bypass[0];if(_H2>0.0){continue;}const _I2=(mix[_E2]!==undefined)?mix[_E2]:mix[0];_D2[_E2]*=(1-_I2);_D2[_E2]+=(_q4*_I2);
}}return this._J2;}_W3(_s4,_t4){const _u4=_t4*sampleRate;let __3=(this._o4[_s4]-~~_u4);let _04=(__3-1);while(__3<0)__3+=this.buffer[_s4].length;while(_04<0)_04+=this.buffer[_s4].length;const _v4=_u4-~~_u4;const _14=this.buffer[_s4][__3];const _24=this.buffer[_s4][_04];return _14+(_24-_14)*_v4;}write(_s4,_72){++this._o4[_s4];this._o4[_s4]%=this.buffer[_s4].length;this.buffer[_s4][this._o4[_s4]]=_72;}}registerProcessor("delay-processor",_l4);AudioWorkletProcessor.prototype._p2=function(){this._J2=true;this.port.onmessage=(_w4)=>{
if(_w4.data==="kill")this._J2=false;};};;class _x4 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1}];}constructor(){super();this._p2();}process(_A2,_B2,parameters){const input=_A2[0];const bypass=parameters.bypass;for(let _x2=0;_x2<input.length;++_x2){const _C2=input[_x2];for(let _E2=0;_E2<_C2.length;++_E2){const _H2=(bypass[_E2]!==undefined)?bypass[_E2]:bypass[0];_B2[_H2][_x2][_E2]=_C2[_E2];}}return this._J2;
}}class _y4 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"gain",automationRate:"a-rate",defaultValue:1,minValue:0}];}constructor(){super();this._p2();}process(_A2,_B2,parameters){const _T2=_A2[0];const _U2=_A2[1];const output=_B2[0];const gain=parameters.gain;for(let _x2=0;_x2<_U2.length;++_x2){const _C2=_U2[_x2];const _D2=output[_x2];for(let _E2=0;_E2<_C2.length;++_E2)_D2[_E2]=_C2[_E2];}for(let _x2=0;_x2<_T2.length;++_x2){const _C2=_T2[_x2];const _D2=output[_x2];for(let _E2=0;_E2<_C2.length;
++_E2){const _n3=(gain[_E2]!==undefined)?gain[_E2]:gain[0];_D2[_E2]+=_C2[_E2]*_n3;}}return this._J2;}}registerProcessor("audio-bus-input",_x4);registerProcessor("audio-bus-output",_y4);class _z4 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"gain",automationRate:"a-rate",defaultValue:1.0,minValue:0.0},{name:"factor",automationRate:"a-rate",defaultValue:20,minValue:1,maxValue:100},{name:"resolution",
automationRate:"a-rate",defaultValue:8,minValue:2,maxValue:16},{name:"mix",automationRate:"a-rate",defaultValue:0.8,minValue:0.0,maxValue:1.0}];}static _A4=[undefined,undefined,2,4,8,16,32,64,128,256,512,1024,2048,4096,8192,16384,32768];constructor(_o2){super();this._p2();const _q2=_o2.outputChannelCount[0];this._B4=new Float32Array(_q2);this._C4=new Uint32Array(_q2);}process(_A2,_B2,parameters){const input=_A2[0];const output=_B2[0];const bypass=parameters.bypass;const gain=parameters.gain;const factor=parameters.factor;
const resolution=parameters.resolution;const mix=parameters.mix;for(let _x2=0;_x2<input.length;++_x2){const _C2=input[_x2];const _D2=output[_x2];for(let _E2=0;_E2<_C2.length;++_E2){_D2[_E2]=_C2[_E2];if(this._C4[_x2]===0)this._B4[_x2]=_C2[_E2];const _m3=(factor[_E2]!==undefined)?factor[_E2]:factor[0];++this._C4[_x2];this._C4[_x2]%=_m3;const _H2=(bypass[_E2]!==undefined)?bypass[_E2]:bypass[0];if(_H2>0.0){continue;}let _G2=this._B4[_x2];const _n3=(gain[_E2]!==undefined)?gain[_E2]:gain[0];_G2*=_n3;_G2=Math.max(Math.min(_G2,
1.0),-1.0);const _D4=(resolution[_E2]!==undefined)?resolution[_E2]:resolution[0];const max=(_G2>0.0)?_z4._A4[_D4]-1:_z4._A4[_D4];_G2=Math.round(_G2*max)/max;const _I2=(mix[_E2]!==undefined)?mix[_E2]:mix[0];_D2[_E2]*=(1.0-_I2);_D2[_E2]+=(_G2*_I2);}}return this._J2;}}registerProcessor("bitcrusher-processor",_z4);class _E4 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"rate",automationRate:"a-rate",defaultValue:5.0,
minValue:0.0,maxValue:20.0},{name:"intensity",automationRate:"a-rate",defaultValue:1.0,minValue:0.0,maxValue:1.0},{name:"offset",automationRate:"a-rate",defaultValue:0.0,minValue:0.0,maxValue:1.0},{name:"shape",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:4}];}constructor(_o2){super();this._p2();const _q2=_o2.outputChannelCount[0];this._F4=new Array(_q2).fill(1.0);this._G4=new Array(_q2).fill(0.0);this._H4=new Array(_q2).fill(_D3._E3._F3);this._I4=new Array(_q2);for(let _x2=0;_x2<_q2;++_x2){
this._I4[_x2]=new _34();this._I4[_x2]._b4(sampleRate);this._I4[_x2]._e4(this._F4[_x2]);this._I4[_x2]._i4(this._H4[_x2]);if(_x2%2===1){this._I4[_x2]._f4(this._G4[_x2]);}}}process(_A2,_B2,parameters){const input=_A2[0];const output=_B2[0];const bypass=parameters.bypass;const rate=parameters.rate;const intensity=parameters.intensity;const offset=parameters.offset;const shape=parameters.shape;for(let _x2=0;_x2<input.length;++_x2){const _C2=input[_x2];const _D2=output[_x2];for(let _E2=0;_E2<_C2.length;++_E2){_D2[_E2]=_C2[_E2];
const _D4=(rate[_E2]!==undefined)?rate[_E2]:rate[0];const _J4=(offset[_E2]!==undefined)?offset[_E2]:offset[0];const _K4=(shape[_E2]!==undefined)?shape[_E2]:shape[0];this._L4(_x2,_D4,_J4,_K4);const _M4=this._I4[_x2]._W3();const _H2=(bypass[_E2]!==undefined)?bypass[_E2]:bypass[0];if(_H2>0.0){continue;}const _y2=(intensity[_E2]!==undefined)?intensity[_E2]:intensity[0];const out=_C2[_E2]*_M4*_y2;_D2[_E2]*=(1.0-_y2);_D2[_E2]+=out;}}return this._J2;}_L4(_s4,_N4,_g4,_j4){if(_N4!==this._F4[_s4]){this._I4[_s4]._e4(_N4);
this._F4[_s4]=_N4;}if(_g4!==this._G4[_s4]){if(_s4%2===1){this._I4[_s4]._f4(_g4);}this._G4[_s4]=_g4;}if(_j4!==this._H4[_s4]){this._I4[_s4]._i4(_j4);this._H4[_s4]=_j4;}}}registerProcessor("tremolo-processor",_E4);class _O4{constructor(_t4=1e-3){this.setTime(_t4);}setTime(_t4){this._P4=Math.exp(-1/(_t4*sampleRate));}process(_Q4,_R4){return _Q4+this._P4*(_R4-_Q4);}}class _S4{constructor(_T4,_U4){this._V4=new _O4(_T4);this._W4=new _O4(_U4);this._X4=_T4;this._Y4=_U4;}_Z4(_t4){if(_t4===this._X4)return;this._V4.setTime(_t4);
this._X4=_t4;}__4(_t4){if(_t4===this._Y4)return;this._W4.setTime(_t4);this._Y4=_t4;}process(_Q4,_R4){if(_Q4>_R4)return this._V4.process(_Q4,_R4);else return this._W4.process(_Q4,_R4);}}class _05 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"ingain",automationRate:"a-rate",defaultValue:1,minValue:0},{name:"threshold",automationRate:"a-rate",defaultValue:0.125,minValue:1e-3,maxValue:1},{name:"ratio",
automationRate:"a-rate",defaultValue:4,minValue:1},{name:"attack",automationRate:"a-rate",defaultValue:0.05,minValue:1e-3,maxValue:1e-1},{name:"release",automationRate:"a-rate",defaultValue:0.25,minValue:1e-2,maxValue:1},{name:"outgain",automationRate:"a-rate",defaultValue:1,minValue:0}];}constructor(_15){super();this._p2();const _V4=_05.parameterDescriptors.find(_25=>_25.name==="attack");const _W4=_05.parameterDescriptors.find(_25=>_25.name==="release");this._35=new _S4(_V4.defaultValue,_W4.defaultValue);
this._45=0;}process(_55,_65,_75){const input=_55[0];const output=_65[0];const bypass=_75.bypass;const ingain=_75.ingain;const outgain=_75.outgain;const threshold=_75.threshold;const ratio=_75.ratio;const attack=_75.attack;const release=_75.release;if(input.length===0)return this._J2;for(let _E2=0;_E2<input[0].length;++_E2){let _85=input.map(_95=>_95[_E2]);output.forEach((_95,_a5)=>{_95[_E2]=_85[_a5];});const _b5=(ingain[_E2]!==undefined)?ingain[_E2]:ingain[0];_85=_85.map(_c5=>_c5*=_b5);const rect=_85.map(_c5=>Math.abs(_c5));
const max=Math.max(...rect);const _d5=_e5(max);const _p4=(threshold[_E2]!==undefined)?threshold[_E2]:threshold[0];const _f5=_e5(_p4);const _g5=Math.max(0,_d5-_f5);const _V4=(attack[_E2]!==undefined)?attack[_E2]:attack[0];const _W4=(release[_E2]!==undefined)?release[_E2]:release[0];this._35._Z4(_V4);this._35.__4(_W4);this._45=this._35.process(_g5,this._45);const _H2=(bypass[_E2]!==undefined)?bypass[_E2]:bypass[0];if(_H2>0)continue;const _D4=(ratio[_E2]!==undefined)?ratio[_E2]:ratio[0];const _h5=(this._45/_D4)-this._45;
const _n3=_i5(_h5);_85=_85.map(_c5=>_c5*=_n3);const _j5=(outgain[_E2]!==undefined)?outgain[_E2]:outgain[0];_85=_85.map(_c5=>_c5*=_j5);output.forEach((_95,_a5)=>{_95[_E2]=_85[_a5];});}return this._J2;}}function _e5(_k5){return 20*Math.log10(_k5);}function _i5(_k5){return Math.pow(10,_k5/20);}registerProcessor("compressor-processor",_05);class _l5 extends AudioWorkletProcessor{static get parameterDescriptors(){const _j3=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,
minValue:0,maxValue:1},{name:"freq",automationRate:"a-rate",defaultValue:Math.min(500.0,_j3),minValue:10.0,maxValue:_j3},{name:"q",automationRate:"a-rate",defaultValue:1.0,minValue:1.0,maxValue:100.0},{name:"gain",automationRate:"a-rate",defaultValue:1e-2,minValue:1e-6}];}constructor(_o2){super();this._p2();const _q2=_o2.outputChannelCount[0];this._Z2=0;this.__2=0;this._03=0;this._13=0;this._23=0;this._33=new Float32Array(_q2);this._43=new Float32Array(_q2);this._53=new Float32Array(_q2);this._63=new Float32Array(_q2);
this._k3=-1;this._83=-1;this._l3=-1;}process(_A2,_B2,parameters){const input=_A2[0];const output=_B2[0];const bypass=parameters.bypass;const freq=parameters.freq;const q=parameters.q;const gain=parameters.gain;const _93=(freq.length===1&&q.length===1&&gain.length===1);if(_93)this._a3(freq[0],q[0],gain[0]);for(let _x2=0;_x2<input.length;++_x2){const _C2=input[_x2];const _D2=output[_x2];for(let _E2=0;_E2<_C2.length;++_E2){if(_93===!1){const _m3=(freq[_E2]!==undefined)?freq[_E2]:freq[0];const _b3=(q[_E2]!==undefined)?q[_E2]:q[0];
const _n3=(gain[_E2]!==undefined)?gain[_E2]:gain[0];this._a3(_m3,_b3,_n3);}const _c3=this._03*_C2[_E2]+this._13*this._33[_x2]+this._23*this._43[_x2]-this._Z2*this._53[_x2]-this.__2*this._63[_x2];this._43[_x2]=this._33[_x2];this._33[_x2]=_C2[_E2];this._63[_x2]=this._53[_x2];this._53[_x2]=_c3;const _H2=(bypass[_E2]!==undefined)?bypass[_E2]:bypass[0];_D2[_E2]=(_H2>0)?_C2[_E2]:_c3;}}return this._J2;}_a3(_o3,_e3,_p3){if(_o3===this._k3&&_e3===this._83&&_p3===this._l3)return;const _f3=2*Math.PI*_o3/sampleRate;
const _g3=Math.cos(_f3);const _q3=Math.sqrt(_p3);const _w3=_q3+1;const _x3=_q3-1;const _y3=_w3*_g3;const _z3=_x3*_g3;const _A3=_w3-_z3;const _B3=_w3+_z3;const alpha=Math.sin(_f3)/(2*_e3);const _C3=(2*Math.sqrt(_q3)*alpha);const _h3=_B3+_C3;const _Z2=-2*(_x3+_y3);const __2=_B3-_C3;const _03=_q3*(_A3+_C3);const _13=2*_q3*(_x3-_y3);const _23=_q3*(_A3-_C3);this._Z2=_Z2/_h3;this.__2=__2/_h3;this._03=_03/_h3;this._13=_13/_h3;this._23=_23/_h3;this._k3=_o3;this._83=_e3;this._l3=_p3;}}registerProcessor("lo-shelf-processor",
_l5);