class _F3{constructor(_G3){this._H3=0;this._I3=0;this.feedback=0;this._J3=0;this.buffer=new Float32Array(_G3);this._K3=0;}process(_L3){const out=this.buffer[this._K3];this._J3=(this._J3*this._H3)+(out*this._I3);this.buffer[this._K3]=_L3+(this._J3*this.feedback);++this._K3;this._K3%=this.buffer.length;return out;}_M3(_N3){this.feedback=Math.min(Math.max(0,_N3),1);}_O3(_P3){this._H3=Math.min(Math.max(0,_P3),1);this._I3=1-this._H3;}}class _Q3{constructor(_G3){this.feedback=0;this.buffer=new Float32Array(_G3);
this._K3=0;}process(_L3){const out=this.buffer[this._K3];this.buffer[this._K3]=_L3+(out*this.feedback);++this._K3;this._K3%=this.buffer.length;return(out-_L3);}_M3(_N3){this.feedback=Math.min(Math.max(0,_N3),1);}}class _R3 extends AudioWorkletProcessor{static _S3=8;static _T3=4;static _U3=0.015;static _V3=0.4;static _W3=0.28;static _X3=0.7;static _Y3=[1116,1188,1277,1356,1422,1491,1557,1617];static _Z3=[1139,1211,1300,1379,1445,1514,1580,1640];static __3=[556,441,341,225];static _04=[579,464,364,248];static get parameterDescriptors(){
return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"size",automationRate:"a-rate",defaultValue:0.7,minValue:0.0,maxValue:1.0},{name:"damp",automationRate:"a-rate",defaultValue:0.1,minValue:0.0,maxValue:1.0},{name:"mix",automationRate:"a-rate",defaultValue:0.35,minValue:0.0,maxValue:1.0}];}constructor(_14){super();this._24();const _34=_14.outputChannelCount[0];this._44=-1;this._54=-1;this._64=new Array(_34);this._74=new Array(_34);const _84=[_R3._Y3,_R3._Z3];const _94=[_R3.__3,
_R3._04];for(let _a4=0;_a4<_34;++_a4){this._64[_a4]=new Array(_R3._S3);this._74[_a4]=new Array(_R3._T3);for(let _b4=0;_b4<_R3._S3;++_b4)this._64[_a4][_b4]=new _F3(_84[_a4%_84.length][_b4]);for(let _b4=0;_b4<_R3._T3;++_b4)this._74[_a4][_b4]=new _Q3(_94[_a4%_94.length][_b4]);}this._c4(0.5);this._O3(0.5);for(let _a4=0;_a4<_34;++_a4)for(let _b4=0;_b4<_R3._T3;++_b4)this._74[_a4][_b4]._M3(0.5);}process(_d4,_e4,parameters){const input=_d4[0];const output=_e4[0];const bypass=parameters.bypass;const size=parameters.size;
const damp=parameters.damp;const mix=parameters.mix;for(let _a4=0;_a4<input.length;++_a4){const _f4=input[_a4];const _g4=output[_a4];for(let _h4=0;_h4<_f4.length;++_h4){const _h4=(size[_h4]!==undefined)?size[_h4]:size[0];const _i4=(damp[_h4]!==undefined)?damp[_h4]:damp[0];this._c4(_h4);this._O3(_i4);_g4[_h4]=_f4[_h4];let out=0;const _j4=_f4[_h4]*_R3._U3;for(let _b4=0;_b4<_R3._S3;++_b4)out+=this._64[_a4][_b4].process(_j4);for(let _b4=0;_b4<_R3._T3;++_b4)out=this._74[_a4][_b4].process(out);const _k4=(bypass[_h4]!==undefined)?bypass[_h4]:bypass[0];
if(_k4>0.0){continue;}const _l4=(mix[_h4]!==undefined)?mix[_h4]:mix[0];_g4[_h4]*=(1-_l4);_g4[_h4]+=(out*_l4);}}return this._m4;}_c4(_G3){if(_G3===this._44)return;const size=(_G3*_R3._W3)+_R3._X3;for(let _a4=0;_a4<this._64.length;++_a4)for(let _b4=0;_b4<_R3._S3;++_b4)this._64[_a4][_b4]._M3(size);this._44=_G3;}_O3(_P3){if(_P3===this._54)return;const damp=_P3*_R3._V3;for(let _a4=0;_a4<this._64.length;++_a4)for(let _b4=0;_b4<_R3._S3;++_b4)this._64[_a4][_b4]._O3(damp);this._54=_P3;}}registerProcessor("reverb1-processor",
_R3);class _n4 extends AudioWorkletProcessor{static get parameterDescriptors(){return [];}constructor(){super();this._24();}process(_o4,_p4,_q4){const input=_o4[0];const _r4=_p4[0];const _s4=_p4[1];for(let _a4=0;_a4<input.length;++_a4){const _f4=input[_a4];const _t4=_r4[_a4];const _u4=_s4[_a4];for(let _h4=0;_h4<_f4.length;++_h4){_t4[_h4]=_f4[_h4];_u4[_h4]=_f4[_h4];}}return this._m4;}}class _v4 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,
minValue:0,maxValue:1}];}constructor(){super();this._24();}process(_o4,_p4,_q4){const _w4=_o4[0];const _x4=_o4[1];const output=_p4[0];const bypass=_q4.bypass;for(let _a4=0;_a4<_x4.length;++_a4){const _y4=_w4[_a4];const _z4=_x4[_a4];const _g4=output[_a4];for(let _h4=0;_h4<_y4.length;++_h4){const _k4=(bypass[_h4]!==undefined)?bypass[_h4]:bypass[0];if(_k4>0){_g4[_h4]=_z4[_h4];}else {_g4[_h4]=_y4[_h4];}}}return this._m4;}}registerProcessor("eq-input",_n4);registerProcessor("eq-output",_v4);class _A4 extends AudioWorkletProcessor{
static get parameterDescriptors(){const _B4=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"cutoff",automationRate:"a-rate",defaultValue:Math.min(500.0,_B4),minValue:10.0,maxValue:_B4},{name:"q",automationRate:"a-rate",defaultValue:1.5,minValue:1.0,maxValue:100.0}];}constructor(_14){super();this._24();const _34=_14.outputChannelCount[0];this._C4=0;this._D4=0;this._E4=0;this._F4=0;this._G4=0;this._H4=new Float32Array(_34);this._I4=new Float32Array(_34);
this._J4=new Float32Array(_34);this._K4=new Float32Array(_34);this._L4=-1;this._M4=-1;}process(_d4,_e4,parameters){const input=_d4[0];const output=_e4[0];const bypass=parameters.bypass;const cutoff=parameters.cutoff;const q=parameters.q;const _N4=(cutoff.length===1&&q.length===1);if(_N4)this._O4(cutoff[0],q[0]);for(let _a4=0;_a4<input.length;++_a4){const _f4=input[_a4];const _g4=output[_a4];for(let _h4=0;_h4<_f4.length;++_h4){if(_N4===!1){const _a4=(cutoff[_h4]!==undefined)?cutoff[_h4]:cutoff[0];const _P4=(q[_h4]!==undefined)?q[_h4]:q[0];
this._O4(_a4,_P4);}const _Q4=this._E4*_f4[_h4]+this._F4*this._H4[_a4]+this._G4*this._I4[_a4]-this._C4*this._J4[_a4]-this._D4*this._K4[_a4];this._I4[_a4]=this._H4[_a4];this._H4[_a4]=_f4[_h4];this._K4[_a4]=this._J4[_a4];this._J4[_a4]=_Q4;const _k4=(bypass[_h4]!==undefined)?bypass[_h4]:bypass[0];_g4[_h4]=(_k4>0)?_f4[_h4]:_Q4;}}return this._m4;}_O4(_R4,_S4){if(_R4===this._L4&&_S4===this._M4)return;const _T4=2*Math.PI*_R4/sampleRate;const alpha=Math.sin(_T4)/(2*_S4);const _U4=Math.cos(_T4);const _V4=1+alpha;
const _C4=-2*_U4;const _D4=1-alpha;const _E4=(1-_U4)/2;const _F4=1-_U4;const _G4=(1-_U4)/2;this._C4=_C4/_V4;this._D4=_D4/_V4;this._E4=_E4/_V4;this._F4=_F4/_V4;this._G4=_G4/_V4;this._L4=_R4;this._M4=_S4;}}registerProcessor("lpf2-processor",_A4);class _W4 extends AudioWorkletProcessor{static get parameterDescriptors(){const _X4=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"freq",automationRate:"a-rate",defaultValue:Math.min(1500.0,
_X4),minValue:10.0,maxValue:_X4},{name:"q",automationRate:"a-rate",defaultValue:1.0,minValue:1.0,maxValue:100.0},{name:"gain",automationRate:"a-rate",defaultValue:1e-2,minValue:1e-6}];}constructor(_14){super();this._24();const _34=_14.outputChannelCount[0];this._C4=0;this._D4=0;this._E4=0;this._F4=0;this._G4=0;this._H4=new Float32Array(_34);this._I4=new Float32Array(_34);this._J4=new Float32Array(_34);this._K4=new Float32Array(_34);this._Y4=-1;this._M4=-1;this._Z4=-1;}process(_d4,_e4,parameters){const input=_d4[0];
const output=_e4[0];const bypass=parameters.bypass;const freq=parameters.freq;const q=parameters.q;const gain=parameters.gain;const _N4=(freq.length===1&&q.length===1&&gain.length===1);if(_N4)this._O4(freq[0],q[0],gain[0]);for(let _a4=0;_a4<input.length;++_a4){const _f4=input[_a4];const _g4=output[_a4];for(let _h4=0;_h4<_f4.length;++_h4){if(_N4===!1){const __4=(freq[_h4]!==undefined)?freq[_h4]:freq[0];const _P4=(q[_h4]!==undefined)?q[_h4]:q[0];const _05=(gain[_h4]!==undefined)?gain[_h4]:gain[0];this._O4(__4,
_P4,_05);}const _Q4=this._E4*_f4[_h4]+this._F4*this._H4[_a4]+this._G4*this._I4[_a4]-this._C4*this._J4[_a4]-this._D4*this._K4[_a4];this._I4[_a4]=this._H4[_a4];this._H4[_a4]=_f4[_h4];this._K4[_a4]=this._J4[_a4];this._J4[_a4]=_Q4;const _k4=(bypass[_h4]!==undefined)?bypass[_h4]:bypass[0];_g4[_h4]=(_k4>0)?_f4[_h4]:_Q4;}}return this._m4;}_O4(_15,_S4,_25){if(_15===this._Y4&&_S4===this._M4&&_25===this._Z4)return;const _T4=2*Math.PI*_15/sampleRate;const _U4=Math.cos(_T4);const _35=Math.sqrt(_25);const alpha=Math.sin(_T4)/(2*_S4);
const _45=alpha/_35;const _55=alpha*_35;const _V4=1+_45;const _C4=-2*_U4;const _D4=1-_45;const _E4=1+_55;const _F4=_C4;const _G4=1-_55;this._C4=_C4/_V4;this._D4=_D4/_V4;this._E4=_E4/_V4;this._F4=_F4/_V4;this._G4=_G4/_V4;this._Y4=_15;this._M4=_S4;this._Z4=_25;}}registerProcessor("peak-eq-processor",_W4);class _65 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"gain",automationRate:"a-rate",defaultValue:0.5,
minValue:0.0}];}constructor(){super();this._24();}process(_d4,_e4,parameters){const input=_d4[0];const output=_e4[0];const bypass=parameters.bypass;const gain=parameters.gain;for(let _a4=0;_a4<input.length;++_a4){const _f4=input[_a4];const _g4=output[_a4];for(let _h4=0;_h4<_f4.length;++_h4){_g4[_h4]=_f4[_h4];const _k4=(bypass[_h4]!==undefined)?bypass[_h4]:bypass[0];if(_k4>0.0){continue;}const _05=(gain[_h4]!==undefined)?gain[_h4]:gain[0];_g4[_h4]*=_05;}}return this._m4;}}registerProcessor("gain-processor",
_65);class _75 extends AudioWorkletProcessor{static get parameterDescriptors(){const _B4=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"cutoff",automationRate:"a-rate",defaultValue:Math.min(1500.0,_B4),minValue:10.0,maxValue:_B4},{name:"q",automationRate:"a-rate",defaultValue:1.5,minValue:1.0,maxValue:100.0}];}constructor(_14){super();this._24();const _34=_14.outputChannelCount[0];this._C4=0;this._D4=0;this._E4=0;this._F4=0;this._G4=0;
this._H4=new Float32Array(_34);this._I4=new Float32Array(_34);this._J4=new Float32Array(_34);this._K4=new Float32Array(_34);this._L4=-1;this._M4=-1;}process(_d4,_e4,parameters){const input=_d4[0];const output=_e4[0];const bypass=parameters.bypass;const cutoff=parameters.cutoff;const q=parameters.q;const _N4=(cutoff.length===1&&q.length===1);if(_N4)this._O4(cutoff[0],q[0]);for(let _a4=0;_a4<input.length;++_a4){const _f4=input[_a4];const _g4=output[_a4];for(let _h4=0;_h4<_f4.length;++_h4){if(_N4===!1){const _a4=(cutoff[_h4]!==undefined)?cutoff[_h4]:cutoff[0];
const _P4=(q[_h4]!==undefined)?q[_h4]:q[0];this._O4(_a4,_P4);}const _Q4=this._E4*_f4[_h4]+this._F4*this._H4[_a4]+this._G4*this._I4[_a4]-this._C4*this._J4[_a4]-this._D4*this._K4[_a4];this._I4[_a4]=this._H4[_a4];this._H4[_a4]=_f4[_h4];this._K4[_a4]=this._J4[_a4];this._J4[_a4]=_Q4;const _k4=(bypass[_h4]!==undefined)?bypass[_h4]:bypass[0];_g4[_h4]=(_k4>0)?_f4[_h4]:_Q4;}}return this._m4;}_O4(_R4,_S4){if(_R4===this._L4&&_S4===this._M4)return;const _T4=2*Math.PI*_R4/sampleRate;const alpha=Math.sin(_T4)/(2*_S4);
const _U4=Math.cos(_T4);const _V4=1+alpha;const _C4=-2*_U4;const _D4=1-alpha;const _E4=(1+_U4)/2;const _F4=-1-_U4;const _G4=(1+_U4)/2;this._C4=_C4/_V4;this._D4=_D4/_V4;this._E4=_E4/_V4;this._F4=_F4/_V4;this._G4=_G4/_V4;this._L4=_R4;this._M4=_S4;}}registerProcessor("hpf2-processor",_75);class _85 extends AudioWorkletProcessor{static get parameterDescriptors(){const _X4=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"freq",automationRate:"a-rate",
defaultValue:Math.min(5000.0,_X4),minValue:10.0,maxValue:_X4},{name:"q",automationRate:"a-rate",defaultValue:1.0,minValue:1.0,maxValue:100.0},{name:"gain",automationRate:"a-rate",defaultValue:1e-2,minValue:1e-6}];}constructor(_14){super();this._24();const _34=_14.outputChannelCount[0];this._C4=0;this._D4=0;this._E4=0;this._F4=0;this._G4=0;this._H4=new Float32Array(_34);this._I4=new Float32Array(_34);this._J4=new Float32Array(_34);this._K4=new Float32Array(_34);this._Y4=-1;this._M4=-1;this._Z4=-1;}process(_d4,
_e4,parameters){const input=_d4[0];const output=_e4[0];const bypass=parameters.bypass;const freq=parameters.freq;const q=parameters.q;const gain=parameters.gain;const _N4=(freq.length===1&&q.length===1&&gain.length===1);if(_N4)this._O4(freq[0],q[0],gain[0]);for(let _a4=0;_a4<input.length;++_a4){const _f4=input[_a4];const _g4=output[_a4];for(let _h4=0;_h4<_f4.length;++_h4){if(_N4===!1){const __4=(freq[_h4]!==undefined)?freq[_h4]:freq[0];const _P4=(q[_h4]!==undefined)?q[_h4]:q[0];const _05=(gain[_h4]!==undefined)?gain[_h4]:gain[0];
this._O4(__4,_P4,_05);}const _Q4=this._E4*_f4[_h4]+this._F4*this._H4[_a4]+this._G4*this._I4[_a4]-this._C4*this._J4[_a4]-this._D4*this._K4[_a4];this._I4[_a4]=this._H4[_a4];this._H4[_a4]=_f4[_h4];this._K4[_a4]=this._J4[_a4];this._J4[_a4]=_Q4;const _k4=(bypass[_h4]!==undefined)?bypass[_h4]:bypass[0];_g4[_h4]=(_k4>0)?_f4[_h4]:_Q4;}}return this._m4;}_O4(_15,_S4,_25){if(_15===this._Y4&&_S4===this._M4&&_25===this._Z4)return;const _T4=2*Math.PI*_15/sampleRate;const _U4=Math.cos(_T4);const _35=Math.sqrt(_25);const _95=_35+1;
const _a5=_35-1;const _b5=_95*_U4;const _c5=_a5*_U4;const _d5=_95-_c5;const _e5=_95+_c5;const alpha=Math.sin(_T4)/(2*_S4);const _f5=(2*Math.sqrt(_35)*alpha);const _V4=_d5+_f5;const _C4=2*(_a5-_b5);const _D4=_d5-_f5;const _E4=_35*(_e5+_f5);const _F4=-2*_35*(_a5+_b5);const _G4=_35*(_e5-_f5);this._C4=_C4/_V4;this._D4=_D4/_V4;this._E4=_E4/_V4;this._F4=_F4/_V4;this._G4=_G4/_V4;this._Y4=_15;this._M4=_S4;this._Z4=_25;}}registerProcessor("hi-shelf-processor",_85);function _g5(){}_g5._h5={_i5:0,_j5:1,_k5:2,_l5:3,_m5:4,
_n5:5};_g5._o5=function(_p5){return 1.0-_p5;};_g5._q5=function(_p5){return _p5;};_g5._r5=function(_p5){return 0.5*(Math.sin((_p5*2.0*Math.PI)-(Math.PI/2.0))+1.0);};_g5._s5=function(_p5){if(_p5<0.5){return 0.0;}return 1.0;};_g5._t5=function(_p5){if(_p5<0.5){return 2.0*_p5;}return 2.0-(2.0*_p5);};_g5._u5=[_g5._o5,_g5._q5,_g5._r5,_g5._s5,_g5._t5];_v5._w5=512;_v5._x5=1.0/_v5._w5;function _v5(_y5){this.data=new Float32Array(_v5._w5);for(let _b4=0;_b4<_v5._w5;++_b4){this.data[_b4]=_y5(_b4*_v5._x5);}}_v5.prototype._z5=function(_p5){
_p5=Math.max(0.0,_p5);_p5=Math.min(_p5,1.0);const _A5=_p5*_v5._w5;const _B5=~~_A5;const _C5=_A5-_B5;let _D5=_B5;let _E5=_D5+1;if(_D5>=_v5._w5){_D5-=_v5._w5;}if(_E5>=_v5._w5){_E5-=_v5._w5;}const _F5=this.data[_D5];const _G5=this.data[_E5];return _F5+(_G5-_F5)*_C5;};;_H5._I5=[];_H5._J5=!1;_H5._K5=0.0;_H5._X4=20.0;function _H5(){this._L5=48000;this.shape=_g5._h5._k5;this.freq=1.0;this._M5=0.0;this._x5=0.0;this._N5=0.0;if(_H5._J5==true){return;}for(let _b4=0;_b4<_g5._h5._n5;++_b4){_H5._I5[_b4]=new _v5(_g5._u5[_b4]);
}_H5._J5=true;}_H5._O5=function(){return(_H5._J5==!0);};_H5.prototype._P5=function(_Q5){this._L5=_Q5;this._R5();};;_H5.prototype._S5=function(_15){_15=Math.max(_H5._K5,_15);_15=Math.min(_15,_H5._X4);this.freq=_15;this._R5();};;_H5.prototype._T5=function(_U5){_U5=Math.max(0.0,_U5);_U5=Math.min(_U5,1.0);const _V5=_U5-this._N5;this._N5=_U5;this._M5+=_V5;while(this._M5>=1.0){this._M5-=1.0;}while(this._M5<0.0){this._M5+=1.0;}};;_H5.prototype._W5=function(_X5){_X5=Math.max(0,_X5);_X5=Math.min(_X5,_g5._h5._n5-1);
this.shape=_X5;};;_H5.prototype._z5=function(){const _Y5=_H5._I5[this.shape]._z5(this._M5);this._M5+=this._x5;while(this._M5>=1.0){this._M5-=1.0;}return _Y5;};;_H5.prototype._R5=function(){this._x5=this.freq/this._L5;};;class _Z5 extends AudioWorkletProcessor{static __5=5.0;static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"time",automationRate:"a-rate",defaultValue:0.2,minValue:0.0,maxValue:_Z5.__5},{name:"feedback",automationRate:"a-rate",
defaultValue:0.5,minValue:0.0,maxValue:1.0},{name:"mix",automationRate:"a-rate",defaultValue:0.35,minValue:0.0,maxValue:1.0}];}constructor(_14){super();this._24();const _34=_14.outputChannelCount[0];const _06=(_Z5.__5*sampleRate)+1;this.buffer=new Array(_34);this._16=new Uint32Array(_34);for(let _a4=0;_a4<_34;++_a4)this.buffer[_a4]=new Float32Array(_06);}process(_d4,_e4,parameters){const input=_d4[0];const output=_e4[0];const bypass=parameters.bypass;const time=parameters.time;const feedback=parameters.feedback;
const mix=parameters.mix;for(let _a4=0;_a4<input.length;++_a4){const _f4=input[_a4];const _g4=output[_a4];for(let _h4=0;_h4<_f4.length;++_h4){_g4[_h4]=_f4[_h4];const _26=(time[_h4]!==undefined)?time[_h4]:time[0];const _36=this._z5(_a4,_26);const __4=(feedback[_h4]!==undefined)?feedback[_h4]:feedback[0];const _46=_f4[_h4]+(_36*__4);this.write(_a4,_46);const _k4=(bypass[_h4]!==undefined)?bypass[_h4]:bypass[0];if(_k4>0.0){continue;}const _l4=(mix[_h4]!==undefined)?mix[_h4]:mix[0];_g4[_h4]*=(1-_l4);_g4[_h4]+=(_36*_l4);
}}return this._m4;}_z5(_56,_66){const _76=_66*sampleRate;let _D5=(this._16[_56]-~~_76);let _E5=(_D5-1);while(_D5<0)_D5+=this.buffer[_56].length;while(_E5<0)_E5+=this.buffer[_56].length;const _86=_76-~~_76;const _F5=this.buffer[_56][_D5];const _G5=this.buffer[_56][_E5];return _F5+(_G5-_F5)*_86;}write(_56,_L3){++this._16[_56];this._16[_56]%=this.buffer[_56].length;this.buffer[_56][this._16[_56]]=_L3;}}registerProcessor("delay-processor",_Z5);AudioWorkletProcessor.prototype._24=function(){this._m4=true;this.port.onmessage=(_96)=>{
if(_96.data==="kill")this._m4=false;};};;class _a6 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1}];}constructor(){super();this._24();}process(_d4,_e4,parameters){const input=_d4[0];const bypass=parameters.bypass;for(let _a4=0;_a4<input.length;++_a4){const _f4=input[_a4];for(let _h4=0;_h4<_f4.length;++_h4){const _k4=(bypass[_h4]!==undefined)?bypass[_h4]:bypass[0];_e4[_k4][_a4][_h4]=_f4[_h4];}}return this._m4;
}}class _b6 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"gain",automationRate:"a-rate",defaultValue:1,minValue:0}];}constructor(){super();this._24();}process(_d4,_e4,parameters){const _w4=_d4[0];const _x4=_d4[1];const output=_e4[0];const gain=parameters.gain;for(let _a4=0;_a4<_x4.length;++_a4){const _f4=_x4[_a4];const _g4=output[_a4];for(let _h4=0;_h4<_f4.length;++_h4)_g4[_h4]=_f4[_h4];}for(let _a4=0;_a4<_w4.length;++_a4){const _f4=_w4[_a4];const _g4=output[_a4];for(let _h4=0;_h4<_f4.length;
++_h4){const _05=(gain[_h4]!==undefined)?gain[_h4]:gain[0];_g4[_h4]+=_f4[_h4]*_05;}}return this._m4;}}registerProcessor("audio-bus-input",_a6);registerProcessor("audio-bus-output",_b6);class _c6 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"gain",automationRate:"a-rate",defaultValue:1.0,minValue:0.0},{name:"factor",automationRate:"a-rate",defaultValue:20,minValue:1,maxValue:100},{name:"resolution",
automationRate:"a-rate",defaultValue:8,minValue:2,maxValue:16},{name:"mix",automationRate:"a-rate",defaultValue:0.8,minValue:0.0,maxValue:1.0}];}static _d6=[undefined,undefined,2,4,8,16,32,64,128,256,512,1024,2048,4096,8192,16384,32768];constructor(_14){super();this._24();const _34=_14.outputChannelCount[0];this._e6=new Float32Array(_34);this._f6=new Uint32Array(_34);}process(_d4,_e4,parameters){const input=_d4[0];const output=_e4[0];const bypass=parameters.bypass;const gain=parameters.gain;const factor=parameters.factor;
const resolution=parameters.resolution;const mix=parameters.mix;for(let _a4=0;_a4<input.length;++_a4){const _f4=input[_a4];const _g4=output[_a4];for(let _h4=0;_h4<_f4.length;++_h4){_g4[_h4]=_f4[_h4];if(this._f6[_a4]===0)this._e6[_a4]=_f4[_h4];const __4=(factor[_h4]!==undefined)?factor[_h4]:factor[0];++this._f6[_a4];this._f6[_a4]%=__4;const _k4=(bypass[_h4]!==undefined)?bypass[_h4]:bypass[0];if(_k4>0.0){continue;}let _j4=this._e6[_a4];const _05=(gain[_h4]!==undefined)?gain[_h4]:gain[0];_j4*=_05;_j4=Math.max(Math.min(_j4,
1.0),-1.0);const _g6=(resolution[_h4]!==undefined)?resolution[_h4]:resolution[0];const max=(_j4>0.0)?_c6._d6[_g6]-1:_c6._d6[_g6];_j4=Math.round(_j4*max)/max;const _l4=(mix[_h4]!==undefined)?mix[_h4]:mix[0];_g4[_h4]*=(1.0-_l4);_g4[_h4]+=(_j4*_l4);}}return this._m4;}}registerProcessor("bitcrusher-processor",_c6);class _h6 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"rate",automationRate:"a-rate",defaultValue:5.0,
minValue:0.0,maxValue:20.0},{name:"intensity",automationRate:"a-rate",defaultValue:1.0,minValue:0.0,maxValue:1.0},{name:"offset",automationRate:"a-rate",defaultValue:0.0,minValue:0.0,maxValue:1.0},{name:"shape",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:4}];}constructor(_14){super();this._24();const _34=_14.outputChannelCount[0];this._i6=new Array(_34).fill(1.0);this._j6=new Array(_34).fill(0.0);this._k6=new Array(_34).fill(_g5._h5._i5);this._l6=new Array(_34);for(let _a4=0;_a4<_34;++_a4){
this._l6[_a4]=new _H5();this._l6[_a4]._P5(sampleRate);this._l6[_a4]._S5(this._i6[_a4]);this._l6[_a4]._W5(this._k6[_a4]);if(_a4%2===1){this._l6[_a4]._T5(this._j6[_a4]);}}}process(_d4,_e4,parameters){const input=_d4[0];const output=_e4[0];const bypass=parameters.bypass;const rate=parameters.rate;const intensity=parameters.intensity;const offset=parameters.offset;const shape=parameters.shape;for(let _a4=0;_a4<input.length;++_a4){const _f4=input[_a4];const _g4=output[_a4];for(let _h4=0;_h4<_f4.length;++_h4){_g4[_h4]=_f4[_h4];
const _g6=(rate[_h4]!==undefined)?rate[_h4]:rate[0];const _m6=(offset[_h4]!==undefined)?offset[_h4]:offset[0];const _n6=(shape[_h4]!==undefined)?shape[_h4]:shape[0];this._o6(_a4,_g6,_m6,_n6);const _p6=this._l6[_a4]._z5();const _k4=(bypass[_h4]!==undefined)?bypass[_h4]:bypass[0];if(_k4>0.0){continue;}const _b4=(intensity[_h4]!==undefined)?intensity[_h4]:intensity[0];const out=_f4[_h4]*_p6*_b4;_g4[_h4]*=(1.0-_b4);_g4[_h4]+=out;}}return this._m4;}_o6(_56,_q6,_U5,_X5){if(_q6!==this._i6[_56]){this._l6[_56]._S5(_q6);
this._i6[_56]=_q6;}if(_U5!==this._j6[_56]){if(_56%2===1){this._l6[_56]._T5(_U5);}this._j6[_56]=_U5;}if(_X5!==this._k6[_56]){this._l6[_56]._W5(_X5);this._k6[_56]=_X5;}}}registerProcessor("tremolo-processor",_h6);class _r6{constructor(_66=1e-3){this.setTime(_66);}setTime(_66){this._s6=Math.exp(-1/(_66*sampleRate));}process(_t6,_u6){return _t6+this._s6*(_u6-_t6);}}class _v6{constructor(_w6,_x6){this._y6=new _r6(_w6);this._z6=new _r6(_x6);this._A6=_w6;this._B6=_x6;}_C6(_66){if(_66===this._A6)return;this._y6.setTime(_66);
this._A6=_66;}_D6(_66){if(_66===this._B6)return;this._z6.setTime(_66);this._B6=_66;}process(_t6,_u6){if(_t6>_u6)return this._y6.process(_t6,_u6);else return this._z6.process(_t6,_u6);}}class _E6 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"ingain",automationRate:"a-rate",defaultValue:1,minValue:0},{name:"threshold",automationRate:"a-rate",defaultValue:0.125,minValue:1e-3,maxValue:1},{name:"ratio",
automationRate:"a-rate",defaultValue:4,minValue:1},{name:"attack",automationRate:"a-rate",defaultValue:0.05,minValue:1e-3,maxValue:1e-1},{name:"release",automationRate:"a-rate",defaultValue:0.25,minValue:1e-2,maxValue:1},{name:"outgain",automationRate:"a-rate",defaultValue:1,minValue:0}];}constructor(_F6){super();this._24();const _y6=_E6.parameterDescriptors.find(_G6=>_G6.name==="attack");const _z6=_E6.parameterDescriptors.find(_G6=>_G6.name==="release");this._H6=new _v6(_y6.defaultValue,_z6.defaultValue);
this._I6=0;}process(_J6,_K6,_L6){const input=_J6[0];const output=_K6[0];const bypass=_L6.bypass;const ingain=_L6.ingain;const outgain=_L6.outgain;const threshold=_L6.threshold;const ratio=_L6.ratio;const attack=_L6.attack;const release=_L6.release;if(input.length===0)return this._m4;for(let _h4=0;_h4<input[0].length;++_h4){let _M6=input.map(_N6=>_N6[_h4]);output.forEach((_N6,_O6)=>{_N6[_h4]=_M6[_O6];});const _P6=(ingain[_h4]!==undefined)?ingain[_h4]:ingain[0];_M6=_M6.map(_Q6=>_Q6*=_P6);const rect=_M6.map(_Q6=>Math.abs(_Q6));
const max=Math.max(...rect);const _R6=_S6(max);const _26=(threshold[_h4]!==undefined)?threshold[_h4]:threshold[0];const _T6=_S6(_26);const _U6=Math.max(0,_R6-_T6);const _y6=(attack[_h4]!==undefined)?attack[_h4]:attack[0];const _z6=(release[_h4]!==undefined)?release[_h4]:release[0];this._H6._C6(_y6);this._H6._D6(_z6);this._I6=this._H6.process(_U6,this._I6);const _k4=(bypass[_h4]!==undefined)?bypass[_h4]:bypass[0];if(_k4>0)continue;const _g6=(ratio[_h4]!==undefined)?ratio[_h4]:ratio[0];const _V6=(this._I6/_g6)-this._I6;
const _05=_W6(_V6);_M6=_M6.map(_Q6=>_Q6*=_05);const _X6=(outgain[_h4]!==undefined)?outgain[_h4]:outgain[0];_M6=_M6.map(_Q6=>_Q6*=_X6);output.forEach((_N6,_O6)=>{_N6[_h4]=_M6[_O6];});}return this._m4;}}function _S6(_Y6){return 20*Math.log10(_Y6);}function _W6(_Y6){return Math.pow(10,_Y6/20);}registerProcessor("compressor-processor",_E6);class _Z6 extends AudioWorkletProcessor{static get parameterDescriptors(){const _X4=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,
minValue:0,maxValue:1},{name:"freq",automationRate:"a-rate",defaultValue:Math.min(500.0,_X4),minValue:10.0,maxValue:_X4},{name:"q",automationRate:"a-rate",defaultValue:1.0,minValue:1.0,maxValue:100.0},{name:"gain",automationRate:"a-rate",defaultValue:1e-2,minValue:1e-6}];}constructor(_14){super();this._24();const _34=_14.outputChannelCount[0];this._C4=0;this._D4=0;this._E4=0;this._F4=0;this._G4=0;this._H4=new Float32Array(_34);this._I4=new Float32Array(_34);this._J4=new Float32Array(_34);this._K4=new Float32Array(_34);
this._Y4=-1;this._M4=-1;this._Z4=-1;}process(_d4,_e4,parameters){const input=_d4[0];const output=_e4[0];const bypass=parameters.bypass;const freq=parameters.freq;const q=parameters.q;const gain=parameters.gain;const _N4=(freq.length===1&&q.length===1&&gain.length===1);if(_N4)this._O4(freq[0],q[0],gain[0]);for(let _a4=0;_a4<input.length;++_a4){const _f4=input[_a4];const _g4=output[_a4];for(let _h4=0;_h4<_f4.length;++_h4){if(_N4===!1){const __4=(freq[_h4]!==undefined)?freq[_h4]:freq[0];const _P4=(q[_h4]!==undefined)?q[_h4]:q[0];
const _05=(gain[_h4]!==undefined)?gain[_h4]:gain[0];this._O4(__4,_P4,_05);}const _Q4=this._E4*_f4[_h4]+this._F4*this._H4[_a4]+this._G4*this._I4[_a4]-this._C4*this._J4[_a4]-this._D4*this._K4[_a4];this._I4[_a4]=this._H4[_a4];this._H4[_a4]=_f4[_h4];this._K4[_a4]=this._J4[_a4];this._J4[_a4]=_Q4;const _k4=(bypass[_h4]!==undefined)?bypass[_h4]:bypass[0];_g4[_h4]=(_k4>0)?_f4[_h4]:_Q4;}}return this._m4;}_O4(_15,_S4,_25){if(_15===this._Y4&&_S4===this._M4&&_25===this._Z4)return;const _T4=2*Math.PI*_15/sampleRate;
const _U4=Math.cos(_T4);const _35=Math.sqrt(_25);const _95=_35+1;const _a5=_35-1;const _b5=_95*_U4;const _c5=_a5*_U4;const _d5=_95-_c5;const _e5=_95+_c5;const alpha=Math.sin(_T4)/(2*_S4);const _f5=(2*Math.sqrt(_35)*alpha);const _V4=_e5+_f5;const _C4=-2*(_a5+_b5);const _D4=_e5-_f5;const _E4=_35*(_d5+_f5);const _F4=2*_35*(_a5-_b5);const _G4=_35*(_d5-_f5);this._C4=_C4/_V4;this._D4=_D4/_V4;this._E4=_E4/_V4;this._F4=_F4/_V4;this._G4=_G4/_V4;this._Y4=_15;this._M4=_S4;this._Z4=_25;}}registerProcessor("lo-shelf-processor",
_Z6);