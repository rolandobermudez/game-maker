class _14{constructor(_24){this._34=0;this._44=0;this.feedback=0;this._54=0;this.buffer=new Float32Array(_24);this._64=0;}process(_74){const out=this.buffer[this._64];this._54=(this._54*this._34)+(out*this._44);this.buffer[this._64]=_74+(this._54*this.feedback);++this._64;this._64%=this.buffer.length;return out;}_84(_94){this.feedback=Math.min(Math.max(0,_94),1);}_a4(_b4){this._34=Math.min(Math.max(0,_b4),1);this._44=1-this._34;}}class _c4{constructor(_24){this.feedback=0;this.buffer=new Float32Array(_24);
this._64=0;}process(_74){const out=this.buffer[this._64];this.buffer[this._64]=_74+(out*this.feedback);++this._64;this._64%=this.buffer.length;return(out-_74);}_84(_94){this.feedback=Math.min(Math.max(0,_94),1);}}class _d4 extends AudioWorkletProcessor{static _e4=8;static _f4=4;static _g4=0.015;static _h4=0.4;static _i4=0.28;static _j4=0.7;static _k4=[1116,1188,1277,1356,1422,1491,1557,1617];static _l4=[1139,1211,1300,1379,1445,1514,1580,1640];static _m4=[556,441,341,225];static _n4=[579,464,364,248];static get parameterDescriptors(){
return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"size",automationRate:"a-rate",defaultValue:0.7,minValue:0.0,maxValue:1.0},{name:"damp",automationRate:"a-rate",defaultValue:0.1,minValue:0.0,maxValue:1.0},{name:"mix",automationRate:"a-rate",defaultValue:0.35,minValue:0.0,maxValue:1.0}];}constructor(_o4){super();this._p4();const _q4=_o4.outputChannelCount[0];this._r4=-1;this._s4=-1;this._t4=new Array(_q4);this._u4=new Array(_q4);const _v4=[_d4._k4,_d4._l4];const _w4=[_d4._m4,
_d4._n4];for(let _x4=0;_x4<_q4;++_x4){this._t4[_x4]=new Array(_d4._e4);this._u4[_x4]=new Array(_d4._f4);for(let _y4=0;_y4<_d4._e4;++_y4)this._t4[_x4][_y4]=new _14(_v4[_x4%_v4.length][_y4]);for(let _y4=0;_y4<_d4._f4;++_y4)this._u4[_x4][_y4]=new _c4(_w4[_x4%_w4.length][_y4]);}this._z4(0.5);this._a4(0.5);for(let _x4=0;_x4<_q4;++_x4)for(let _y4=0;_y4<_d4._f4;++_y4)this._u4[_x4][_y4]._84(0.5);}process(_A4,_B4,parameters){const input=_A4[0];const output=_B4[0];const bypass=parameters.bypass;const size=parameters.size;
const damp=parameters.damp;const mix=parameters.mix;for(let _x4=0;_x4<input.length;++_x4){const _C4=input[_x4];const _D4=output[_x4];for(let _E4=0;_E4<_C4.length;++_E4){const _E4=(size[_E4]!==undefined)?size[_E4]:size[0];const _F4=(damp[_E4]!==undefined)?damp[_E4]:damp[0];this._z4(_E4);this._a4(_F4);_D4[_E4]=_C4[_E4];let out=0;const _G4=_C4[_E4]*_d4._g4;for(let _y4=0;_y4<_d4._e4;++_y4)out+=this._t4[_x4][_y4].process(_G4);for(let _y4=0;_y4<_d4._f4;++_y4)out=this._u4[_x4][_y4].process(out);const _H4=(bypass[_E4]!==undefined)?bypass[_E4]:bypass[0];
if(_H4>0.0){continue;}const _I4=(mix[_E4]!==undefined)?mix[_E4]:mix[0];_D4[_E4]*=(1-_I4);_D4[_E4]+=(out*_I4);}}return this._J4;}_z4(_24){if(_24===this._r4)return;const size=(_24*_d4._i4)+_d4._j4;for(let _x4=0;_x4<this._t4.length;++_x4)for(let _y4=0;_y4<_d4._e4;++_y4)this._t4[_x4][_y4]._84(size);this._r4=_24;}_a4(_b4){if(_b4===this._s4)return;const damp=_b4*_d4._h4;for(let _x4=0;_x4<this._t4.length;++_x4)for(let _y4=0;_y4<_d4._e4;++_y4)this._t4[_x4][_y4]._a4(damp);this._s4=_b4;}}registerProcessor("reverb1-processor",
_d4);class _K4 extends AudioWorkletProcessor{static get parameterDescriptors(){return [];}constructor(){super();this._p4();}process(_L4,_M4,_N4){const input=_L4[0];const _O4=_M4[0];const _P4=_M4[1];for(let _x4=0;_x4<input.length;++_x4){const _C4=input[_x4];const _Q4=_O4[_x4];const _R4=_P4[_x4];for(let _E4=0;_E4<_C4.length;++_E4){_Q4[_E4]=_C4[_E4];_R4[_E4]=_C4[_E4];}}return this._J4;}}class _S4 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,
minValue:0,maxValue:1}];}constructor(){super();this._p4();}process(_L4,_M4,_N4){const _T4=_L4[0];const _U4=_L4[1];const output=_M4[0];const bypass=_N4.bypass;for(let _x4=0;_x4<_U4.length;++_x4){const _V4=_T4[_x4];const _W4=_U4[_x4];const _D4=output[_x4];for(let _E4=0;_E4<_V4.length;++_E4){const _H4=(bypass[_E4]!==undefined)?bypass[_E4]:bypass[0];if(_H4>0){_D4[_E4]=_W4[_E4];}else {_D4[_E4]=_V4[_E4];}}}return this._J4;}}registerProcessor("eq-input",_K4);registerProcessor("eq-output",_S4);class _X4 extends AudioWorkletProcessor{
static get parameterDescriptors(){const _Y4=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"cutoff",automationRate:"a-rate",defaultValue:Math.min(500.0,_Y4),minValue:10.0,maxValue:_Y4},{name:"q",automationRate:"a-rate",defaultValue:1.5,minValue:1.0,maxValue:100.0}];}constructor(_o4){super();this._p4();const _q4=_o4.outputChannelCount[0];this._Z4=0;this.__4=0;this._05=0;this._15=0;this._25=0;this._35=new Float32Array(_q4);this._45=new Float32Array(_q4);
this._55=new Float32Array(_q4);this._65=new Float32Array(_q4);this._75=-1;this._85=-1;}process(_A4,_B4,parameters){const input=_A4[0];const output=_B4[0];const bypass=parameters.bypass;const cutoff=parameters.cutoff;const q=parameters.q;const _95=(cutoff.length===1&&q.length===1);if(_95)this._a5(cutoff[0],q[0]);for(let _x4=0;_x4<input.length;++_x4){const _C4=input[_x4];const _D4=output[_x4];for(let _E4=0;_E4<_C4.length;++_E4){if(_95===!1){const _x4=(cutoff[_E4]!==undefined)?cutoff[_E4]:cutoff[0];const _b5=(q[_E4]!==undefined)?q[_E4]:q[0];
this._a5(_x4,_b5);}const _c5=this._05*_C4[_E4]+this._15*this._35[_x4]+this._25*this._45[_x4]-this._Z4*this._55[_x4]-this.__4*this._65[_x4];this._45[_x4]=this._35[_x4];this._35[_x4]=_C4[_E4];this._65[_x4]=this._55[_x4];this._55[_x4]=_c5;const _H4=(bypass[_E4]!==undefined)?bypass[_E4]:bypass[0];_D4[_E4]=(_H4>0)?_C4[_E4]:_c5;}}return this._J4;}_a5(_d5,_e5){if(_d5===this._75&&_e5===this._85)return;const _f5=2*Math.PI*_d5/sampleRate;const alpha=Math.sin(_f5)/(2*_e5);const _g5=Math.cos(_f5);const _h5=1+alpha;
const _Z4=-2*_g5;const __4=1-alpha;const _05=(1-_g5)/2;const _15=1-_g5;const _25=(1-_g5)/2;this._Z4=_Z4/_h5;this.__4=__4/_h5;this._05=_05/_h5;this._15=_15/_h5;this._25=_25/_h5;this._75=_d5;this._85=_e5;}}registerProcessor("lpf2-processor",_X4);class _i5 extends AudioWorkletProcessor{static get parameterDescriptors(){const _j5=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"freq",automationRate:"a-rate",defaultValue:Math.min(1500.0,
_j5),minValue:10.0,maxValue:_j5},{name:"q",automationRate:"a-rate",defaultValue:1.0,minValue:1.0,maxValue:100.0},{name:"gain",automationRate:"a-rate",defaultValue:1e-2,minValue:1e-6}];}constructor(_o4){super();this._p4();const _q4=_o4.outputChannelCount[0];this._Z4=0;this.__4=0;this._05=0;this._15=0;this._25=0;this._35=new Float32Array(_q4);this._45=new Float32Array(_q4);this._55=new Float32Array(_q4);this._65=new Float32Array(_q4);this._k5=-1;this._85=-1;this._l5=-1;}process(_A4,_B4,parameters){const input=_A4[0];
const output=_B4[0];const bypass=parameters.bypass;const freq=parameters.freq;const q=parameters.q;const gain=parameters.gain;const _95=(freq.length===1&&q.length===1&&gain.length===1);if(_95)this._a5(freq[0],q[0],gain[0]);for(let _x4=0;_x4<input.length;++_x4){const _C4=input[_x4];const _D4=output[_x4];for(let _E4=0;_E4<_C4.length;++_E4){if(_95===!1){const _m5=(freq[_E4]!==undefined)?freq[_E4]:freq[0];const _b5=(q[_E4]!==undefined)?q[_E4]:q[0];const _n5=(gain[_E4]!==undefined)?gain[_E4]:gain[0];this._a5(_m5,
_b5,_n5);}const _c5=this._05*_C4[_E4]+this._15*this._35[_x4]+this._25*this._45[_x4]-this._Z4*this._55[_x4]-this.__4*this._65[_x4];this._45[_x4]=this._35[_x4];this._35[_x4]=_C4[_E4];this._65[_x4]=this._55[_x4];this._55[_x4]=_c5;const _H4=(bypass[_E4]!==undefined)?bypass[_E4]:bypass[0];_D4[_E4]=(_H4>0)?_C4[_E4]:_c5;}}return this._J4;}_a5(_o5,_e5,_p5){if(_o5===this._k5&&_e5===this._85&&_p5===this._l5)return;const _f5=2*Math.PI*_o5/sampleRate;const _g5=Math.cos(_f5);const _q5=Math.sqrt(_p5);const alpha=Math.sin(_f5)/(2*_e5);
const _r5=alpha/_q5;const _s5=alpha*_q5;const _h5=1+_r5;const _Z4=-2*_g5;const __4=1-_r5;const _05=1+_s5;const _15=_Z4;const _25=1-_s5;this._Z4=_Z4/_h5;this.__4=__4/_h5;this._05=_05/_h5;this._15=_15/_h5;this._25=_25/_h5;this._k5=_o5;this._85=_e5;this._l5=_p5;}}registerProcessor("peak-eq-processor",_i5);class _t5 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"gain",automationRate:"a-rate",defaultValue:0.5,
minValue:0.0}];}constructor(){super();this._p4();}process(_A4,_B4,parameters){const input=_A4[0];const output=_B4[0];const bypass=parameters.bypass;const gain=parameters.gain;for(let _x4=0;_x4<input.length;++_x4){const _C4=input[_x4];const _D4=output[_x4];for(let _E4=0;_E4<_C4.length;++_E4){_D4[_E4]=_C4[_E4];const _H4=(bypass[_E4]!==undefined)?bypass[_E4]:bypass[0];if(_H4>0.0){continue;}const _n5=(gain[_E4]!==undefined)?gain[_E4]:gain[0];_D4[_E4]*=_n5;}}return this._J4;}}registerProcessor("gain-processor",
_t5);class _u5 extends AudioWorkletProcessor{static get parameterDescriptors(){const _Y4=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"cutoff",automationRate:"a-rate",defaultValue:Math.min(1500.0,_Y4),minValue:10.0,maxValue:_Y4},{name:"q",automationRate:"a-rate",defaultValue:1.5,minValue:1.0,maxValue:100.0}];}constructor(_o4){super();this._p4();const _q4=_o4.outputChannelCount[0];this._Z4=0;this.__4=0;this._05=0;this._15=0;this._25=0;
this._35=new Float32Array(_q4);this._45=new Float32Array(_q4);this._55=new Float32Array(_q4);this._65=new Float32Array(_q4);this._75=-1;this._85=-1;}process(_A4,_B4,parameters){const input=_A4[0];const output=_B4[0];const bypass=parameters.bypass;const cutoff=parameters.cutoff;const q=parameters.q;const _95=(cutoff.length===1&&q.length===1);if(_95)this._a5(cutoff[0],q[0]);for(let _x4=0;_x4<input.length;++_x4){const _C4=input[_x4];const _D4=output[_x4];for(let _E4=0;_E4<_C4.length;++_E4){if(_95===!1){const _x4=(cutoff[_E4]!==undefined)?cutoff[_E4]:cutoff[0];
const _b5=(q[_E4]!==undefined)?q[_E4]:q[0];this._a5(_x4,_b5);}const _c5=this._05*_C4[_E4]+this._15*this._35[_x4]+this._25*this._45[_x4]-this._Z4*this._55[_x4]-this.__4*this._65[_x4];this._45[_x4]=this._35[_x4];this._35[_x4]=_C4[_E4];this._65[_x4]=this._55[_x4];this._55[_x4]=_c5;const _H4=(bypass[_E4]!==undefined)?bypass[_E4]:bypass[0];_D4[_E4]=(_H4>0)?_C4[_E4]:_c5;}}return this._J4;}_a5(_d5,_e5){if(_d5===this._75&&_e5===this._85)return;const _f5=2*Math.PI*_d5/sampleRate;const alpha=Math.sin(_f5)/(2*_e5);
const _g5=Math.cos(_f5);const _h5=1+alpha;const _Z4=-2*_g5;const __4=1-alpha;const _05=(1+_g5)/2;const _15=-1-_g5;const _25=(1+_g5)/2;this._Z4=_Z4/_h5;this.__4=__4/_h5;this._05=_05/_h5;this._15=_15/_h5;this._25=_25/_h5;this._75=_d5;this._85=_e5;}}registerProcessor("hpf2-processor",_u5);class _v5 extends AudioWorkletProcessor{static get parameterDescriptors(){const _j5=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"freq",automationRate:"a-rate",
defaultValue:Math.min(5000.0,_j5),minValue:10.0,maxValue:_j5},{name:"q",automationRate:"a-rate",defaultValue:1.0,minValue:1.0,maxValue:100.0},{name:"gain",automationRate:"a-rate",defaultValue:1e-2,minValue:1e-6}];}constructor(_o4){super();this._p4();const _q4=_o4.outputChannelCount[0];this._Z4=0;this.__4=0;this._05=0;this._15=0;this._25=0;this._35=new Float32Array(_q4);this._45=new Float32Array(_q4);this._55=new Float32Array(_q4);this._65=new Float32Array(_q4);this._k5=-1;this._85=-1;this._l5=-1;}process(_A4,
_B4,parameters){const input=_A4[0];const output=_B4[0];const bypass=parameters.bypass;const freq=parameters.freq;const q=parameters.q;const gain=parameters.gain;const _95=(freq.length===1&&q.length===1&&gain.length===1);if(_95)this._a5(freq[0],q[0],gain[0]);for(let _x4=0;_x4<input.length;++_x4){const _C4=input[_x4];const _D4=output[_x4];for(let _E4=0;_E4<_C4.length;++_E4){if(_95===!1){const _m5=(freq[_E4]!==undefined)?freq[_E4]:freq[0];const _b5=(q[_E4]!==undefined)?q[_E4]:q[0];const _n5=(gain[_E4]!==undefined)?gain[_E4]:gain[0];
this._a5(_m5,_b5,_n5);}const _c5=this._05*_C4[_E4]+this._15*this._35[_x4]+this._25*this._45[_x4]-this._Z4*this._55[_x4]-this.__4*this._65[_x4];this._45[_x4]=this._35[_x4];this._35[_x4]=_C4[_E4];this._65[_x4]=this._55[_x4];this._55[_x4]=_c5;const _H4=(bypass[_E4]!==undefined)?bypass[_E4]:bypass[0];_D4[_E4]=(_H4>0)?_C4[_E4]:_c5;}}return this._J4;}_a5(_o5,_e5,_p5){if(_o5===this._k5&&_e5===this._85&&_p5===this._l5)return;const _f5=2*Math.PI*_o5/sampleRate;const _g5=Math.cos(_f5);const _q5=Math.sqrt(_p5);const _w5=_q5+1;
const _x5=_q5-1;const _y5=_w5*_g5;const _z5=_x5*_g5;const _A5=_w5-_z5;const _B5=_w5+_z5;const alpha=Math.sin(_f5)/(2*_e5);const _C5=(2*Math.sqrt(_q5)*alpha);const _h5=_A5+_C5;const _Z4=2*(_x5-_y5);const __4=_A5-_C5;const _05=_q5*(_B5+_C5);const _15=-2*_q5*(_x5+_y5);const _25=_q5*(_B5-_C5);this._Z4=_Z4/_h5;this.__4=__4/_h5;this._05=_05/_h5;this._15=_15/_h5;this._25=_25/_h5;this._k5=_o5;this._85=_e5;this._l5=_p5;}}registerProcessor("hi-shelf-processor",_v5);function _D5(){}_D5._E5={_F5:0,_G5:1,_H5:2,_I5:3,_J5:4,
_K5:5};_D5._L5=function(_M5){return 1.0-_M5;};_D5._N5=function(_M5){return _M5;};_D5._O5=function(_M5){return 0.5*(Math.sin((_M5*2.0*Math.PI)-(Math.PI/2.0))+1.0);};_D5._P5=function(_M5){if(_M5<0.5){return 0.0;}return 1.0;};_D5._Q5=function(_M5){if(_M5<0.5){return 2.0*_M5;}return 2.0-(2.0*_M5);};_D5._R5=[_D5._L5,_D5._N5,_D5._O5,_D5._P5,_D5._Q5];_S5._T5=512;_S5._U5=1.0/_S5._T5;function _S5(_V5){this.data=new Float32Array(_S5._T5);for(let _y4=0;_y4<_S5._T5;++_y4){this.data[_y4]=_V5(_y4*_S5._U5);}}_S5.prototype._W5=function(_M5){
_M5=Math.max(0.0,_M5);_M5=Math.min(_M5,1.0);const _X5=_M5*_S5._T5;const _Y5=~~_X5;const _Z5=_X5-_Y5;let __5=_Y5;let _06=__5+1;if(__5>=_S5._T5){__5-=_S5._T5;}if(_06>=_S5._T5){_06-=_S5._T5;}const _16=this.data[__5];const _26=this.data[_06];return _16+(_26-_16)*_Z5;};;_36._46=[];_36._56=!1;_36._66=0.0;_36._j5=20.0;function _36(){this._76=48000;this.shape=_D5._E5._H5;this.freq=1.0;this._86=0.0;this._U5=0.0;this._96=0.0;if(_36._56==true){return;}for(let _y4=0;_y4<_D5._E5._K5;++_y4){_36._46[_y4]=new _S5(_D5._R5[_y4]);
}_36._56=true;}_36._a6=function(){return(_36._56==!0);};_36.prototype._b6=function(_c6){this._76=_c6;this._d6();};;_36.prototype._e6=function(_o5){_o5=Math.max(_36._66,_o5);_o5=Math.min(_o5,_36._j5);this.freq=_o5;this._d6();};;_36.prototype._f6=function(_g6){_g6=Math.max(0.0,_g6);_g6=Math.min(_g6,1.0);const _h6=_g6-this._96;this._96=_g6;this._86+=_h6;while(this._86>=1.0){this._86-=1.0;}while(this._86<0.0){this._86+=1.0;}};;_36.prototype._i6=function(_j6){_j6=Math.max(0,_j6);_j6=Math.min(_j6,_D5._E5._K5-1);
this.shape=_j6;};;_36.prototype._W5=function(){const _k6=_36._46[this.shape]._W5(this._86);this._86+=this._U5;while(this._86>=1.0){this._86-=1.0;}return _k6;};;_36.prototype._d6=function(){this._U5=this.freq/this._76;};;class _l6 extends AudioWorkletProcessor{static _m6=5.0;static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"time",automationRate:"a-rate",defaultValue:0.2,minValue:0.0,maxValue:_l6._m6},{name:"feedback",automationRate:"a-rate",
defaultValue:0.5,minValue:0.0,maxValue:1.0},{name:"mix",automationRate:"a-rate",defaultValue:0.35,minValue:0.0,maxValue:1.0}];}constructor(_o4){super();this._p4();const _q4=_o4.outputChannelCount[0];const _n6=(_l6._m6*sampleRate)+1;this.buffer=new Array(_q4);this._o6=new Uint32Array(_q4);for(let _x4=0;_x4<_q4;++_x4)this.buffer[_x4]=new Float32Array(_n6);}process(_A4,_B4,parameters){const input=_A4[0];const output=_B4[0];const bypass=parameters.bypass;const time=parameters.time;const feedback=parameters.feedback;
const mix=parameters.mix;for(let _x4=0;_x4<input.length;++_x4){const _C4=input[_x4];const _D4=output[_x4];for(let _E4=0;_E4<_C4.length;++_E4){_D4[_E4]=_C4[_E4];const _p6=(time[_E4]!==undefined)?time[_E4]:time[0];const _q6=this._W5(_x4,_p6);const _m5=(feedback[_E4]!==undefined)?feedback[_E4]:feedback[0];const _r6=_C4[_E4]+(_q6*_m5);this.write(_x4,_r6);const _H4=(bypass[_E4]!==undefined)?bypass[_E4]:bypass[0];if(_H4>0.0){continue;}const _I4=(mix[_E4]!==undefined)?mix[_E4]:mix[0];_D4[_E4]*=(1-_I4);_D4[_E4]+=(_q6*_I4);
}}return this._J4;}_W5(_s6,_t6){const _u6=_t6*sampleRate;let __5=(this._o6[_s6]-~~_u6);let _06=(__5-1);while(__5<0)__5+=this.buffer[_s6].length;while(_06<0)_06+=this.buffer[_s6].length;const _v6=_u6-~~_u6;const _16=this.buffer[_s6][__5];const _26=this.buffer[_s6][_06];return _16+(_26-_16)*_v6;}write(_s6,_74){++this._o6[_s6];this._o6[_s6]%=this.buffer[_s6].length;this.buffer[_s6][this._o6[_s6]]=_74;}}registerProcessor("delay-processor",_l6);AudioWorkletProcessor.prototype._p4=function(){this._J4=true;this.port.onmessage=(_w6)=>{
if(_w6.data==="kill")this._J4=false;};};;class _x6 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1}];}constructor(){super();this._p4();}process(_A4,_B4,parameters){const input=_A4[0];const bypass=parameters.bypass;for(let _x4=0;_x4<input.length;++_x4){const _C4=input[_x4];for(let _E4=0;_E4<_C4.length;++_E4){const _H4=(bypass[_E4]!==undefined)?bypass[_E4]:bypass[0];_B4[_H4][_x4][_E4]=_C4[_E4];}}return this._J4;
}}class _y6 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"gain",automationRate:"a-rate",defaultValue:1,minValue:0}];}constructor(){super();this._p4();}process(_A4,_B4,parameters){const _T4=_A4[0];const _U4=_A4[1];const output=_B4[0];const gain=parameters.gain;for(let _x4=0;_x4<_U4.length;++_x4){const _C4=_U4[_x4];const _D4=output[_x4];for(let _E4=0;_E4<_C4.length;++_E4)_D4[_E4]=_C4[_E4];}for(let _x4=0;_x4<_T4.length;++_x4){const _C4=_T4[_x4];const _D4=output[_x4];for(let _E4=0;_E4<_C4.length;
++_E4){const _n5=(gain[_E4]!==undefined)?gain[_E4]:gain[0];_D4[_E4]+=_C4[_E4]*_n5;}}return this._J4;}}registerProcessor("audio-bus-input",_x6);registerProcessor("audio-bus-output",_y6);class _z6 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"gain",automationRate:"a-rate",defaultValue:1.0,minValue:0.0},{name:"factor",automationRate:"a-rate",defaultValue:20,minValue:1,maxValue:100},{name:"resolution",
automationRate:"a-rate",defaultValue:8,minValue:2,maxValue:16},{name:"mix",automationRate:"a-rate",defaultValue:0.8,minValue:0.0,maxValue:1.0}];}static _A6=[undefined,undefined,2,4,8,16,32,64,128,256,512,1024,2048,4096,8192,16384,32768];constructor(_o4){super();this._p4();const _q4=_o4.outputChannelCount[0];this._B6=new Float32Array(_q4);this._C6=new Uint32Array(_q4);}process(_A4,_B4,parameters){const input=_A4[0];const output=_B4[0];const bypass=parameters.bypass;const gain=parameters.gain;const factor=parameters.factor;
const resolution=parameters.resolution;const mix=parameters.mix;for(let _x4=0;_x4<input.length;++_x4){const _C4=input[_x4];const _D4=output[_x4];for(let _E4=0;_E4<_C4.length;++_E4){_D4[_E4]=_C4[_E4];if(this._C6[_x4]===0)this._B6[_x4]=_C4[_E4];const _m5=(factor[_E4]!==undefined)?factor[_E4]:factor[0];++this._C6[_x4];this._C6[_x4]%=_m5;const _H4=(bypass[_E4]!==undefined)?bypass[_E4]:bypass[0];if(_H4>0.0){continue;}let _G4=this._B6[_x4];const _n5=(gain[_E4]!==undefined)?gain[_E4]:gain[0];_G4*=_n5;_G4=Math.max(Math.min(_G4,
1.0),-1.0);const _D6=(resolution[_E4]!==undefined)?resolution[_E4]:resolution[0];const max=(_G4>0.0)?_z6._A6[_D6]-1:_z6._A6[_D6];_G4=Math.round(_G4*max)/max;const _I4=(mix[_E4]!==undefined)?mix[_E4]:mix[0];_D4[_E4]*=(1.0-_I4);_D4[_E4]+=(_G4*_I4);}}return this._J4;}}registerProcessor("bitcrusher-processor",_z6);class _E6 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"rate",automationRate:"a-rate",defaultValue:5.0,
minValue:0.0,maxValue:20.0},{name:"intensity",automationRate:"a-rate",defaultValue:1.0,minValue:0.0,maxValue:1.0},{name:"offset",automationRate:"a-rate",defaultValue:0.0,minValue:0.0,maxValue:1.0},{name:"shape",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:4}];}constructor(_o4){super();this._p4();const _q4=_o4.outputChannelCount[0];this._F6=new Array(_q4).fill(1.0);this._G6=new Array(_q4).fill(0.0);this._H6=new Array(_q4).fill(_D5._E5._F5);this._I6=new Array(_q4);for(let _x4=0;_x4<_q4;++_x4){
this._I6[_x4]=new _36();this._I6[_x4]._b6(sampleRate);this._I6[_x4]._e6(this._F6[_x4]);this._I6[_x4]._i6(this._H6[_x4]);if(_x4%2===1){this._I6[_x4]._f6(this._G6[_x4]);}}}process(_A4,_B4,parameters){const input=_A4[0];const output=_B4[0];const bypass=parameters.bypass;const rate=parameters.rate;const intensity=parameters.intensity;const offset=parameters.offset;const shape=parameters.shape;for(let _x4=0;_x4<input.length;++_x4){const _C4=input[_x4];const _D4=output[_x4];for(let _E4=0;_E4<_C4.length;++_E4){_D4[_E4]=_C4[_E4];
const _D6=(rate[_E4]!==undefined)?rate[_E4]:rate[0];const _J6=(offset[_E4]!==undefined)?offset[_E4]:offset[0];const _K6=(shape[_E4]!==undefined)?shape[_E4]:shape[0];this._L6(_x4,_D6,_J6,_K6);const _M6=this._I6[_x4]._W5();const _H4=(bypass[_E4]!==undefined)?bypass[_E4]:bypass[0];if(_H4>0.0){continue;}const _y4=(intensity[_E4]!==undefined)?intensity[_E4]:intensity[0];const out=_C4[_E4]*_M6*_y4;_D4[_E4]*=(1.0-_y4);_D4[_E4]+=out;}}return this._J4;}_L6(_s6,_N6,_g6,_j6){if(_N6!==this._F6[_s6]){this._I6[_s6]._e6(_N6);
this._F6[_s6]=_N6;}if(_g6!==this._G6[_s6]){if(_s6%2===1){this._I6[_s6]._f6(_g6);}this._G6[_s6]=_g6;}if(_j6!==this._H6[_s6]){this._I6[_s6]._i6(_j6);this._H6[_s6]=_j6;}}}registerProcessor("tremolo-processor",_E6);class _O6{constructor(_t6=1e-3){this.setTime(_t6);}setTime(_t6){this._P6=Math.exp(-1/(_t6*sampleRate));}process(_Q6,_R6){return _Q6+this._P6*(_R6-_Q6);}}class _S6{constructor(_T6,_U6){this._V6=new _O6(_T6);this._W6=new _O6(_U6);this._X6=_T6;this._Y6=_U6;}_Z6(_t6){if(_t6===this._X6)return;this._V6.setTime(_t6);
this._X6=_t6;}__6(_t6){if(_t6===this._Y6)return;this._W6.setTime(_t6);this._Y6=_t6;}process(_Q6,_R6){if(_Q6>_R6)return this._V6.process(_Q6,_R6);else return this._W6.process(_Q6,_R6);}}class _07 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"ingain",automationRate:"a-rate",defaultValue:1,minValue:0},{name:"threshold",automationRate:"a-rate",defaultValue:0.125,minValue:1e-3,maxValue:1},{name:"ratio",
automationRate:"a-rate",defaultValue:4,minValue:1},{name:"attack",automationRate:"a-rate",defaultValue:0.05,minValue:1e-3,maxValue:1e-1},{name:"release",automationRate:"a-rate",defaultValue:0.25,minValue:1e-2,maxValue:1},{name:"outgain",automationRate:"a-rate",defaultValue:1,minValue:0}];}constructor(_17){super();this._p4();const _V6=_07.parameterDescriptors.find(_27=>_27.name==="attack");const _W6=_07.parameterDescriptors.find(_27=>_27.name==="release");this._37=new _S6(_V6.defaultValue,_W6.defaultValue);
this._47=0;}process(_57,_67,_77){const input=_57[0];const output=_67[0];const bypass=_77.bypass;const ingain=_77.ingain;const outgain=_77.outgain;const threshold=_77.threshold;const ratio=_77.ratio;const attack=_77.attack;const release=_77.release;if(input.length===0)return this._J4;for(let _E4=0;_E4<input[0].length;++_E4){let _87=input.map(_97=>_97[_E4]);output.forEach((_97,_a7)=>{_97[_E4]=_87[_a7];});const _b7=(ingain[_E4]!==undefined)?ingain[_E4]:ingain[0];_87=_87.map(_c7=>_c7*=_b7);const rect=_87.map(_c7=>Math.abs(_c7));
const max=Math.max(...rect);const _d7=_e7(max);const _p6=(threshold[_E4]!==undefined)?threshold[_E4]:threshold[0];const _f7=_e7(_p6);const _g7=Math.max(0,_d7-_f7);const _V6=(attack[_E4]!==undefined)?attack[_E4]:attack[0];const _W6=(release[_E4]!==undefined)?release[_E4]:release[0];this._37._Z6(_V6);this._37.__6(_W6);this._47=this._37.process(_g7,this._47);const _H4=(bypass[_E4]!==undefined)?bypass[_E4]:bypass[0];if(_H4>0)continue;const _D6=(ratio[_E4]!==undefined)?ratio[_E4]:ratio[0];const _h7=(this._47/_D6)-this._47;
const _n5=_i7(_h7);_87=_87.map(_c7=>_c7*=_n5);const _j7=(outgain[_E4]!==undefined)?outgain[_E4]:outgain[0];_87=_87.map(_c7=>_c7*=_j7);output.forEach((_97,_a7)=>{_97[_E4]=_87[_a7];});}return this._J4;}}function _e7(_k7){return 20*Math.log10(_k7);}function _i7(_k7){return Math.pow(10,_k7/20);}registerProcessor("compressor-processor",_07);class _l7 extends AudioWorkletProcessor{static get parameterDescriptors(){const _j5=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,
minValue:0,maxValue:1},{name:"freq",automationRate:"a-rate",defaultValue:Math.min(500.0,_j5),minValue:10.0,maxValue:_j5},{name:"q",automationRate:"a-rate",defaultValue:1.0,minValue:1.0,maxValue:100.0},{name:"gain",automationRate:"a-rate",defaultValue:1e-2,minValue:1e-6}];}constructor(_o4){super();this._p4();const _q4=_o4.outputChannelCount[0];this._Z4=0;this.__4=0;this._05=0;this._15=0;this._25=0;this._35=new Float32Array(_q4);this._45=new Float32Array(_q4);this._55=new Float32Array(_q4);this._65=new Float32Array(_q4);
this._k5=-1;this._85=-1;this._l5=-1;}process(_A4,_B4,parameters){const input=_A4[0];const output=_B4[0];const bypass=parameters.bypass;const freq=parameters.freq;const q=parameters.q;const gain=parameters.gain;const _95=(freq.length===1&&q.length===1&&gain.length===1);if(_95)this._a5(freq[0],q[0],gain[0]);for(let _x4=0;_x4<input.length;++_x4){const _C4=input[_x4];const _D4=output[_x4];for(let _E4=0;_E4<_C4.length;++_E4){if(_95===!1){const _m5=(freq[_E4]!==undefined)?freq[_E4]:freq[0];const _b5=(q[_E4]!==undefined)?q[_E4]:q[0];
const _n5=(gain[_E4]!==undefined)?gain[_E4]:gain[0];this._a5(_m5,_b5,_n5);}const _c5=this._05*_C4[_E4]+this._15*this._35[_x4]+this._25*this._45[_x4]-this._Z4*this._55[_x4]-this.__4*this._65[_x4];this._45[_x4]=this._35[_x4];this._35[_x4]=_C4[_E4];this._65[_x4]=this._55[_x4];this._55[_x4]=_c5;const _H4=(bypass[_E4]!==undefined)?bypass[_E4]:bypass[0];_D4[_E4]=(_H4>0)?_C4[_E4]:_c5;}}return this._J4;}_a5(_o5,_e5,_p5){if(_o5===this._k5&&_e5===this._85&&_p5===this._l5)return;const _f5=2*Math.PI*_o5/sampleRate;
const _g5=Math.cos(_f5);const _q5=Math.sqrt(_p5);const _w5=_q5+1;const _x5=_q5-1;const _y5=_w5*_g5;const _z5=_x5*_g5;const _A5=_w5-_z5;const _B5=_w5+_z5;const alpha=Math.sin(_f5)/(2*_e5);const _C5=(2*Math.sqrt(_q5)*alpha);const _h5=_B5+_C5;const _Z4=-2*(_x5+_y5);const __4=_B5-_C5;const _05=_q5*(_A5+_C5);const _15=2*_q5*(_x5-_y5);const _25=_q5*(_A5-_C5);this._Z4=_Z4/_h5;this.__4=__4/_h5;this._05=_05/_h5;this._15=_15/_h5;this._25=_25/_h5;this._k5=_o5;this._85=_e5;this._l5=_p5;}}registerProcessor("lo-shelf-processor",
_l7);