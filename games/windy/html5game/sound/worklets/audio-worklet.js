class _n1{constructor(_o1){this._p1=0;this._q1=0;this.feedback=0;this._r1=0;this.buffer=new Float32Array(_o1);this._s1=0;}process(_t1){const out=this.buffer[this._s1];this._r1=(this._r1*this._p1)+(out*this._q1);this.buffer[this._s1]=_t1+(this._r1*this.feedback);++this._s1;this._s1%=this.buffer.length;return out;}_u1(_v1){this.feedback=Math.min(Math.max(0,_v1),1);}_w1(_x1){this._p1=Math.min(Math.max(0,_x1),1);this._q1=1-this._p1;}}class _y1{constructor(_o1){this.feedback=0;this.buffer=new Float32Array(_o1);
this._s1=0;}process(_t1){const out=this.buffer[this._s1];this.buffer[this._s1]=_t1+(out*this.feedback);++this._s1;this._s1%=this.buffer.length;return(out-_t1);}_u1(_v1){this.feedback=Math.min(Math.max(0,_v1),1);}}class _z1 extends AudioWorkletProcessor{static _A1=8;static _B1=4;static _C1=0.015;static _D1=0.4;static _E1=0.28;static _F1=0.7;static _G1=[1116,1188,1277,1356,1422,1491,1557,1617];static _H1=[1139,1211,1300,1379,1445,1514,1580,1640];static _I1=[556,441,341,225];static _J1=[579,464,364,248];static get parameterDescriptors(){
return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"size",automationRate:"a-rate",defaultValue:0.7,minValue:0.0,maxValue:1.0},{name:"damp",automationRate:"a-rate",defaultValue:0.1,minValue:0.0,maxValue:1.0},{name:"mix",automationRate:"a-rate",defaultValue:0.35,minValue:0.0,maxValue:1.0}];}constructor(_K1){super();this._L1();const _M1=_K1.outputChannelCount[0];this._N1=-1;this._O1=-1;this._P1=new Array(_M1);this._Q1=new Array(_M1);const _R1=[_z1._G1,_z1._H1];const _S1=[_z1._I1,
_z1._J1];for(let _T1=0;_T1<_M1;++_T1){this._P1[_T1]=new Array(_z1._A1);this._Q1[_T1]=new Array(_z1._B1);for(let _U1=0;_U1<_z1._A1;++_U1)this._P1[_T1][_U1]=new _n1(_R1[_T1%_R1.length][_U1]);for(let _U1=0;_U1<_z1._B1;++_U1)this._Q1[_T1][_U1]=new _y1(_S1[_T1%_S1.length][_U1]);}this._V1(0.5);this._w1(0.5);for(let _T1=0;_T1<_M1;++_T1)for(let _U1=0;_U1<_z1._B1;++_U1)this._Q1[_T1][_U1]._u1(0.5);}process(_W1,_X1,parameters){const input=_W1[0];const output=_X1[0];const bypass=parameters.bypass;const size=parameters.size;
const damp=parameters.damp;const mix=parameters.mix;for(let _T1=0;_T1<input.length;++_T1){const _Y1=input[_T1];const _Z1=output[_T1];for(let __1=0;__1<_Y1.length;++__1){const __1=(size[__1]!==undefined)?size[__1]:size[0];const _02=(damp[__1]!==undefined)?damp[__1]:damp[0];this._V1(__1);this._w1(_02);_Z1[__1]=_Y1[__1];let out=0;const _12=_Y1[__1]*_z1._C1;for(let _U1=0;_U1<_z1._A1;++_U1)out+=this._P1[_T1][_U1].process(_12);for(let _U1=0;_U1<_z1._B1;++_U1)out=this._Q1[_T1][_U1].process(out);const _22=(bypass[__1]!==undefined)?bypass[__1]:bypass[0];
if(_22>0.0){continue;}const _32=(mix[__1]!==undefined)?mix[__1]:mix[0];_Z1[__1]*=(1-_32);_Z1[__1]+=(out*_32);}}return this._42;}_V1(_o1){if(_o1===this._N1)return;const size=(_o1*_z1._E1)+_z1._F1;for(let _T1=0;_T1<this._P1.length;++_T1)for(let _U1=0;_U1<_z1._A1;++_U1)this._P1[_T1][_U1]._u1(size);this._N1=_o1;}_w1(_x1){if(_x1===this._O1)return;const damp=_x1*_z1._D1;for(let _T1=0;_T1<this._P1.length;++_T1)for(let _U1=0;_U1<_z1._A1;++_U1)this._P1[_T1][_U1]._w1(damp);this._O1=_x1;}}registerProcessor("reverb1-processor",
_z1);class _52 extends AudioWorkletProcessor{static get parameterDescriptors(){return [];}constructor(){super();this._L1();}process(_62,_72,_82){const input=_62[0];const _92=_72[0];const _a2=_72[1];for(let _T1=0;_T1<input.length;++_T1){const _Y1=input[_T1];const _b2=_92[_T1];const _c2=_a2[_T1];for(let __1=0;__1<_Y1.length;++__1){_b2[__1]=_Y1[__1];_c2[__1]=_Y1[__1];}}return this._42;}}class _d2 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,
minValue:0,maxValue:1}];}constructor(){super();this._L1();}process(_62,_72,_82){const _e2=_62[0];const _f2=_62[1];const output=_72[0];const bypass=_82.bypass;for(let _T1=0;_T1<_f2.length;++_T1){const _g2=_e2[_T1];const _h2=_f2[_T1];const _Z1=output[_T1];for(let __1=0;__1<_g2.length;++__1){const _22=(bypass[__1]!==undefined)?bypass[__1]:bypass[0];if(_22>0){_Z1[__1]=_h2[__1];}else {_Z1[__1]=_g2[__1];}}}return this._42;}}registerProcessor("eq-input",_52);registerProcessor("eq-output",_d2);class _i2 extends AudioWorkletProcessor{
static get parameterDescriptors(){const _j2=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"cutoff",automationRate:"a-rate",defaultValue:Math.min(500.0,_j2),minValue:10.0,maxValue:_j2},{name:"q",automationRate:"a-rate",defaultValue:1.5,minValue:1.0,maxValue:100.0}];}constructor(_K1){super();this._L1();const _M1=_K1.outputChannelCount[0];this._k2=0;this._l2=0;this._m2=0;this._n2=0;this._o2=0;this._p2=new Float32Array(_M1);this._q2=new Float32Array(_M1);
this._r2=new Float32Array(_M1);this._s2=new Float32Array(_M1);this._t2=-1;this._u2=-1;}process(_W1,_X1,parameters){const input=_W1[0];const output=_X1[0];const bypass=parameters.bypass;const cutoff=parameters.cutoff;const q=parameters.q;const _v2=(cutoff.length===1&&q.length===1);if(_v2)this._w2(cutoff[0],q[0]);for(let _T1=0;_T1<input.length;++_T1){const _Y1=input[_T1];const _Z1=output[_T1];for(let __1=0;__1<_Y1.length;++__1){if(_v2===!1){const _T1=(cutoff[__1]!==undefined)?cutoff[__1]:cutoff[0];const _x2=(q[__1]!==undefined)?q[__1]:q[0];
this._w2(_T1,_x2);}const _y2=this._m2*_Y1[__1]+this._n2*this._p2[_T1]+this._o2*this._q2[_T1]-this._k2*this._r2[_T1]-this._l2*this._s2[_T1];this._q2[_T1]=this._p2[_T1];this._p2[_T1]=_Y1[__1];this._s2[_T1]=this._r2[_T1];this._r2[_T1]=_y2;const _22=(bypass[__1]!==undefined)?bypass[__1]:bypass[0];_Z1[__1]=(_22>0)?_Y1[__1]:_y2;}}return this._42;}_w2(_z2,_A2){if(_z2===this._t2&&_A2===this._u2)return;const _B2=2*Math.PI*_z2/sampleRate;const alpha=Math.sin(_B2)/(2*_A2);const _C2=Math.cos(_B2);const _D2=1+alpha;
const _k2=-2*_C2;const _l2=1-alpha;const _m2=(1-_C2)/2;const _n2=1-_C2;const _o2=(1-_C2)/2;this._k2=_k2/_D2;this._l2=_l2/_D2;this._m2=_m2/_D2;this._n2=_n2/_D2;this._o2=_o2/_D2;this._t2=_z2;this._u2=_A2;}}registerProcessor("lpf2-processor",_i2);class _E2 extends AudioWorkletProcessor{static get parameterDescriptors(){const _F2=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"freq",automationRate:"a-rate",defaultValue:Math.min(1500.0,
_F2),minValue:10.0,maxValue:_F2},{name:"q",automationRate:"a-rate",defaultValue:1.0,minValue:1.0,maxValue:100.0},{name:"gain",automationRate:"a-rate",defaultValue:1e-2,minValue:1e-6}];}constructor(_K1){super();this._L1();const _M1=_K1.outputChannelCount[0];this._k2=0;this._l2=0;this._m2=0;this._n2=0;this._o2=0;this._p2=new Float32Array(_M1);this._q2=new Float32Array(_M1);this._r2=new Float32Array(_M1);this._s2=new Float32Array(_M1);this._G2=-1;this._u2=-1;this._H2=-1;}process(_W1,_X1,parameters){const input=_W1[0];
const output=_X1[0];const bypass=parameters.bypass;const freq=parameters.freq;const q=parameters.q;const gain=parameters.gain;const _v2=(freq.length===1&&q.length===1&&gain.length===1);if(_v2)this._w2(freq[0],q[0],gain[0]);for(let _T1=0;_T1<input.length;++_T1){const _Y1=input[_T1];const _Z1=output[_T1];for(let __1=0;__1<_Y1.length;++__1){if(_v2===!1){const _I2=(freq[__1]!==undefined)?freq[__1]:freq[0];const _x2=(q[__1]!==undefined)?q[__1]:q[0];const _J2=(gain[__1]!==undefined)?gain[__1]:gain[0];this._w2(_I2,
_x2,_J2);}const _y2=this._m2*_Y1[__1]+this._n2*this._p2[_T1]+this._o2*this._q2[_T1]-this._k2*this._r2[_T1]-this._l2*this._s2[_T1];this._q2[_T1]=this._p2[_T1];this._p2[_T1]=_Y1[__1];this._s2[_T1]=this._r2[_T1];this._r2[_T1]=_y2;const _22=(bypass[__1]!==undefined)?bypass[__1]:bypass[0];_Z1[__1]=(_22>0)?_Y1[__1]:_y2;}}return this._42;}_w2(_K2,_A2,_L2){if(_K2===this._G2&&_A2===this._u2&&_L2===this._H2)return;const _B2=2*Math.PI*_K2/sampleRate;const _C2=Math.cos(_B2);const _M2=Math.sqrt(_L2);const alpha=Math.sin(_B2)/(2*_A2);
const _N2=alpha/_M2;const _O2=alpha*_M2;const _D2=1+_N2;const _k2=-2*_C2;const _l2=1-_N2;const _m2=1+_O2;const _n2=_k2;const _o2=1-_O2;this._k2=_k2/_D2;this._l2=_l2/_D2;this._m2=_m2/_D2;this._n2=_n2/_D2;this._o2=_o2/_D2;this._G2=_K2;this._u2=_A2;this._H2=_L2;}}registerProcessor("peak-eq-processor",_E2);class _P2 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"gain",automationRate:"a-rate",defaultValue:0.5,
minValue:0.0}];}constructor(){super();this._L1();}process(_W1,_X1,parameters){const input=_W1[0];const output=_X1[0];const bypass=parameters.bypass;const gain=parameters.gain;for(let _T1=0;_T1<input.length;++_T1){const _Y1=input[_T1];const _Z1=output[_T1];for(let __1=0;__1<_Y1.length;++__1){_Z1[__1]=_Y1[__1];const _22=(bypass[__1]!==undefined)?bypass[__1]:bypass[0];if(_22>0.0){continue;}const _J2=(gain[__1]!==undefined)?gain[__1]:gain[0];_Z1[__1]*=_J2;}}return this._42;}}registerProcessor("gain-processor",
_P2);class _Q2 extends AudioWorkletProcessor{static get parameterDescriptors(){const _j2=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"cutoff",automationRate:"a-rate",defaultValue:Math.min(1500.0,_j2),minValue:10.0,maxValue:_j2},{name:"q",automationRate:"a-rate",defaultValue:1.5,minValue:1.0,maxValue:100.0}];}constructor(_K1){super();this._L1();const _M1=_K1.outputChannelCount[0];this._k2=0;this._l2=0;this._m2=0;this._n2=0;this._o2=0;
this._p2=new Float32Array(_M1);this._q2=new Float32Array(_M1);this._r2=new Float32Array(_M1);this._s2=new Float32Array(_M1);this._t2=-1;this._u2=-1;}process(_W1,_X1,parameters){const input=_W1[0];const output=_X1[0];const bypass=parameters.bypass;const cutoff=parameters.cutoff;const q=parameters.q;const _v2=(cutoff.length===1&&q.length===1);if(_v2)this._w2(cutoff[0],q[0]);for(let _T1=0;_T1<input.length;++_T1){const _Y1=input[_T1];const _Z1=output[_T1];for(let __1=0;__1<_Y1.length;++__1){if(_v2===!1){const _T1=(cutoff[__1]!==undefined)?cutoff[__1]:cutoff[0];
const _x2=(q[__1]!==undefined)?q[__1]:q[0];this._w2(_T1,_x2);}const _y2=this._m2*_Y1[__1]+this._n2*this._p2[_T1]+this._o2*this._q2[_T1]-this._k2*this._r2[_T1]-this._l2*this._s2[_T1];this._q2[_T1]=this._p2[_T1];this._p2[_T1]=_Y1[__1];this._s2[_T1]=this._r2[_T1];this._r2[_T1]=_y2;const _22=(bypass[__1]!==undefined)?bypass[__1]:bypass[0];_Z1[__1]=(_22>0)?_Y1[__1]:_y2;}}return this._42;}_w2(_z2,_A2){if(_z2===this._t2&&_A2===this._u2)return;const _B2=2*Math.PI*_z2/sampleRate;const alpha=Math.sin(_B2)/(2*_A2);
const _C2=Math.cos(_B2);const _D2=1+alpha;const _k2=-2*_C2;const _l2=1-alpha;const _m2=(1+_C2)/2;const _n2=-1-_C2;const _o2=(1+_C2)/2;this._k2=_k2/_D2;this._l2=_l2/_D2;this._m2=_m2/_D2;this._n2=_n2/_D2;this._o2=_o2/_D2;this._t2=_z2;this._u2=_A2;}}registerProcessor("hpf2-processor",_Q2);class _R2 extends AudioWorkletProcessor{static get parameterDescriptors(){const _F2=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"freq",automationRate:"a-rate",
defaultValue:Math.min(5000.0,_F2),minValue:10.0,maxValue:_F2},{name:"q",automationRate:"a-rate",defaultValue:1.0,minValue:1.0,maxValue:100.0},{name:"gain",automationRate:"a-rate",defaultValue:1e-2,minValue:1e-6}];}constructor(_K1){super();this._L1();const _M1=_K1.outputChannelCount[0];this._k2=0;this._l2=0;this._m2=0;this._n2=0;this._o2=0;this._p2=new Float32Array(_M1);this._q2=new Float32Array(_M1);this._r2=new Float32Array(_M1);this._s2=new Float32Array(_M1);this._G2=-1;this._u2=-1;this._H2=-1;}process(_W1,
_X1,parameters){const input=_W1[0];const output=_X1[0];const bypass=parameters.bypass;const freq=parameters.freq;const q=parameters.q;const gain=parameters.gain;const _v2=(freq.length===1&&q.length===1&&gain.length===1);if(_v2)this._w2(freq[0],q[0],gain[0]);for(let _T1=0;_T1<input.length;++_T1){const _Y1=input[_T1];const _Z1=output[_T1];for(let __1=0;__1<_Y1.length;++__1){if(_v2===!1){const _I2=(freq[__1]!==undefined)?freq[__1]:freq[0];const _x2=(q[__1]!==undefined)?q[__1]:q[0];const _J2=(gain[__1]!==undefined)?gain[__1]:gain[0];
this._w2(_I2,_x2,_J2);}const _y2=this._m2*_Y1[__1]+this._n2*this._p2[_T1]+this._o2*this._q2[_T1]-this._k2*this._r2[_T1]-this._l2*this._s2[_T1];this._q2[_T1]=this._p2[_T1];this._p2[_T1]=_Y1[__1];this._s2[_T1]=this._r2[_T1];this._r2[_T1]=_y2;const _22=(bypass[__1]!==undefined)?bypass[__1]:bypass[0];_Z1[__1]=(_22>0)?_Y1[__1]:_y2;}}return this._42;}_w2(_K2,_A2,_L2){if(_K2===this._G2&&_A2===this._u2&&_L2===this._H2)return;const _B2=2*Math.PI*_K2/sampleRate;const _C2=Math.cos(_B2);const _M2=Math.sqrt(_L2);const _S2=_M2+1;
const _T2=_M2-1;const _U2=_S2*_C2;const _V2=_T2*_C2;const _W2=_S2-_V2;const _X2=_S2+_V2;const alpha=Math.sin(_B2)/(2*_A2);const _Y2=(2*Math.sqrt(_M2)*alpha);const _D2=_W2+_Y2;const _k2=2*(_T2-_U2);const _l2=_W2-_Y2;const _m2=_M2*(_X2+_Y2);const _n2=-2*_M2*(_T2+_U2);const _o2=_M2*(_X2-_Y2);this._k2=_k2/_D2;this._l2=_l2/_D2;this._m2=_m2/_D2;this._n2=_n2/_D2;this._o2=_o2/_D2;this._G2=_K2;this._u2=_A2;this._H2=_L2;}}registerProcessor("hi-shelf-processor",_R2);function _Z2(){}_Z2.__2={_03:0,_13:1,_23:2,_33:3,_43:4,
_53:5};_Z2._63=function(_73){return 1.0-_73;};_Z2._83=function(_73){return _73;};_Z2._93=function(_73){return 0.5*(Math.sin((_73*2.0*Math.PI)-(Math.PI/2.0))+1.0);};_Z2._a3=function(_73){if(_73<0.5){return 0.0;}return 1.0;};_Z2._b3=function(_73){if(_73<0.5){return 2.0*_73;}return 2.0-(2.0*_73);};_Z2._c3=[_Z2._63,_Z2._83,_Z2._93,_Z2._a3,_Z2._b3];_d3._e3=512;_d3._f3=1.0/_d3._e3;function _d3(_g3){this.data=new Float32Array(_d3._e3);for(let _U1=0;_U1<_d3._e3;++_U1){this.data[_U1]=_g3(_U1*_d3._f3);}}_d3.prototype._h3=function(_73){
_73=Math.max(0.0,_73);_73=Math.min(_73,1.0);const _i3=_73*_d3._e3;const _j3=~~_i3;const _k3=_i3-_j3;let _l3=_j3;let _m3=_l3+1;if(_l3>=_d3._e3){_l3-=_d3._e3;}if(_m3>=_d3._e3){_m3-=_d3._e3;}const _n3=this.data[_l3];const _o3=this.data[_m3];return _n3+(_o3-_n3)*_k3;};;_p3._q3=[];_p3._r3=!1;_p3._s3=0.0;_p3._F2=20.0;function _p3(){this._t3=48000;this.shape=_Z2.__2._23;this.freq=1.0;this._u3=0.0;this._f3=0.0;this._v3=0.0;if(_p3._r3==true){return;}for(let _U1=0;_U1<_Z2.__2._53;++_U1){_p3._q3[_U1]=new _d3(_Z2._c3[_U1]);
}_p3._r3=true;}_p3._w3=function(){return(_p3._r3==!0);};_p3.prototype._x3=function(_y3){this._t3=_y3;this._z3();};;_p3.prototype._A3=function(_K2){_K2=Math.max(_p3._s3,_K2);_K2=Math.min(_K2,_p3._F2);this.freq=_K2;this._z3();};;_p3.prototype._B3=function(_C3){_C3=Math.max(0.0,_C3);_C3=Math.min(_C3,1.0);const _D3=_C3-this._v3;this._v3=_C3;this._u3+=_D3;while(this._u3>=1.0){this._u3-=1.0;}while(this._u3<0.0){this._u3+=1.0;}};;_p3.prototype._E3=function(_F3){_F3=Math.max(0,_F3);_F3=Math.min(_F3,_Z2.__2._53-1);
this.shape=_F3;};;_p3.prototype._h3=function(){const _G3=_p3._q3[this.shape]._h3(this._u3);this._u3+=this._f3;while(this._u3>=1.0){this._u3-=1.0;}return _G3;};;_p3.prototype._z3=function(){this._f3=this.freq/this._t3;};;class _H3 extends AudioWorkletProcessor{static _I3=5.0;static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"time",automationRate:"a-rate",defaultValue:0.2,minValue:0.0,maxValue:_H3._I3},{name:"feedback",automationRate:"a-rate",
defaultValue:0.5,minValue:0.0,maxValue:1.0},{name:"mix",automationRate:"a-rate",defaultValue:0.35,minValue:0.0,maxValue:1.0}];}constructor(_K1){super();this._L1();const _M1=_K1.outputChannelCount[0];const _J3=(_H3._I3*sampleRate)+1;this.buffer=new Array(_M1);this._K3=new Uint32Array(_M1);for(let _T1=0;_T1<_M1;++_T1)this.buffer[_T1]=new Float32Array(_J3);}process(_W1,_X1,parameters){const input=_W1[0];const output=_X1[0];const bypass=parameters.bypass;const time=parameters.time;const feedback=parameters.feedback;
const mix=parameters.mix;for(let _T1=0;_T1<input.length;++_T1){const _Y1=input[_T1];const _Z1=output[_T1];for(let __1=0;__1<_Y1.length;++__1){_Z1[__1]=_Y1[__1];const _L3=(time[__1]!==undefined)?time[__1]:time[0];const _M3=this._h3(_T1,_L3);const _I2=(feedback[__1]!==undefined)?feedback[__1]:feedback[0];const _N3=_Y1[__1]+(_M3*_I2);this.write(_T1,_N3);const _22=(bypass[__1]!==undefined)?bypass[__1]:bypass[0];if(_22>0.0){continue;}const _32=(mix[__1]!==undefined)?mix[__1]:mix[0];_Z1[__1]*=(1-_32);_Z1[__1]+=(_M3*_32);
}}return this._42;}_h3(_O3,_P3){const _Q3=_P3*sampleRate;let _l3=(this._K3[_O3]-~~_Q3);let _m3=(_l3-1);while(_l3<0)_l3+=this.buffer[_O3].length;while(_m3<0)_m3+=this.buffer[_O3].length;const _R3=_Q3-~~_Q3;const _n3=this.buffer[_O3][_l3];const _o3=this.buffer[_O3][_m3];return _n3+(_o3-_n3)*_R3;}write(_O3,_t1){++this._K3[_O3];this._K3[_O3]%=this.buffer[_O3].length;this.buffer[_O3][this._K3[_O3]]=_t1;}}registerProcessor("delay-processor",_H3);AudioWorkletProcessor.prototype._L1=function(){this._42=true;this.port.onmessage=(_S3)=>{
if(_S3.data==="kill")this._42=false;};};;class _T3 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1}];}constructor(){super();this._L1();}process(_W1,_X1,parameters){const input=_W1[0];const bypass=parameters.bypass;for(let _T1=0;_T1<input.length;++_T1){const _Y1=input[_T1];for(let __1=0;__1<_Y1.length;++__1){const _22=(bypass[__1]!==undefined)?bypass[__1]:bypass[0];_X1[_22][_T1][__1]=_Y1[__1];}}return this._42;
}}class _U3 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"gain",automationRate:"a-rate",defaultValue:1,minValue:0}];}constructor(){super();this._L1();}process(_W1,_X1,parameters){const _e2=_W1[0];const _f2=_W1[1];const output=_X1[0];const gain=parameters.gain;for(let _T1=0;_T1<_f2.length;++_T1){const _Y1=_f2[_T1];const _Z1=output[_T1];for(let __1=0;__1<_Y1.length;++__1)_Z1[__1]=_Y1[__1];}for(let _T1=0;_T1<_e2.length;++_T1){const _Y1=_e2[_T1];const _Z1=output[_T1];for(let __1=0;__1<_Y1.length;
++__1){const _J2=(gain[__1]!==undefined)?gain[__1]:gain[0];_Z1[__1]+=_Y1[__1]*_J2;}}return this._42;}}registerProcessor("audio-bus-input",_T3);registerProcessor("audio-bus-output",_U3);class _V3 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"gain",automationRate:"a-rate",defaultValue:1.0,minValue:0.0},{name:"factor",automationRate:"a-rate",defaultValue:20,minValue:1,maxValue:100},{name:"resolution",
automationRate:"a-rate",defaultValue:8,minValue:2,maxValue:16},{name:"mix",automationRate:"a-rate",defaultValue:0.8,minValue:0.0,maxValue:1.0}];}static _W3=[undefined,undefined,2,4,8,16,32,64,128,256,512,1024,2048,4096,8192,16384,32768];constructor(_K1){super();this._L1();const _M1=_K1.outputChannelCount[0];this._X3=new Float32Array(_M1);this._Y3=new Uint32Array(_M1);}process(_W1,_X1,parameters){const input=_W1[0];const output=_X1[0];const bypass=parameters.bypass;const gain=parameters.gain;const factor=parameters.factor;
const resolution=parameters.resolution;const mix=parameters.mix;for(let _T1=0;_T1<input.length;++_T1){const _Y1=input[_T1];const _Z1=output[_T1];for(let __1=0;__1<_Y1.length;++__1){_Z1[__1]=_Y1[__1];if(this._Y3[_T1]===0)this._X3[_T1]=_Y1[__1];const _I2=(factor[__1]!==undefined)?factor[__1]:factor[0];++this._Y3[_T1];this._Y3[_T1]%=_I2;const _22=(bypass[__1]!==undefined)?bypass[__1]:bypass[0];if(_22>0.0){continue;}let _12=this._X3[_T1];const _J2=(gain[__1]!==undefined)?gain[__1]:gain[0];_12*=_J2;_12=Math.max(Math.min(_12,
1.0),-1.0);const _Z3=(resolution[__1]!==undefined)?resolution[__1]:resolution[0];const max=(_12>0.0)?_V3._W3[_Z3]-1:_V3._W3[_Z3];_12=Math.round(_12*max)/max;const _32=(mix[__1]!==undefined)?mix[__1]:mix[0];_Z1[__1]*=(1.0-_32);_Z1[__1]+=(_12*_32);}}return this._42;}}registerProcessor("bitcrusher-processor",_V3);class __3 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"rate",automationRate:"a-rate",defaultValue:5.0,
minValue:0.0,maxValue:20.0},{name:"intensity",automationRate:"a-rate",defaultValue:1.0,minValue:0.0,maxValue:1.0},{name:"offset",automationRate:"a-rate",defaultValue:0.0,minValue:0.0,maxValue:1.0},{name:"shape",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:4}];}constructor(_K1){super();this._L1();const _M1=_K1.outputChannelCount[0];this._04=new Array(_M1).fill(1.0);this._14=new Array(_M1).fill(0.0);this._24=new Array(_M1).fill(_Z2.__2._03);this._34=new Array(_M1);for(let _T1=0;_T1<_M1;++_T1){
this._34[_T1]=new _p3();this._34[_T1]._x3(sampleRate);this._34[_T1]._A3(this._04[_T1]);this._34[_T1]._E3(this._24[_T1]);if(_T1%2===1){this._34[_T1]._B3(this._14[_T1]);}}}process(_W1,_X1,parameters){const input=_W1[0];const output=_X1[0];const bypass=parameters.bypass;const rate=parameters.rate;const intensity=parameters.intensity;const offset=parameters.offset;const shape=parameters.shape;for(let _T1=0;_T1<input.length;++_T1){const _Y1=input[_T1];const _Z1=output[_T1];for(let __1=0;__1<_Y1.length;++__1){_Z1[__1]=_Y1[__1];
const _Z3=(rate[__1]!==undefined)?rate[__1]:rate[0];const _44=(offset[__1]!==undefined)?offset[__1]:offset[0];const _54=(shape[__1]!==undefined)?shape[__1]:shape[0];this._64(_T1,_Z3,_44,_54);const _74=this._34[_T1]._h3();const _22=(bypass[__1]!==undefined)?bypass[__1]:bypass[0];if(_22>0.0){continue;}const _U1=(intensity[__1]!==undefined)?intensity[__1]:intensity[0];const out=_Y1[__1]*_74*_U1;_Z1[__1]*=(1.0-_U1);_Z1[__1]+=out;}}return this._42;}_64(_O3,_84,_C3,_F3){if(_84!==this._04[_O3]){this._34[_O3]._A3(_84);
this._04[_O3]=_84;}if(_C3!==this._14[_O3]){if(_O3%2===1){this._34[_O3]._B3(_C3);}this._14[_O3]=_C3;}if(_F3!==this._24[_O3]){this._34[_O3]._E3(_F3);this._24[_O3]=_F3;}}}registerProcessor("tremolo-processor",__3);class _94{constructor(_P3=1e-3){this.setTime(_P3);}setTime(_P3){this._a4=Math.exp(-1/(_P3*sampleRate));}process(_b4,_c4){return _b4+this._a4*(_c4-_b4);}}class _d4{constructor(_e4,_f4){this._g4=new _94(_e4);this._h4=new _94(_f4);this._i4=_e4;this._j4=_f4;}_k4(_P3){if(_P3===this._i4)return;this._g4.setTime(_P3);
this._i4=_P3;}_l4(_P3){if(_P3===this._j4)return;this._h4.setTime(_P3);this._j4=_P3;}process(_b4,_c4){if(_b4>_c4)return this._g4.process(_b4,_c4);else return this._h4.process(_b4,_c4);}}class _m4 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"ingain",automationRate:"a-rate",defaultValue:1,minValue:0},{name:"threshold",automationRate:"a-rate",defaultValue:0.125,minValue:1e-3,maxValue:1},{name:"ratio",
automationRate:"a-rate",defaultValue:4,minValue:1},{name:"attack",automationRate:"a-rate",defaultValue:0.05,minValue:1e-3,maxValue:1e-1},{name:"release",automationRate:"a-rate",defaultValue:0.25,minValue:1e-2,maxValue:1},{name:"outgain",automationRate:"a-rate",defaultValue:1,minValue:0}];}constructor(_n4){super();this._L1();const _g4=_m4.parameterDescriptors.find(_o4=>_o4.name==="attack");const _h4=_m4.parameterDescriptors.find(_o4=>_o4.name==="release");this._p4=new _d4(_g4.defaultValue,_h4.defaultValue);
this._q4=0;}process(_r4,_s4,_t4){const input=_r4[0];const output=_s4[0];const bypass=_t4.bypass;const ingain=_t4.ingain;const outgain=_t4.outgain;const threshold=_t4.threshold;const ratio=_t4.ratio;const attack=_t4.attack;const release=_t4.release;if(input.length===0)return this._42;for(let __1=0;__1<input[0].length;++__1){let _u4=input.map(_v4=>_v4[__1]);output.forEach((_v4,_w4)=>{_v4[__1]=_u4[_w4];});const _x4=(ingain[__1]!==undefined)?ingain[__1]:ingain[0];_u4=_u4.map(_y4=>_y4*=_x4);const rect=_u4.map(_y4=>Math.abs(_y4));
const max=Math.max(...rect);const _z4=_A4(max);const _L3=(threshold[__1]!==undefined)?threshold[__1]:threshold[0];const _B4=_A4(_L3);const _C4=Math.max(0,_z4-_B4);const _g4=(attack[__1]!==undefined)?attack[__1]:attack[0];const _h4=(release[__1]!==undefined)?release[__1]:release[0];this._p4._k4(_g4);this._p4._l4(_h4);this._q4=this._p4.process(_C4,this._q4);const _22=(bypass[__1]!==undefined)?bypass[__1]:bypass[0];if(_22>0)continue;const _Z3=(ratio[__1]!==undefined)?ratio[__1]:ratio[0];const _D4=(this._q4/_Z3)-this._q4;
const _J2=_E4(_D4);_u4=_u4.map(_y4=>_y4*=_J2);const _F4=(outgain[__1]!==undefined)?outgain[__1]:outgain[0];_u4=_u4.map(_y4=>_y4*=_F4);output.forEach((_v4,_w4)=>{_v4[__1]=_u4[_w4];});}return this._42;}}function _A4(_G4){return 20*Math.log10(_G4);}function _E4(_G4){return Math.pow(10,_G4/20);}registerProcessor("compressor-processor",_m4);class _H4 extends AudioWorkletProcessor{static get parameterDescriptors(){const _F2=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,
minValue:0,maxValue:1},{name:"freq",automationRate:"a-rate",defaultValue:Math.min(500.0,_F2),minValue:10.0,maxValue:_F2},{name:"q",automationRate:"a-rate",defaultValue:1.0,minValue:1.0,maxValue:100.0},{name:"gain",automationRate:"a-rate",defaultValue:1e-2,minValue:1e-6}];}constructor(_K1){super();this._L1();const _M1=_K1.outputChannelCount[0];this._k2=0;this._l2=0;this._m2=0;this._n2=0;this._o2=0;this._p2=new Float32Array(_M1);this._q2=new Float32Array(_M1);this._r2=new Float32Array(_M1);this._s2=new Float32Array(_M1);
this._G2=-1;this._u2=-1;this._H2=-1;}process(_W1,_X1,parameters){const input=_W1[0];const output=_X1[0];const bypass=parameters.bypass;const freq=parameters.freq;const q=parameters.q;const gain=parameters.gain;const _v2=(freq.length===1&&q.length===1&&gain.length===1);if(_v2)this._w2(freq[0],q[0],gain[0]);for(let _T1=0;_T1<input.length;++_T1){const _Y1=input[_T1];const _Z1=output[_T1];for(let __1=0;__1<_Y1.length;++__1){if(_v2===!1){const _I2=(freq[__1]!==undefined)?freq[__1]:freq[0];const _x2=(q[__1]!==undefined)?q[__1]:q[0];
const _J2=(gain[__1]!==undefined)?gain[__1]:gain[0];this._w2(_I2,_x2,_J2);}const _y2=this._m2*_Y1[__1]+this._n2*this._p2[_T1]+this._o2*this._q2[_T1]-this._k2*this._r2[_T1]-this._l2*this._s2[_T1];this._q2[_T1]=this._p2[_T1];this._p2[_T1]=_Y1[__1];this._s2[_T1]=this._r2[_T1];this._r2[_T1]=_y2;const _22=(bypass[__1]!==undefined)?bypass[__1]:bypass[0];_Z1[__1]=(_22>0)?_Y1[__1]:_y2;}}return this._42;}_w2(_K2,_A2,_L2){if(_K2===this._G2&&_A2===this._u2&&_L2===this._H2)return;const _B2=2*Math.PI*_K2/sampleRate;
const _C2=Math.cos(_B2);const _M2=Math.sqrt(_L2);const _S2=_M2+1;const _T2=_M2-1;const _U2=_S2*_C2;const _V2=_T2*_C2;const _W2=_S2-_V2;const _X2=_S2+_V2;const alpha=Math.sin(_B2)/(2*_A2);const _Y2=(2*Math.sqrt(_M2)*alpha);const _D2=_X2+_Y2;const _k2=-2*(_T2+_U2);const _l2=_X2-_Y2;const _m2=_M2*(_W2+_Y2);const _n2=2*_M2*(_T2-_U2);const _o2=_M2*(_W2-_Y2);this._k2=_k2/_D2;this._l2=_l2/_D2;this._m2=_m2/_D2;this._n2=_n2/_D2;this._o2=_o2/_D2;this._G2=_K2;this._u2=_A2;this._H2=_L2;}}registerProcessor("lo-shelf-processor",
_H4);