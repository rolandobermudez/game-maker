class _r3{constructor(_s3){this._t3=0;this._u3=0;this.feedback=0;this._v3=0;this.buffer=new Float32Array(_s3);this._w3=0;}process(_x3){const out=this.buffer[this._w3];this._v3=(this._v3*this._t3)+(out*this._u3);this.buffer[this._w3]=_x3+(this._v3*this.feedback);++this._w3;this._w3%=this.buffer.length;return out;}_y3(_z3){this.feedback=Math.min(Math.max(0,_z3),1);}_A3(_B3){this._t3=Math.min(Math.max(0,_B3),1);this._u3=1-this._t3;}}class _C3{constructor(_s3){this.feedback=0;this.buffer=new Float32Array(_s3);
this._w3=0;}process(_x3){const out=this.buffer[this._w3];this.buffer[this._w3]=_x3+(out*this.feedback);++this._w3;this._w3%=this.buffer.length;return(out-_x3);}_y3(_z3){this.feedback=Math.min(Math.max(0,_z3),1);}}class _D3 extends AudioWorkletProcessor{static _E3=8;static _F3=4;static _G3=0.015;static _H3=0.4;static _I3=0.28;static _J3=0.7;static _K3=[1116,1188,1277,1356,1422,1491,1557,1617];static _L3=[1139,1211,1300,1379,1445,1514,1580,1640];static _M3=[556,441,341,225];static _N3=[579,464,364,248];static get parameterDescriptors(){
return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"size",automationRate:"a-rate",defaultValue:0.7,minValue:0.0,maxValue:1.0},{name:"damp",automationRate:"a-rate",defaultValue:0.1,minValue:0.0,maxValue:1.0},{name:"mix",automationRate:"a-rate",defaultValue:0.35,minValue:0.0,maxValue:1.0}];}constructor(_O3){super();this._P3();const _Q3=_O3.outputChannelCount[0];this._R3=-1;this._S3=-1;this._T3=new Array(_Q3);this._U3=new Array(_Q3);const _V3=[_D3._K3,_D3._L3];const _W3=[_D3._M3,
_D3._N3];for(let _X3=0;_X3<_Q3;++_X3){this._T3[_X3]=new Array(_D3._E3);this._U3[_X3]=new Array(_D3._F3);for(let _Y3=0;_Y3<_D3._E3;++_Y3)this._T3[_X3][_Y3]=new _r3(_V3[_X3%_V3.length][_Y3]);for(let _Y3=0;_Y3<_D3._F3;++_Y3)this._U3[_X3][_Y3]=new _C3(_W3[_X3%_W3.length][_Y3]);}this._Z3(0.5);this._A3(0.5);for(let _X3=0;_X3<_Q3;++_X3)for(let _Y3=0;_Y3<_D3._F3;++_Y3)this._U3[_X3][_Y3]._y3(0.5);}process(__3,_04,parameters){const input=__3[0];const output=_04[0];const bypass=parameters.bypass;const size=parameters.size;
const damp=parameters.damp;const mix=parameters.mix;for(let _X3=0;_X3<input.length;++_X3){const _14=input[_X3];const _24=output[_X3];for(let _34=0;_34<_14.length;++_34){const _34=(size[_34]!==undefined)?size[_34]:size[0];const _44=(damp[_34]!==undefined)?damp[_34]:damp[0];this._Z3(_34);this._A3(_44);_24[_34]=_14[_34];let out=0;const _54=_14[_34]*_D3._G3;for(let _Y3=0;_Y3<_D3._E3;++_Y3)out+=this._T3[_X3][_Y3].process(_54);for(let _Y3=0;_Y3<_D3._F3;++_Y3)out=this._U3[_X3][_Y3].process(out);const _64=(bypass[_34]!==undefined)?bypass[_34]:bypass[0];
if(_64>0.0){continue;}const _74=(mix[_34]!==undefined)?mix[_34]:mix[0];_24[_34]*=(1-_74);_24[_34]+=(out*_74);}}return this._84;}_Z3(_s3){if(_s3===this._R3)return;const size=(_s3*_D3._I3)+_D3._J3;for(let _X3=0;_X3<this._T3.length;++_X3)for(let _Y3=0;_Y3<_D3._E3;++_Y3)this._T3[_X3][_Y3]._y3(size);this._R3=_s3;}_A3(_B3){if(_B3===this._S3)return;const damp=_B3*_D3._H3;for(let _X3=0;_X3<this._T3.length;++_X3)for(let _Y3=0;_Y3<_D3._E3;++_Y3)this._T3[_X3][_Y3]._A3(damp);this._S3=_B3;}}registerProcessor("reverb1-processor",
_D3);class _94 extends AudioWorkletProcessor{static get parameterDescriptors(){return [];}constructor(){super();this._P3();}process(_a4,_b4,_c4){const input=_a4[0];const _d4=_b4[0];const _e4=_b4[1];for(let _X3=0;_X3<input.length;++_X3){const _14=input[_X3];const _f4=_d4[_X3];const _g4=_e4[_X3];for(let _34=0;_34<_14.length;++_34){_f4[_34]=_14[_34];_g4[_34]=_14[_34];}}return this._84;}}class _h4 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,
minValue:0,maxValue:1}];}constructor(){super();this._P3();}process(_a4,_b4,_c4){const _i4=_a4[0];const _j4=_a4[1];const output=_b4[0];const bypass=_c4.bypass;for(let _X3=0;_X3<_j4.length;++_X3){const _k4=_i4[_X3];const _l4=_j4[_X3];const _24=output[_X3];for(let _34=0;_34<_k4.length;++_34){const _64=(bypass[_34]!==undefined)?bypass[_34]:bypass[0];if(_64>0){_24[_34]=_l4[_34];}else {_24[_34]=_k4[_34];}}}return this._84;}}registerProcessor("eq-input",_94);registerProcessor("eq-output",_h4);class _m4 extends AudioWorkletProcessor{
static get parameterDescriptors(){const _n4=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"cutoff",automationRate:"a-rate",defaultValue:Math.min(500.0,_n4),minValue:10.0,maxValue:_n4},{name:"q",automationRate:"a-rate",defaultValue:1.5,minValue:1.0,maxValue:100.0}];}constructor(_O3){super();this._P3();const _Q3=_O3.outputChannelCount[0];this._o4=0;this._p4=0;this._q4=0;this._r4=0;this._s4=0;this._t4=new Float32Array(_Q3);this._u4=new Float32Array(_Q3);
this._v4=new Float32Array(_Q3);this._w4=new Float32Array(_Q3);this._x4=-1;this._y4=-1;}process(__3,_04,parameters){const input=__3[0];const output=_04[0];const bypass=parameters.bypass;const cutoff=parameters.cutoff;const q=parameters.q;const _z4=(cutoff.length===1&&q.length===1);if(_z4)this._A4(cutoff[0],q[0]);for(let _X3=0;_X3<input.length;++_X3){const _14=input[_X3];const _24=output[_X3];for(let _34=0;_34<_14.length;++_34){if(_z4===!1){const _X3=(cutoff[_34]!==undefined)?cutoff[_34]:cutoff[0];const _B4=(q[_34]!==undefined)?q[_34]:q[0];
this._A4(_X3,_B4);}const _C4=this._q4*_14[_34]+this._r4*this._t4[_X3]+this._s4*this._u4[_X3]-this._o4*this._v4[_X3]-this._p4*this._w4[_X3];this._u4[_X3]=this._t4[_X3];this._t4[_X3]=_14[_34];this._w4[_X3]=this._v4[_X3];this._v4[_X3]=_C4;const _64=(bypass[_34]!==undefined)?bypass[_34]:bypass[0];_24[_34]=(_64>0)?_14[_34]:_C4;}}return this._84;}_A4(_D4,_E4){if(_D4===this._x4&&_E4===this._y4)return;const _F4=2*Math.PI*_D4/sampleRate;const alpha=Math.sin(_F4)/(2*_E4);const _G4=Math.cos(_F4);const _H4=1+alpha;
const _o4=-2*_G4;const _p4=1-alpha;const _q4=(1-_G4)/2;const _r4=1-_G4;const _s4=(1-_G4)/2;this._o4=_o4/_H4;this._p4=_p4/_H4;this._q4=_q4/_H4;this._r4=_r4/_H4;this._s4=_s4/_H4;this._x4=_D4;this._y4=_E4;}}registerProcessor("lpf2-processor",_m4);class _I4 extends AudioWorkletProcessor{static get parameterDescriptors(){const _J4=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"freq",automationRate:"a-rate",defaultValue:Math.min(1500.0,
_J4),minValue:10.0,maxValue:_J4},{name:"q",automationRate:"a-rate",defaultValue:1.0,minValue:1.0,maxValue:100.0},{name:"gain",automationRate:"a-rate",defaultValue:1e-2,minValue:1e-6}];}constructor(_O3){super();this._P3();const _Q3=_O3.outputChannelCount[0];this._o4=0;this._p4=0;this._q4=0;this._r4=0;this._s4=0;this._t4=new Float32Array(_Q3);this._u4=new Float32Array(_Q3);this._v4=new Float32Array(_Q3);this._w4=new Float32Array(_Q3);this._K4=-1;this._y4=-1;this._L4=-1;}process(__3,_04,parameters){const input=__3[0];
const output=_04[0];const bypass=parameters.bypass;const freq=parameters.freq;const q=parameters.q;const gain=parameters.gain;const _z4=(freq.length===1&&q.length===1&&gain.length===1);if(_z4)this._A4(freq[0],q[0],gain[0]);for(let _X3=0;_X3<input.length;++_X3){const _14=input[_X3];const _24=output[_X3];for(let _34=0;_34<_14.length;++_34){if(_z4===!1){const _M4=(freq[_34]!==undefined)?freq[_34]:freq[0];const _B4=(q[_34]!==undefined)?q[_34]:q[0];const _N4=(gain[_34]!==undefined)?gain[_34]:gain[0];this._A4(_M4,
_B4,_N4);}const _C4=this._q4*_14[_34]+this._r4*this._t4[_X3]+this._s4*this._u4[_X3]-this._o4*this._v4[_X3]-this._p4*this._w4[_X3];this._u4[_X3]=this._t4[_X3];this._t4[_X3]=_14[_34];this._w4[_X3]=this._v4[_X3];this._v4[_X3]=_C4;const _64=(bypass[_34]!==undefined)?bypass[_34]:bypass[0];_24[_34]=(_64>0)?_14[_34]:_C4;}}return this._84;}_A4(_O4,_E4,_P4){if(_O4===this._K4&&_E4===this._y4&&_P4===this._L4)return;const _F4=2*Math.PI*_O4/sampleRate;const _G4=Math.cos(_F4);const _Q4=Math.sqrt(_P4);const alpha=Math.sin(_F4)/(2*_E4);
const _R4=alpha/_Q4;const _S4=alpha*_Q4;const _H4=1+_R4;const _o4=-2*_G4;const _p4=1-_R4;const _q4=1+_S4;const _r4=_o4;const _s4=1-_S4;this._o4=_o4/_H4;this._p4=_p4/_H4;this._q4=_q4/_H4;this._r4=_r4/_H4;this._s4=_s4/_H4;this._K4=_O4;this._y4=_E4;this._L4=_P4;}}registerProcessor("peak-eq-processor",_I4);class _T4 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"gain",automationRate:"a-rate",defaultValue:0.5,
minValue:0.0}];}constructor(){super();this._P3();}process(__3,_04,parameters){const input=__3[0];const output=_04[0];const bypass=parameters.bypass;const gain=parameters.gain;for(let _X3=0;_X3<input.length;++_X3){const _14=input[_X3];const _24=output[_X3];for(let _34=0;_34<_14.length;++_34){_24[_34]=_14[_34];const _64=(bypass[_34]!==undefined)?bypass[_34]:bypass[0];if(_64>0.0){continue;}const _N4=(gain[_34]!==undefined)?gain[_34]:gain[0];_24[_34]*=_N4;}}return this._84;}}registerProcessor("gain-processor",
_T4);class _U4 extends AudioWorkletProcessor{static get parameterDescriptors(){const _n4=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"cutoff",automationRate:"a-rate",defaultValue:Math.min(1500.0,_n4),minValue:10.0,maxValue:_n4},{name:"q",automationRate:"a-rate",defaultValue:1.5,minValue:1.0,maxValue:100.0}];}constructor(_O3){super();this._P3();const _Q3=_O3.outputChannelCount[0];this._o4=0;this._p4=0;this._q4=0;this._r4=0;this._s4=0;
this._t4=new Float32Array(_Q3);this._u4=new Float32Array(_Q3);this._v4=new Float32Array(_Q3);this._w4=new Float32Array(_Q3);this._x4=-1;this._y4=-1;}process(__3,_04,parameters){const input=__3[0];const output=_04[0];const bypass=parameters.bypass;const cutoff=parameters.cutoff;const q=parameters.q;const _z4=(cutoff.length===1&&q.length===1);if(_z4)this._A4(cutoff[0],q[0]);for(let _X3=0;_X3<input.length;++_X3){const _14=input[_X3];const _24=output[_X3];for(let _34=0;_34<_14.length;++_34){if(_z4===!1){const _X3=(cutoff[_34]!==undefined)?cutoff[_34]:cutoff[0];
const _B4=(q[_34]!==undefined)?q[_34]:q[0];this._A4(_X3,_B4);}const _C4=this._q4*_14[_34]+this._r4*this._t4[_X3]+this._s4*this._u4[_X3]-this._o4*this._v4[_X3]-this._p4*this._w4[_X3];this._u4[_X3]=this._t4[_X3];this._t4[_X3]=_14[_34];this._w4[_X3]=this._v4[_X3];this._v4[_X3]=_C4;const _64=(bypass[_34]!==undefined)?bypass[_34]:bypass[0];_24[_34]=(_64>0)?_14[_34]:_C4;}}return this._84;}_A4(_D4,_E4){if(_D4===this._x4&&_E4===this._y4)return;const _F4=2*Math.PI*_D4/sampleRate;const alpha=Math.sin(_F4)/(2*_E4);
const _G4=Math.cos(_F4);const _H4=1+alpha;const _o4=-2*_G4;const _p4=1-alpha;const _q4=(1+_G4)/2;const _r4=-1-_G4;const _s4=(1+_G4)/2;this._o4=_o4/_H4;this._p4=_p4/_H4;this._q4=_q4/_H4;this._r4=_r4/_H4;this._s4=_s4/_H4;this._x4=_D4;this._y4=_E4;}}registerProcessor("hpf2-processor",_U4);class _V4 extends AudioWorkletProcessor{static get parameterDescriptors(){const _J4=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"freq",automationRate:"a-rate",
defaultValue:Math.min(5000.0,_J4),minValue:10.0,maxValue:_J4},{name:"q",automationRate:"a-rate",defaultValue:1.0,minValue:1.0,maxValue:100.0},{name:"gain",automationRate:"a-rate",defaultValue:1e-2,minValue:1e-6}];}constructor(_O3){super();this._P3();const _Q3=_O3.outputChannelCount[0];this._o4=0;this._p4=0;this._q4=0;this._r4=0;this._s4=0;this._t4=new Float32Array(_Q3);this._u4=new Float32Array(_Q3);this._v4=new Float32Array(_Q3);this._w4=new Float32Array(_Q3);this._K4=-1;this._y4=-1;this._L4=-1;}process(__3,
_04,parameters){const input=__3[0];const output=_04[0];const bypass=parameters.bypass;const freq=parameters.freq;const q=parameters.q;const gain=parameters.gain;const _z4=(freq.length===1&&q.length===1&&gain.length===1);if(_z4)this._A4(freq[0],q[0],gain[0]);for(let _X3=0;_X3<input.length;++_X3){const _14=input[_X3];const _24=output[_X3];for(let _34=0;_34<_14.length;++_34){if(_z4===!1){const _M4=(freq[_34]!==undefined)?freq[_34]:freq[0];const _B4=(q[_34]!==undefined)?q[_34]:q[0];const _N4=(gain[_34]!==undefined)?gain[_34]:gain[0];
this._A4(_M4,_B4,_N4);}const _C4=this._q4*_14[_34]+this._r4*this._t4[_X3]+this._s4*this._u4[_X3]-this._o4*this._v4[_X3]-this._p4*this._w4[_X3];this._u4[_X3]=this._t4[_X3];this._t4[_X3]=_14[_34];this._w4[_X3]=this._v4[_X3];this._v4[_X3]=_C4;const _64=(bypass[_34]!==undefined)?bypass[_34]:bypass[0];_24[_34]=(_64>0)?_14[_34]:_C4;}}return this._84;}_A4(_O4,_E4,_P4){if(_O4===this._K4&&_E4===this._y4&&_P4===this._L4)return;const _F4=2*Math.PI*_O4/sampleRate;const _G4=Math.cos(_F4);const _Q4=Math.sqrt(_P4);const _W4=_Q4+1;
const _X4=_Q4-1;const _Y4=_W4*_G4;const _Z4=_X4*_G4;const __4=_W4-_Z4;const _05=_W4+_Z4;const alpha=Math.sin(_F4)/(2*_E4);const _15=(2*Math.sqrt(_Q4)*alpha);const _H4=__4+_15;const _o4=2*(_X4-_Y4);const _p4=__4-_15;const _q4=_Q4*(_05+_15);const _r4=-2*_Q4*(_X4+_Y4);const _s4=_Q4*(_05-_15);this._o4=_o4/_H4;this._p4=_p4/_H4;this._q4=_q4/_H4;this._r4=_r4/_H4;this._s4=_s4/_H4;this._K4=_O4;this._y4=_E4;this._L4=_P4;}}registerProcessor("hi-shelf-processor",_V4);function _25(){}_25._35={_45:0,_55:1,_65:2,_75:3,_85:4,
_95:5};_25._a5=function(_b5){return 1.0-_b5;};_25._c5=function(_b5){return _b5;};_25._d5=function(_b5){return 0.5*(Math.sin((_b5*2.0*Math.PI)-(Math.PI/2.0))+1.0);};_25._e5=function(_b5){if(_b5<0.5){return 0.0;}return 1.0;};_25._f5=function(_b5){if(_b5<0.5){return 2.0*_b5;}return 2.0-(2.0*_b5);};_25._g5=[_25._a5,_25._c5,_25._d5,_25._e5,_25._f5];_h5._i5=512;_h5._j5=1.0/_h5._i5;function _h5(_k5){this.data=new Float32Array(_h5._i5);for(let _Y3=0;_Y3<_h5._i5;++_Y3){this.data[_Y3]=_k5(_Y3*_h5._j5);}}_h5.prototype._l5=function(_b5){
_b5=Math.max(0.0,_b5);_b5=Math.min(_b5,1.0);const _m5=_b5*_h5._i5;const _n5=~~_m5;const _o5=_m5-_n5;let _p5=_n5;let _q5=_p5+1;if(_p5>=_h5._i5){_p5-=_h5._i5;}if(_q5>=_h5._i5){_q5-=_h5._i5;}const _r5=this.data[_p5];const _s5=this.data[_q5];return _r5+(_s5-_r5)*_o5;};;_t5._u5=[];_t5._v5=!1;_t5._w5=0.0;_t5._J4=20.0;function _t5(){this._x5=48000;this.shape=_25._35._65;this.freq=1.0;this._y5=0.0;this._j5=0.0;this._z5=0.0;if(_t5._v5==true){return;}for(let _Y3=0;_Y3<_25._35._95;++_Y3){_t5._u5[_Y3]=new _h5(_25._g5[_Y3]);
}_t5._v5=true;}_t5._A5=function(){return(_t5._v5==!0);};_t5.prototype._B5=function(_C5){this._x5=_C5;this._D5();};;_t5.prototype._E5=function(_O4){_O4=Math.max(_t5._w5,_O4);_O4=Math.min(_O4,_t5._J4);this.freq=_O4;this._D5();};;_t5.prototype._F5=function(_G5){_G5=Math.max(0.0,_G5);_G5=Math.min(_G5,1.0);const _H5=_G5-this._z5;this._z5=_G5;this._y5+=_H5;while(this._y5>=1.0){this._y5-=1.0;}while(this._y5<0.0){this._y5+=1.0;}};;_t5.prototype._I5=function(_J5){_J5=Math.max(0,_J5);_J5=Math.min(_J5,_25._35._95-1);
this.shape=_J5;};;_t5.prototype._l5=function(){const _K5=_t5._u5[this.shape]._l5(this._y5);this._y5+=this._j5;while(this._y5>=1.0){this._y5-=1.0;}return _K5;};;_t5.prototype._D5=function(){this._j5=this.freq/this._x5;};;class _L5 extends AudioWorkletProcessor{static _M5=5.0;static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"time",automationRate:"a-rate",defaultValue:0.2,minValue:0.0,maxValue:_L5._M5},{name:"feedback",automationRate:"a-rate",
defaultValue:0.5,minValue:0.0,maxValue:1.0},{name:"mix",automationRate:"a-rate",defaultValue:0.35,minValue:0.0,maxValue:1.0}];}constructor(_O3){super();this._P3();const _Q3=_O3.outputChannelCount[0];const _N5=(_L5._M5*sampleRate)+1;this.buffer=new Array(_Q3);this._O5=new Uint32Array(_Q3);for(let _X3=0;_X3<_Q3;++_X3)this.buffer[_X3]=new Float32Array(_N5);}process(__3,_04,parameters){const input=__3[0];const output=_04[0];const bypass=parameters.bypass;const time=parameters.time;const feedback=parameters.feedback;
const mix=parameters.mix;for(let _X3=0;_X3<input.length;++_X3){const _14=input[_X3];const _24=output[_X3];for(let _34=0;_34<_14.length;++_34){_24[_34]=_14[_34];const _P5=(time[_34]!==undefined)?time[_34]:time[0];const _Q5=this._l5(_X3,_P5);const _M4=(feedback[_34]!==undefined)?feedback[_34]:feedback[0];const _R5=_14[_34]+(_Q5*_M4);this.write(_X3,_R5);const _64=(bypass[_34]!==undefined)?bypass[_34]:bypass[0];if(_64>0.0){continue;}const _74=(mix[_34]!==undefined)?mix[_34]:mix[0];_24[_34]*=(1-_74);_24[_34]+=(_Q5*_74);
}}return this._84;}_l5(_S5,_T5){const _U5=_T5*sampleRate;let _p5=(this._O5[_S5]-~~_U5);let _q5=(_p5-1);while(_p5<0)_p5+=this.buffer[_S5].length;while(_q5<0)_q5+=this.buffer[_S5].length;const _V5=_U5-~~_U5;const _r5=this.buffer[_S5][_p5];const _s5=this.buffer[_S5][_q5];return _r5+(_s5-_r5)*_V5;}write(_S5,_x3){++this._O5[_S5];this._O5[_S5]%=this.buffer[_S5].length;this.buffer[_S5][this._O5[_S5]]=_x3;}}registerProcessor("delay-processor",_L5);AudioWorkletProcessor.prototype._P3=function(){this._84=true;this.port.onmessage=(_W5)=>{
if(_W5.data==="kill")this._84=false;};};;class _X5 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1}];}constructor(){super();this._P3();}process(__3,_04,parameters){const input=__3[0];const bypass=parameters.bypass;for(let _X3=0;_X3<input.length;++_X3){const _14=input[_X3];for(let _34=0;_34<_14.length;++_34){const _64=(bypass[_34]!==undefined)?bypass[_34]:bypass[0];_04[_64][_X3][_34]=_14[_34];}}return this._84;
}}class _Y5 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"gain",automationRate:"a-rate",defaultValue:1,minValue:0}];}constructor(){super();this._P3();}process(__3,_04,parameters){const _i4=__3[0];const _j4=__3[1];const output=_04[0];const gain=parameters.gain;for(let _X3=0;_X3<_j4.length;++_X3){const _14=_j4[_X3];const _24=output[_X3];for(let _34=0;_34<_14.length;++_34)_24[_34]=_14[_34];}for(let _X3=0;_X3<_i4.length;++_X3){const _14=_i4[_X3];const _24=output[_X3];for(let _34=0;_34<_14.length;
++_34){const _N4=(gain[_34]!==undefined)?gain[_34]:gain[0];_24[_34]+=_14[_34]*_N4;}}return this._84;}}registerProcessor("audio-bus-input",_X5);registerProcessor("audio-bus-output",_Y5);class _Z5 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"gain",automationRate:"a-rate",defaultValue:1.0,minValue:0.0},{name:"factor",automationRate:"a-rate",defaultValue:20,minValue:1,maxValue:100},{name:"resolution",
automationRate:"a-rate",defaultValue:8,minValue:2,maxValue:16},{name:"mix",automationRate:"a-rate",defaultValue:0.8,minValue:0.0,maxValue:1.0}];}static __5=[undefined,undefined,2,4,8,16,32,64,128,256,512,1024,2048,4096,8192,16384,32768];constructor(_O3){super();this._P3();const _Q3=_O3.outputChannelCount[0];this._06=new Float32Array(_Q3);this._16=new Uint32Array(_Q3);}process(__3,_04,parameters){const input=__3[0];const output=_04[0];const bypass=parameters.bypass;const gain=parameters.gain;const factor=parameters.factor;
const resolution=parameters.resolution;const mix=parameters.mix;for(let _X3=0;_X3<input.length;++_X3){const _14=input[_X3];const _24=output[_X3];for(let _34=0;_34<_14.length;++_34){_24[_34]=_14[_34];if(this._16[_X3]===0)this._06[_X3]=_14[_34];const _M4=(factor[_34]!==undefined)?factor[_34]:factor[0];++this._16[_X3];this._16[_X3]%=_M4;const _64=(bypass[_34]!==undefined)?bypass[_34]:bypass[0];if(_64>0.0){continue;}let _54=this._06[_X3];const _N4=(gain[_34]!==undefined)?gain[_34]:gain[0];_54*=_N4;_54=Math.max(Math.min(_54,
1.0),-1.0);const _26=(resolution[_34]!==undefined)?resolution[_34]:resolution[0];const max=(_54>0.0)?_Z5.__5[_26]-1:_Z5.__5[_26];_54=Math.round(_54*max)/max;const _74=(mix[_34]!==undefined)?mix[_34]:mix[0];_24[_34]*=(1.0-_74);_24[_34]+=(_54*_74);}}return this._84;}}registerProcessor("bitcrusher-processor",_Z5);class _36 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"rate",automationRate:"a-rate",defaultValue:5.0,
minValue:0.0,maxValue:20.0},{name:"intensity",automationRate:"a-rate",defaultValue:1.0,minValue:0.0,maxValue:1.0},{name:"offset",automationRate:"a-rate",defaultValue:0.0,minValue:0.0,maxValue:1.0},{name:"shape",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:4}];}constructor(_O3){super();this._P3();const _Q3=_O3.outputChannelCount[0];this._46=new Array(_Q3).fill(1.0);this._56=new Array(_Q3).fill(0.0);this._66=new Array(_Q3).fill(_25._35._45);this._76=new Array(_Q3);for(let _X3=0;_X3<_Q3;++_X3){
this._76[_X3]=new _t5();this._76[_X3]._B5(sampleRate);this._76[_X3]._E5(this._46[_X3]);this._76[_X3]._I5(this._66[_X3]);if(_X3%2===1){this._76[_X3]._F5(this._56[_X3]);}}}process(__3,_04,parameters){const input=__3[0];const output=_04[0];const bypass=parameters.bypass;const rate=parameters.rate;const intensity=parameters.intensity;const offset=parameters.offset;const shape=parameters.shape;for(let _X3=0;_X3<input.length;++_X3){const _14=input[_X3];const _24=output[_X3];for(let _34=0;_34<_14.length;++_34){_24[_34]=_14[_34];
const _26=(rate[_34]!==undefined)?rate[_34]:rate[0];const _86=(offset[_34]!==undefined)?offset[_34]:offset[0];const _96=(shape[_34]!==undefined)?shape[_34]:shape[0];this._a6(_X3,_26,_86,_96);const _b6=this._76[_X3]._l5();const _64=(bypass[_34]!==undefined)?bypass[_34]:bypass[0];if(_64>0.0){continue;}const _Y3=(intensity[_34]!==undefined)?intensity[_34]:intensity[0];const out=_14[_34]*_b6*_Y3;_24[_34]*=(1.0-_Y3);_24[_34]+=out;}}return this._84;}_a6(_S5,_c6,_G5,_J5){if(_c6!==this._46[_S5]){this._76[_S5]._E5(_c6);
this._46[_S5]=_c6;}if(_G5!==this._56[_S5]){if(_S5%2===1){this._76[_S5]._F5(_G5);}this._56[_S5]=_G5;}if(_J5!==this._66[_S5]){this._76[_S5]._I5(_J5);this._66[_S5]=_J5;}}}registerProcessor("tremolo-processor",_36);class _d6{constructor(_T5=1e-3){this.setTime(_T5);}setTime(_T5){this._e6=Math.exp(-1/(_T5*sampleRate));}process(_f6,_g6){return _f6+this._e6*(_g6-_f6);}}class _h6{constructor(_i6,_j6){this._k6=new _d6(_i6);this._l6=new _d6(_j6);this._m6=_i6;this._n6=_j6;}_o6(_T5){if(_T5===this._m6)return;this._k6.setTime(_T5);
this._m6=_T5;}_p6(_T5){if(_T5===this._n6)return;this._l6.setTime(_T5);this._n6=_T5;}process(_f6,_g6){if(_f6>_g6)return this._k6.process(_f6,_g6);else return this._l6.process(_f6,_g6);}}class _q6 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"ingain",automationRate:"a-rate",defaultValue:1,minValue:0},{name:"threshold",automationRate:"a-rate",defaultValue:0.125,minValue:1e-3,maxValue:1},{name:"ratio",
automationRate:"a-rate",defaultValue:4,minValue:1},{name:"attack",automationRate:"a-rate",defaultValue:0.05,minValue:1e-3,maxValue:1e-1},{name:"release",automationRate:"a-rate",defaultValue:0.25,minValue:1e-2,maxValue:1},{name:"outgain",automationRate:"a-rate",defaultValue:1,minValue:0}];}constructor(_r6){super();this._P3();const _k6=_q6.parameterDescriptors.find(_s6=>_s6.name==="attack");const _l6=_q6.parameterDescriptors.find(_s6=>_s6.name==="release");this._t6=new _h6(_k6.defaultValue,_l6.defaultValue);
this._u6=0;}process(_v6,_w6,_x6){const input=_v6[0];const output=_w6[0];const bypass=_x6.bypass;const ingain=_x6.ingain;const outgain=_x6.outgain;const threshold=_x6.threshold;const ratio=_x6.ratio;const attack=_x6.attack;const release=_x6.release;if(input.length===0)return this._84;for(let _34=0;_34<input[0].length;++_34){let _y6=input.map(_z6=>_z6[_34]);output.forEach((_z6,_A6)=>{_z6[_34]=_y6[_A6];});const _B6=(ingain[_34]!==undefined)?ingain[_34]:ingain[0];_y6=_y6.map(_C6=>_C6*=_B6);const rect=_y6.map(_C6=>Math.abs(_C6));
const max=Math.max(...rect);const _D6=_E6(max);const _P5=(threshold[_34]!==undefined)?threshold[_34]:threshold[0];const _F6=_E6(_P5);const _G6=Math.max(0,_D6-_F6);const _k6=(attack[_34]!==undefined)?attack[_34]:attack[0];const _l6=(release[_34]!==undefined)?release[_34]:release[0];this._t6._o6(_k6);this._t6._p6(_l6);this._u6=this._t6.process(_G6,this._u6);const _64=(bypass[_34]!==undefined)?bypass[_34]:bypass[0];if(_64>0)continue;const _26=(ratio[_34]!==undefined)?ratio[_34]:ratio[0];const _H6=(this._u6/_26)-this._u6;
const _N4=_I6(_H6);_y6=_y6.map(_C6=>_C6*=_N4);const _J6=(outgain[_34]!==undefined)?outgain[_34]:outgain[0];_y6=_y6.map(_C6=>_C6*=_J6);output.forEach((_z6,_A6)=>{_z6[_34]=_y6[_A6];});}return this._84;}}function _E6(_K6){return 20*Math.log10(_K6);}function _I6(_K6){return Math.pow(10,_K6/20);}registerProcessor("compressor-processor",_q6);class _L6 extends AudioWorkletProcessor{static get parameterDescriptors(){const _J4=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,
minValue:0,maxValue:1},{name:"freq",automationRate:"a-rate",defaultValue:Math.min(500.0,_J4),minValue:10.0,maxValue:_J4},{name:"q",automationRate:"a-rate",defaultValue:1.0,minValue:1.0,maxValue:100.0},{name:"gain",automationRate:"a-rate",defaultValue:1e-2,minValue:1e-6}];}constructor(_O3){super();this._P3();const _Q3=_O3.outputChannelCount[0];this._o4=0;this._p4=0;this._q4=0;this._r4=0;this._s4=0;this._t4=new Float32Array(_Q3);this._u4=new Float32Array(_Q3);this._v4=new Float32Array(_Q3);this._w4=new Float32Array(_Q3);
this._K4=-1;this._y4=-1;this._L4=-1;}process(__3,_04,parameters){const input=__3[0];const output=_04[0];const bypass=parameters.bypass;const freq=parameters.freq;const q=parameters.q;const gain=parameters.gain;const _z4=(freq.length===1&&q.length===1&&gain.length===1);if(_z4)this._A4(freq[0],q[0],gain[0]);for(let _X3=0;_X3<input.length;++_X3){const _14=input[_X3];const _24=output[_X3];for(let _34=0;_34<_14.length;++_34){if(_z4===!1){const _M4=(freq[_34]!==undefined)?freq[_34]:freq[0];const _B4=(q[_34]!==undefined)?q[_34]:q[0];
const _N4=(gain[_34]!==undefined)?gain[_34]:gain[0];this._A4(_M4,_B4,_N4);}const _C4=this._q4*_14[_34]+this._r4*this._t4[_X3]+this._s4*this._u4[_X3]-this._o4*this._v4[_X3]-this._p4*this._w4[_X3];this._u4[_X3]=this._t4[_X3];this._t4[_X3]=_14[_34];this._w4[_X3]=this._v4[_X3];this._v4[_X3]=_C4;const _64=(bypass[_34]!==undefined)?bypass[_34]:bypass[0];_24[_34]=(_64>0)?_14[_34]:_C4;}}return this._84;}_A4(_O4,_E4,_P4){if(_O4===this._K4&&_E4===this._y4&&_P4===this._L4)return;const _F4=2*Math.PI*_O4/sampleRate;
const _G4=Math.cos(_F4);const _Q4=Math.sqrt(_P4);const _W4=_Q4+1;const _X4=_Q4-1;const _Y4=_W4*_G4;const _Z4=_X4*_G4;const __4=_W4-_Z4;const _05=_W4+_Z4;const alpha=Math.sin(_F4)/(2*_E4);const _15=(2*Math.sqrt(_Q4)*alpha);const _H4=_05+_15;const _o4=-2*(_X4+_Y4);const _p4=_05-_15;const _q4=_Q4*(__4+_15);const _r4=2*_Q4*(_X4-_Y4);const _s4=_Q4*(__4-_15);this._o4=_o4/_H4;this._p4=_p4/_H4;this._q4=_q4/_H4;this._r4=_r4/_H4;this._s4=_s4/_H4;this._K4=_O4;this._y4=_E4;this._L4=_P4;}}registerProcessor("lo-shelf-processor",
_L6);