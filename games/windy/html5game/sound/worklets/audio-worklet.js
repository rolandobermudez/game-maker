class _13{constructor(_23){this._33=0;this._43=0;this.feedback=0;this._53=0;this.buffer=new Float32Array(_23);this._63=0;}process(_73){const out=this.buffer[this._63];this._53=(this._53*this._33)+(out*this._43);this.buffer[this._63]=_73+(this._53*this.feedback);++this._63;this._63%=this.buffer.length;return out;}_83(_93){this.feedback=Math.min(Math.max(0,_93),1);}_a3(_b3){this._33=Math.min(Math.max(0,_b3),1);this._43=1-this._33;}}class _c3{constructor(_23){this.feedback=0;this.buffer=new Float32Array(_23);
this._63=0;}process(_73){const out=this.buffer[this._63];this.buffer[this._63]=_73+(out*this.feedback);++this._63;this._63%=this.buffer.length;return(out-_73);}_83(_93){this.feedback=Math.min(Math.max(0,_93),1);}}class _d3 extends AudioWorkletProcessor{static _e3=8;static _f3=4;static _g3=0.015;static _h3=0.4;static _i3=0.28;static _j3=0.7;static _k3=[1116,1188,1277,1356,1422,1491,1557,1617];static _l3=[1139,1211,1300,1379,1445,1514,1580,1640];static _m3=[556,441,341,225];static _n3=[579,464,364,248];static get parameterDescriptors(){
return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"size",automationRate:"a-rate",defaultValue:0.7,minValue:0.0,maxValue:1.0},{name:"damp",automationRate:"a-rate",defaultValue:0.1,minValue:0.0,maxValue:1.0},{name:"mix",automationRate:"a-rate",defaultValue:0.35,minValue:0.0,maxValue:1.0}];}constructor(_o3){super();this._p3();const _q3=_o3.outputChannelCount[0];this._r3=-1;this._s3=-1;this._t3=new Array(_q3);this._u3=new Array(_q3);const _v3=[_d3._k3,_d3._l3];const _w3=[_d3._m3,
_d3._n3];for(let _x3=0;_x3<_q3;++_x3){this._t3[_x3]=new Array(_d3._e3);this._u3[_x3]=new Array(_d3._f3);for(let _y3=0;_y3<_d3._e3;++_y3)this._t3[_x3][_y3]=new _13(_v3[_x3%_v3.length][_y3]);for(let _y3=0;_y3<_d3._f3;++_y3)this._u3[_x3][_y3]=new _c3(_w3[_x3%_w3.length][_y3]);}this._z3(0.5);this._a3(0.5);for(let _x3=0;_x3<_q3;++_x3)for(let _y3=0;_y3<_d3._f3;++_y3)this._u3[_x3][_y3]._83(0.5);}process(_A3,_B3,parameters){const input=_A3[0];const output=_B3[0];const bypass=parameters.bypass;const size=parameters.size;
const damp=parameters.damp;const mix=parameters.mix;for(let _x3=0;_x3<input.length;++_x3){const _C3=input[_x3];const _D3=output[_x3];for(let _E3=0;_E3<_C3.length;++_E3){const _E3=(size[_E3]!==undefined)?size[_E3]:size[0];const _F3=(damp[_E3]!==undefined)?damp[_E3]:damp[0];this._z3(_E3);this._a3(_F3);_D3[_E3]=_C3[_E3];let out=0;const _G3=_C3[_E3]*_d3._g3;for(let _y3=0;_y3<_d3._e3;++_y3)out+=this._t3[_x3][_y3].process(_G3);for(let _y3=0;_y3<_d3._f3;++_y3)out=this._u3[_x3][_y3].process(out);const _H3=(bypass[_E3]!==undefined)?bypass[_E3]:bypass[0];
if(_H3>0.0){continue;}const _I3=(mix[_E3]!==undefined)?mix[_E3]:mix[0];_D3[_E3]*=(1-_I3);_D3[_E3]+=(out*_I3);}}return this._J3;}_z3(_23){if(_23===this._r3)return;const size=(_23*_d3._i3)+_d3._j3;for(let _x3=0;_x3<this._t3.length;++_x3)for(let _y3=0;_y3<_d3._e3;++_y3)this._t3[_x3][_y3]._83(size);this._r3=_23;}_a3(_b3){if(_b3===this._s3)return;const damp=_b3*_d3._h3;for(let _x3=0;_x3<this._t3.length;++_x3)for(let _y3=0;_y3<_d3._e3;++_y3)this._t3[_x3][_y3]._a3(damp);this._s3=_b3;}}registerProcessor("reverb1-processor",
_d3);class _K3 extends AudioWorkletProcessor{static get parameterDescriptors(){return [];}constructor(){super();this._p3();}process(_L3,_M3,_N3){const input=_L3[0];const _O3=_M3[0];const _P3=_M3[1];for(let _x3=0;_x3<input.length;++_x3){const _C3=input[_x3];const _Q3=_O3[_x3];const _R3=_P3[_x3];for(let _E3=0;_E3<_C3.length;++_E3){_Q3[_E3]=_C3[_E3];_R3[_E3]=_C3[_E3];}}return this._J3;}}class _S3 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,
minValue:0,maxValue:1}];}constructor(){super();this._p3();}process(_L3,_M3,_N3){const _T3=_L3[0];const _U3=_L3[1];const output=_M3[0];const bypass=_N3.bypass;for(let _x3=0;_x3<_U3.length;++_x3){const _V3=_T3[_x3];const _W3=_U3[_x3];const _D3=output[_x3];for(let _E3=0;_E3<_V3.length;++_E3){const _H3=(bypass[_E3]!==undefined)?bypass[_E3]:bypass[0];if(_H3>0){_D3[_E3]=_W3[_E3];}else {_D3[_E3]=_V3[_E3];}}}return this._J3;}}registerProcessor("eq-input",_K3);registerProcessor("eq-output",_S3);class _X3 extends AudioWorkletProcessor{
static get parameterDescriptors(){const _Y3=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"cutoff",automationRate:"a-rate",defaultValue:Math.min(500.0,_Y3),minValue:10.0,maxValue:_Y3},{name:"q",automationRate:"a-rate",defaultValue:1.5,minValue:1.0,maxValue:100.0}];}constructor(_o3){super();this._p3();const _q3=_o3.outputChannelCount[0];this._Z3=0;this.__3=0;this._04=0;this._14=0;this._24=0;this._34=new Float32Array(_q3);this._44=new Float32Array(_q3);
this._54=new Float32Array(_q3);this._64=new Float32Array(_q3);this._74=-1;this._84=-1;}process(_A3,_B3,parameters){const input=_A3[0];const output=_B3[0];const bypass=parameters.bypass;const cutoff=parameters.cutoff;const q=parameters.q;const _94=(cutoff.length===1&&q.length===1);if(_94)this._a4(cutoff[0],q[0]);for(let _x3=0;_x3<input.length;++_x3){const _C3=input[_x3];const _D3=output[_x3];for(let _E3=0;_E3<_C3.length;++_E3){if(_94===!1){const _x3=(cutoff[_E3]!==undefined)?cutoff[_E3]:cutoff[0];const _b4=(q[_E3]!==undefined)?q[_E3]:q[0];
this._a4(_x3,_b4);}const _c4=this._04*_C3[_E3]+this._14*this._34[_x3]+this._24*this._44[_x3]-this._Z3*this._54[_x3]-this.__3*this._64[_x3];this._44[_x3]=this._34[_x3];this._34[_x3]=_C3[_E3];this._64[_x3]=this._54[_x3];this._54[_x3]=_c4;const _H3=(bypass[_E3]!==undefined)?bypass[_E3]:bypass[0];_D3[_E3]=(_H3>0)?_C3[_E3]:_c4;}}return this._J3;}_a4(_d4,_e4){if(_d4===this._74&&_e4===this._84)return;const _f4=2*Math.PI*_d4/sampleRate;const alpha=Math.sin(_f4)/(2*_e4);const _g4=Math.cos(_f4);const _h4=1+alpha;
const _Z3=-2*_g4;const __3=1-alpha;const _04=(1-_g4)/2;const _14=1-_g4;const _24=(1-_g4)/2;this._Z3=_Z3/_h4;this.__3=__3/_h4;this._04=_04/_h4;this._14=_14/_h4;this._24=_24/_h4;this._74=_d4;this._84=_e4;}}registerProcessor("lpf2-processor",_X3);class _i4 extends AudioWorkletProcessor{static get parameterDescriptors(){const _j4=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"freq",automationRate:"a-rate",defaultValue:Math.min(1500.0,
_j4),minValue:10.0,maxValue:_j4},{name:"q",automationRate:"a-rate",defaultValue:1.0,minValue:1.0,maxValue:100.0},{name:"gain",automationRate:"a-rate",defaultValue:1e-2,minValue:1e-6}];}constructor(_o3){super();this._p3();const _q3=_o3.outputChannelCount[0];this._Z3=0;this.__3=0;this._04=0;this._14=0;this._24=0;this._34=new Float32Array(_q3);this._44=new Float32Array(_q3);this._54=new Float32Array(_q3);this._64=new Float32Array(_q3);this._k4=-1;this._84=-1;this._l4=-1;}process(_A3,_B3,parameters){const input=_A3[0];
const output=_B3[0];const bypass=parameters.bypass;const freq=parameters.freq;const q=parameters.q;const gain=parameters.gain;const _94=(freq.length===1&&q.length===1&&gain.length===1);if(_94)this._a4(freq[0],q[0],gain[0]);for(let _x3=0;_x3<input.length;++_x3){const _C3=input[_x3];const _D3=output[_x3];for(let _E3=0;_E3<_C3.length;++_E3){if(_94===!1){const _m4=(freq[_E3]!==undefined)?freq[_E3]:freq[0];const _b4=(q[_E3]!==undefined)?q[_E3]:q[0];const _n4=(gain[_E3]!==undefined)?gain[_E3]:gain[0];this._a4(_m4,
_b4,_n4);}const _c4=this._04*_C3[_E3]+this._14*this._34[_x3]+this._24*this._44[_x3]-this._Z3*this._54[_x3]-this.__3*this._64[_x3];this._44[_x3]=this._34[_x3];this._34[_x3]=_C3[_E3];this._64[_x3]=this._54[_x3];this._54[_x3]=_c4;const _H3=(bypass[_E3]!==undefined)?bypass[_E3]:bypass[0];_D3[_E3]=(_H3>0)?_C3[_E3]:_c4;}}return this._J3;}_a4(_o4,_e4,_p4){if(_o4===this._k4&&_e4===this._84&&_p4===this._l4)return;const _f4=2*Math.PI*_o4/sampleRate;const _g4=Math.cos(_f4);const _q4=Math.sqrt(_p4);const alpha=Math.sin(_f4)/(2*_e4);
const _r4=alpha/_q4;const _s4=alpha*_q4;const _h4=1+_r4;const _Z3=-2*_g4;const __3=1-_r4;const _04=1+_s4;const _14=_Z3;const _24=1-_s4;this._Z3=_Z3/_h4;this.__3=__3/_h4;this._04=_04/_h4;this._14=_14/_h4;this._24=_24/_h4;this._k4=_o4;this._84=_e4;this._l4=_p4;}}registerProcessor("peak-eq-processor",_i4);class _t4 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"gain",automationRate:"a-rate",defaultValue:0.5,
minValue:0.0}];}constructor(){super();this._p3();}process(_A3,_B3,parameters){const input=_A3[0];const output=_B3[0];const bypass=parameters.bypass;const gain=parameters.gain;for(let _x3=0;_x3<input.length;++_x3){const _C3=input[_x3];const _D3=output[_x3];for(let _E3=0;_E3<_C3.length;++_E3){_D3[_E3]=_C3[_E3];const _H3=(bypass[_E3]!==undefined)?bypass[_E3]:bypass[0];if(_H3>0.0){continue;}const _n4=(gain[_E3]!==undefined)?gain[_E3]:gain[0];_D3[_E3]*=_n4;}}return this._J3;}}registerProcessor("gain-processor",
_t4);class _u4 extends AudioWorkletProcessor{static get parameterDescriptors(){const _Y3=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"cutoff",automationRate:"a-rate",defaultValue:Math.min(1500.0,_Y3),minValue:10.0,maxValue:_Y3},{name:"q",automationRate:"a-rate",defaultValue:1.5,minValue:1.0,maxValue:100.0}];}constructor(_o3){super();this._p3();const _q3=_o3.outputChannelCount[0];this._Z3=0;this.__3=0;this._04=0;this._14=0;this._24=0;
this._34=new Float32Array(_q3);this._44=new Float32Array(_q3);this._54=new Float32Array(_q3);this._64=new Float32Array(_q3);this._74=-1;this._84=-1;}process(_A3,_B3,parameters){const input=_A3[0];const output=_B3[0];const bypass=parameters.bypass;const cutoff=parameters.cutoff;const q=parameters.q;const _94=(cutoff.length===1&&q.length===1);if(_94)this._a4(cutoff[0],q[0]);for(let _x3=0;_x3<input.length;++_x3){const _C3=input[_x3];const _D3=output[_x3];for(let _E3=0;_E3<_C3.length;++_E3){if(_94===!1){const _x3=(cutoff[_E3]!==undefined)?cutoff[_E3]:cutoff[0];
const _b4=(q[_E3]!==undefined)?q[_E3]:q[0];this._a4(_x3,_b4);}const _c4=this._04*_C3[_E3]+this._14*this._34[_x3]+this._24*this._44[_x3]-this._Z3*this._54[_x3]-this.__3*this._64[_x3];this._44[_x3]=this._34[_x3];this._34[_x3]=_C3[_E3];this._64[_x3]=this._54[_x3];this._54[_x3]=_c4;const _H3=(bypass[_E3]!==undefined)?bypass[_E3]:bypass[0];_D3[_E3]=(_H3>0)?_C3[_E3]:_c4;}}return this._J3;}_a4(_d4,_e4){if(_d4===this._74&&_e4===this._84)return;const _f4=2*Math.PI*_d4/sampleRate;const alpha=Math.sin(_f4)/(2*_e4);
const _g4=Math.cos(_f4);const _h4=1+alpha;const _Z3=-2*_g4;const __3=1-alpha;const _04=(1+_g4)/2;const _14=-1-_g4;const _24=(1+_g4)/2;this._Z3=_Z3/_h4;this.__3=__3/_h4;this._04=_04/_h4;this._14=_14/_h4;this._24=_24/_h4;this._74=_d4;this._84=_e4;}}registerProcessor("hpf2-processor",_u4);class _v4 extends AudioWorkletProcessor{static get parameterDescriptors(){const _j4=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"freq",automationRate:"a-rate",
defaultValue:Math.min(5000.0,_j4),minValue:10.0,maxValue:_j4},{name:"q",automationRate:"a-rate",defaultValue:1.0,minValue:1.0,maxValue:100.0},{name:"gain",automationRate:"a-rate",defaultValue:1e-2,minValue:1e-6}];}constructor(_o3){super();this._p3();const _q3=_o3.outputChannelCount[0];this._Z3=0;this.__3=0;this._04=0;this._14=0;this._24=0;this._34=new Float32Array(_q3);this._44=new Float32Array(_q3);this._54=new Float32Array(_q3);this._64=new Float32Array(_q3);this._k4=-1;this._84=-1;this._l4=-1;}process(_A3,
_B3,parameters){const input=_A3[0];const output=_B3[0];const bypass=parameters.bypass;const freq=parameters.freq;const q=parameters.q;const gain=parameters.gain;const _94=(freq.length===1&&q.length===1&&gain.length===1);if(_94)this._a4(freq[0],q[0],gain[0]);for(let _x3=0;_x3<input.length;++_x3){const _C3=input[_x3];const _D3=output[_x3];for(let _E3=0;_E3<_C3.length;++_E3){if(_94===!1){const _m4=(freq[_E3]!==undefined)?freq[_E3]:freq[0];const _b4=(q[_E3]!==undefined)?q[_E3]:q[0];const _n4=(gain[_E3]!==undefined)?gain[_E3]:gain[0];
this._a4(_m4,_b4,_n4);}const _c4=this._04*_C3[_E3]+this._14*this._34[_x3]+this._24*this._44[_x3]-this._Z3*this._54[_x3]-this.__3*this._64[_x3];this._44[_x3]=this._34[_x3];this._34[_x3]=_C3[_E3];this._64[_x3]=this._54[_x3];this._54[_x3]=_c4;const _H3=(bypass[_E3]!==undefined)?bypass[_E3]:bypass[0];_D3[_E3]=(_H3>0)?_C3[_E3]:_c4;}}return this._J3;}_a4(_o4,_e4,_p4){if(_o4===this._k4&&_e4===this._84&&_p4===this._l4)return;const _f4=2*Math.PI*_o4/sampleRate;const _g4=Math.cos(_f4);const _q4=Math.sqrt(_p4);const _w4=_q4+1;
const _x4=_q4-1;const _y4=_w4*_g4;const _z4=_x4*_g4;const _A4=_w4-_z4;const _B4=_w4+_z4;const alpha=Math.sin(_f4)/(2*_e4);const _C4=(2*Math.sqrt(_q4)*alpha);const _h4=_A4+_C4;const _Z3=2*(_x4-_y4);const __3=_A4-_C4;const _04=_q4*(_B4+_C4);const _14=-2*_q4*(_x4+_y4);const _24=_q4*(_B4-_C4);this._Z3=_Z3/_h4;this.__3=__3/_h4;this._04=_04/_h4;this._14=_14/_h4;this._24=_24/_h4;this._k4=_o4;this._84=_e4;this._l4=_p4;}}registerProcessor("hi-shelf-processor",_v4);function _D4(){}_D4._E4={_F4:0,_G4:1,_H4:2,_I4:3,_J4:4,
_K4:5};_D4._L4=function(_M4){return 1.0-_M4;};_D4._N4=function(_M4){return _M4;};_D4._O4=function(_M4){return 0.5*(Math.sin((_M4*2.0*Math.PI)-(Math.PI/2.0))+1.0);};_D4._P4=function(_M4){if(_M4<0.5){return 0.0;}return 1.0;};_D4._Q4=function(_M4){if(_M4<0.5){return 2.0*_M4;}return 2.0-(2.0*_M4);};_D4._R4=[_D4._L4,_D4._N4,_D4._O4,_D4._P4,_D4._Q4];_S4._T4=512;_S4._U4=1.0/_S4._T4;function _S4(_V4){this.data=new Float32Array(_S4._T4);for(let _y3=0;_y3<_S4._T4;++_y3){this.data[_y3]=_V4(_y3*_S4._U4);}}_S4.prototype._W4=function(_M4){
_M4=Math.max(0.0,_M4);_M4=Math.min(_M4,1.0);const _X4=_M4*_S4._T4;const _Y4=~~_X4;const _Z4=_X4-_Y4;let __4=_Y4;let _05=__4+1;if(__4>=_S4._T4){__4-=_S4._T4;}if(_05>=_S4._T4){_05-=_S4._T4;}const _15=this.data[__4];const _25=this.data[_05];return _15+(_25-_15)*_Z4;};;_35._45=[];_35._55=!1;_35._65=0.0;_35._j4=20.0;function _35(){this._75=48000;this.shape=_D4._E4._H4;this.freq=1.0;this._85=0.0;this._U4=0.0;this._95=0.0;if(_35._55==true){return;}for(let _y3=0;_y3<_D4._E4._K4;++_y3){_35._45[_y3]=new _S4(_D4._R4[_y3]);
}_35._55=true;}_35._a5=function(){return(_35._55==!0);};_35.prototype._b5=function(_c5){this._75=_c5;this._d5();};;_35.prototype._e5=function(_o4){_o4=Math.max(_35._65,_o4);_o4=Math.min(_o4,_35._j4);this.freq=_o4;this._d5();};;_35.prototype._f5=function(_g5){_g5=Math.max(0.0,_g5);_g5=Math.min(_g5,1.0);const _h5=_g5-this._95;this._95=_g5;this._85+=_h5;while(this._85>=1.0){this._85-=1.0;}while(this._85<0.0){this._85+=1.0;}};;_35.prototype._i5=function(_j5){_j5=Math.max(0,_j5);_j5=Math.min(_j5,_D4._E4._K4-1);
this.shape=_j5;};;_35.prototype._W4=function(){const _k5=_35._45[this.shape]._W4(this._85);this._85+=this._U4;while(this._85>=1.0){this._85-=1.0;}return _k5;};;_35.prototype._d5=function(){this._U4=this.freq/this._75;};;class _l5 extends AudioWorkletProcessor{static _m5=5.0;static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"time",automationRate:"a-rate",defaultValue:0.2,minValue:0.0,maxValue:_l5._m5},{name:"feedback",automationRate:"a-rate",
defaultValue:0.5,minValue:0.0,maxValue:1.0},{name:"mix",automationRate:"a-rate",defaultValue:0.35,minValue:0.0,maxValue:1.0}];}constructor(_o3){super();this._p3();const _q3=_o3.outputChannelCount[0];const _n5=(_l5._m5*sampleRate)+1;this.buffer=new Array(_q3);this._o5=new Uint32Array(_q3);for(let _x3=0;_x3<_q3;++_x3)this.buffer[_x3]=new Float32Array(_n5);}process(_A3,_B3,parameters){const input=_A3[0];const output=_B3[0];const bypass=parameters.bypass;const time=parameters.time;const feedback=parameters.feedback;
const mix=parameters.mix;for(let _x3=0;_x3<input.length;++_x3){const _C3=input[_x3];const _D3=output[_x3];for(let _E3=0;_E3<_C3.length;++_E3){_D3[_E3]=_C3[_E3];const _p5=(time[_E3]!==undefined)?time[_E3]:time[0];const _q5=this._W4(_x3,_p5);const _m4=(feedback[_E3]!==undefined)?feedback[_E3]:feedback[0];const _r5=_C3[_E3]+(_q5*_m4);this.write(_x3,_r5);const _H3=(bypass[_E3]!==undefined)?bypass[_E3]:bypass[0];if(_H3>0.0){continue;}const _I3=(mix[_E3]!==undefined)?mix[_E3]:mix[0];_D3[_E3]*=(1-_I3);_D3[_E3]+=(_q5*_I3);
}}return this._J3;}_W4(_s5,_t5){const _u5=_t5*sampleRate;let __4=(this._o5[_s5]-~~_u5);let _05=(__4-1);while(__4<0)__4+=this.buffer[_s5].length;while(_05<0)_05+=this.buffer[_s5].length;const _v5=_u5-~~_u5;const _15=this.buffer[_s5][__4];const _25=this.buffer[_s5][_05];return _15+(_25-_15)*_v5;}write(_s5,_73){++this._o5[_s5];this._o5[_s5]%=this.buffer[_s5].length;this.buffer[_s5][this._o5[_s5]]=_73;}}registerProcessor("delay-processor",_l5);AudioWorkletProcessor.prototype._p3=function(){this._J3=true;this.port.onmessage=(_w5)=>{
if(_w5.data==="kill")this._J3=false;};};;class _x5 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1}];}constructor(){super();this._p3();}process(_A3,_B3,parameters){const input=_A3[0];const bypass=parameters.bypass;for(let _x3=0;_x3<input.length;++_x3){const _C3=input[_x3];for(let _E3=0;_E3<_C3.length;++_E3){const _H3=(bypass[_E3]!==undefined)?bypass[_E3]:bypass[0];_B3[_H3][_x3][_E3]=_C3[_E3];}}return this._J3;
}}class _y5 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"gain",automationRate:"a-rate",defaultValue:1,minValue:0}];}constructor(){super();this._p3();}process(_A3,_B3,parameters){const _T3=_A3[0];const _U3=_A3[1];const output=_B3[0];const gain=parameters.gain;for(let _x3=0;_x3<_U3.length;++_x3){const _C3=_U3[_x3];const _D3=output[_x3];for(let _E3=0;_E3<_C3.length;++_E3)_D3[_E3]=_C3[_E3];}for(let _x3=0;_x3<_T3.length;++_x3){const _C3=_T3[_x3];const _D3=output[_x3];for(let _E3=0;_E3<_C3.length;
++_E3){const _n4=(gain[_E3]!==undefined)?gain[_E3]:gain[0];_D3[_E3]+=_C3[_E3]*_n4;}}return this._J3;}}registerProcessor("audio-bus-input",_x5);registerProcessor("audio-bus-output",_y5);class _z5 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"gain",automationRate:"a-rate",defaultValue:1.0,minValue:0.0},{name:"factor",automationRate:"a-rate",defaultValue:20,minValue:1,maxValue:100},{name:"resolution",
automationRate:"a-rate",defaultValue:8,minValue:2,maxValue:16},{name:"mix",automationRate:"a-rate",defaultValue:0.8,minValue:0.0,maxValue:1.0}];}static _A5=[undefined,undefined,2,4,8,16,32,64,128,256,512,1024,2048,4096,8192,16384,32768];constructor(_o3){super();this._p3();const _q3=_o3.outputChannelCount[0];this._B5=new Float32Array(_q3);this._C5=new Uint32Array(_q3);}process(_A3,_B3,parameters){const input=_A3[0];const output=_B3[0];const bypass=parameters.bypass;const gain=parameters.gain;const factor=parameters.factor;
const resolution=parameters.resolution;const mix=parameters.mix;for(let _x3=0;_x3<input.length;++_x3){const _C3=input[_x3];const _D3=output[_x3];for(let _E3=0;_E3<_C3.length;++_E3){_D3[_E3]=_C3[_E3];if(this._C5[_x3]===0)this._B5[_x3]=_C3[_E3];const _m4=(factor[_E3]!==undefined)?factor[_E3]:factor[0];++this._C5[_x3];this._C5[_x3]%=_m4;const _H3=(bypass[_E3]!==undefined)?bypass[_E3]:bypass[0];if(_H3>0.0){continue;}let _G3=this._B5[_x3];const _n4=(gain[_E3]!==undefined)?gain[_E3]:gain[0];_G3*=_n4;_G3=Math.max(Math.min(_G3,
1.0),-1.0);const _D5=(resolution[_E3]!==undefined)?resolution[_E3]:resolution[0];const max=(_G3>0.0)?_z5._A5[_D5]-1:_z5._A5[_D5];_G3=Math.round(_G3*max)/max;const _I3=(mix[_E3]!==undefined)?mix[_E3]:mix[0];_D3[_E3]*=(1.0-_I3);_D3[_E3]+=(_G3*_I3);}}return this._J3;}}registerProcessor("bitcrusher-processor",_z5);class _E5 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"rate",automationRate:"a-rate",defaultValue:5.0,
minValue:0.0,maxValue:20.0},{name:"intensity",automationRate:"a-rate",defaultValue:1.0,minValue:0.0,maxValue:1.0},{name:"offset",automationRate:"a-rate",defaultValue:0.0,minValue:0.0,maxValue:1.0},{name:"shape",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:4}];}constructor(_o3){super();this._p3();const _q3=_o3.outputChannelCount[0];this._F5=new Array(_q3).fill(1.0);this._G5=new Array(_q3).fill(0.0);this._H5=new Array(_q3).fill(_D4._E4._F4);this._I5=new Array(_q3);for(let _x3=0;_x3<_q3;++_x3){
this._I5[_x3]=new _35();this._I5[_x3]._b5(sampleRate);this._I5[_x3]._e5(this._F5[_x3]);this._I5[_x3]._i5(this._H5[_x3]);if(_x3%2===1){this._I5[_x3]._f5(this._G5[_x3]);}}}process(_A3,_B3,parameters){const input=_A3[0];const output=_B3[0];const bypass=parameters.bypass;const rate=parameters.rate;const intensity=parameters.intensity;const offset=parameters.offset;const shape=parameters.shape;for(let _x3=0;_x3<input.length;++_x3){const _C3=input[_x3];const _D3=output[_x3];for(let _E3=0;_E3<_C3.length;++_E3){_D3[_E3]=_C3[_E3];
const _D5=(rate[_E3]!==undefined)?rate[_E3]:rate[0];const _J5=(offset[_E3]!==undefined)?offset[_E3]:offset[0];const _K5=(shape[_E3]!==undefined)?shape[_E3]:shape[0];this._L5(_x3,_D5,_J5,_K5);const _M5=this._I5[_x3]._W4();const _H3=(bypass[_E3]!==undefined)?bypass[_E3]:bypass[0];if(_H3>0.0){continue;}const _y3=(intensity[_E3]!==undefined)?intensity[_E3]:intensity[0];const out=_C3[_E3]*_M5*_y3;_D3[_E3]*=(1.0-_y3);_D3[_E3]+=out;}}return this._J3;}_L5(_s5,_N5,_g5,_j5){if(_N5!==this._F5[_s5]){this._I5[_s5]._e5(_N5);
this._F5[_s5]=_N5;}if(_g5!==this._G5[_s5]){if(_s5%2===1){this._I5[_s5]._f5(_g5);}this._G5[_s5]=_g5;}if(_j5!==this._H5[_s5]){this._I5[_s5]._i5(_j5);this._H5[_s5]=_j5;}}}registerProcessor("tremolo-processor",_E5);class _O5{constructor(_t5=1e-3){this.setTime(_t5);}setTime(_t5){this._P5=Math.exp(-1/(_t5*sampleRate));}process(_Q5,_R5){return _Q5+this._P5*(_R5-_Q5);}}class _S5{constructor(_T5,_U5){this._V5=new _O5(_T5);this._W5=new _O5(_U5);this._X5=_T5;this._Y5=_U5;}_Z5(_t5){if(_t5===this._X5)return;this._V5.setTime(_t5);
this._X5=_t5;}__5(_t5){if(_t5===this._Y5)return;this._W5.setTime(_t5);this._Y5=_t5;}process(_Q5,_R5){if(_Q5>_R5)return this._V5.process(_Q5,_R5);else return this._W5.process(_Q5,_R5);}}class _06 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"ingain",automationRate:"a-rate",defaultValue:1,minValue:0},{name:"threshold",automationRate:"a-rate",defaultValue:0.125,minValue:1e-3,maxValue:1},{name:"ratio",
automationRate:"a-rate",defaultValue:4,minValue:1},{name:"attack",automationRate:"a-rate",defaultValue:0.05,minValue:1e-3,maxValue:1e-1},{name:"release",automationRate:"a-rate",defaultValue:0.25,minValue:1e-2,maxValue:1},{name:"outgain",automationRate:"a-rate",defaultValue:1,minValue:0}];}constructor(_16){super();this._p3();const _V5=_06.parameterDescriptors.find(_26=>_26.name==="attack");const _W5=_06.parameterDescriptors.find(_26=>_26.name==="release");this._36=new _S5(_V5.defaultValue,_W5.defaultValue);
this._46=0;}process(_56,_66,_76){const input=_56[0];const output=_66[0];const bypass=_76.bypass;const ingain=_76.ingain;const outgain=_76.outgain;const threshold=_76.threshold;const ratio=_76.ratio;const attack=_76.attack;const release=_76.release;if(input.length===0)return this._J3;for(let _E3=0;_E3<input[0].length;++_E3){let _86=input.map(_96=>_96[_E3]);output.forEach((_96,_a6)=>{_96[_E3]=_86[_a6];});const _b6=(ingain[_E3]!==undefined)?ingain[_E3]:ingain[0];_86=_86.map(_c6=>_c6*=_b6);const rect=_86.map(_c6=>Math.abs(_c6));
const max=Math.max(...rect);const _d6=_e6(max);const _p5=(threshold[_E3]!==undefined)?threshold[_E3]:threshold[0];const _f6=_e6(_p5);const _g6=Math.max(0,_d6-_f6);const _V5=(attack[_E3]!==undefined)?attack[_E3]:attack[0];const _W5=(release[_E3]!==undefined)?release[_E3]:release[0];this._36._Z5(_V5);this._36.__5(_W5);this._46=this._36.process(_g6,this._46);const _H3=(bypass[_E3]!==undefined)?bypass[_E3]:bypass[0];if(_H3>0)continue;const _D5=(ratio[_E3]!==undefined)?ratio[_E3]:ratio[0];const _h6=(this._46/_D5)-this._46;
const _n4=_i6(_h6);_86=_86.map(_c6=>_c6*=_n4);const _j6=(outgain[_E3]!==undefined)?outgain[_E3]:outgain[0];_86=_86.map(_c6=>_c6*=_j6);output.forEach((_96,_a6)=>{_96[_E3]=_86[_a6];});}return this._J3;}}function _e6(_k6){return 20*Math.log10(_k6);}function _i6(_k6){return Math.pow(10,_k6/20);}registerProcessor("compressor-processor",_06);class _l6 extends AudioWorkletProcessor{static get parameterDescriptors(){const _j4=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,
minValue:0,maxValue:1},{name:"freq",automationRate:"a-rate",defaultValue:Math.min(500.0,_j4),minValue:10.0,maxValue:_j4},{name:"q",automationRate:"a-rate",defaultValue:1.0,minValue:1.0,maxValue:100.0},{name:"gain",automationRate:"a-rate",defaultValue:1e-2,minValue:1e-6}];}constructor(_o3){super();this._p3();const _q3=_o3.outputChannelCount[0];this._Z3=0;this.__3=0;this._04=0;this._14=0;this._24=0;this._34=new Float32Array(_q3);this._44=new Float32Array(_q3);this._54=new Float32Array(_q3);this._64=new Float32Array(_q3);
this._k4=-1;this._84=-1;this._l4=-1;}process(_A3,_B3,parameters){const input=_A3[0];const output=_B3[0];const bypass=parameters.bypass;const freq=parameters.freq;const q=parameters.q;const gain=parameters.gain;const _94=(freq.length===1&&q.length===1&&gain.length===1);if(_94)this._a4(freq[0],q[0],gain[0]);for(let _x3=0;_x3<input.length;++_x3){const _C3=input[_x3];const _D3=output[_x3];for(let _E3=0;_E3<_C3.length;++_E3){if(_94===!1){const _m4=(freq[_E3]!==undefined)?freq[_E3]:freq[0];const _b4=(q[_E3]!==undefined)?q[_E3]:q[0];
const _n4=(gain[_E3]!==undefined)?gain[_E3]:gain[0];this._a4(_m4,_b4,_n4);}const _c4=this._04*_C3[_E3]+this._14*this._34[_x3]+this._24*this._44[_x3]-this._Z3*this._54[_x3]-this.__3*this._64[_x3];this._44[_x3]=this._34[_x3];this._34[_x3]=_C3[_E3];this._64[_x3]=this._54[_x3];this._54[_x3]=_c4;const _H3=(bypass[_E3]!==undefined)?bypass[_E3]:bypass[0];_D3[_E3]=(_H3>0)?_C3[_E3]:_c4;}}return this._J3;}_a4(_o4,_e4,_p4){if(_o4===this._k4&&_e4===this._84&&_p4===this._l4)return;const _f4=2*Math.PI*_o4/sampleRate;
const _g4=Math.cos(_f4);const _q4=Math.sqrt(_p4);const _w4=_q4+1;const _x4=_q4-1;const _y4=_w4*_g4;const _z4=_x4*_g4;const _A4=_w4-_z4;const _B4=_w4+_z4;const alpha=Math.sin(_f4)/(2*_e4);const _C4=(2*Math.sqrt(_q4)*alpha);const _h4=_B4+_C4;const _Z3=-2*(_x4+_y4);const __3=_B4-_C4;const _04=_q4*(_A4+_C4);const _14=2*_q4*(_x4-_y4);const _24=_q4*(_A4-_C4);this._Z3=_Z3/_h4;this.__3=__3/_h4;this._04=_04/_h4;this._14=_14/_h4;this._24=_24/_h4;this._k4=_o4;this._84=_e4;this._l4=_p4;}}registerProcessor("lo-shelf-processor",
_l6);