class _z2{constructor(_A2){this._B2=0;this._C2=0;this.feedback=0;this._D2=0;this.buffer=new Float32Array(_A2);this._E2=0;}process(_F2){const out=this.buffer[this._E2];this._D2=(this._D2*this._B2)+(out*this._C2);this.buffer[this._E2]=_F2+(this._D2*this.feedback);++this._E2;this._E2%=this.buffer.length;return out;}_G2(_H2){this.feedback=Math.min(Math.max(0,_H2),1);}_I2(_J2){this._B2=Math.min(Math.max(0,_J2),1);this._C2=1-this._B2;}}class _K2{constructor(_A2){this.feedback=0;this.buffer=new Float32Array(_A2);
this._E2=0;}process(_F2){const out=this.buffer[this._E2];this.buffer[this._E2]=_F2+(out*this.feedback);++this._E2;this._E2%=this.buffer.length;return(out-_F2);}_G2(_H2){this.feedback=Math.min(Math.max(0,_H2),1);}}class _L2 extends AudioWorkletProcessor{static _M2=8;static _N2=4;static _O2=0.015;static _P2=0.4;static _Q2=0.28;static _R2=0.7;static _S2=[1116,1188,1277,1356,1422,1491,1557,1617];static _T2=[1139,1211,1300,1379,1445,1514,1580,1640];static _U2=[556,441,341,225];static _V2=[579,464,364,248];static get parameterDescriptors(){
return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"size",automationRate:"a-rate",defaultValue:0.7,minValue:0.0,maxValue:1.0},{name:"damp",automationRate:"a-rate",defaultValue:0.1,minValue:0.0,maxValue:1.0},{name:"mix",automationRate:"a-rate",defaultValue:0.35,minValue:0.0,maxValue:1.0}];}constructor(_W2){super();this._X2();const _Y2=_W2.outputChannelCount[0];this._Z2=-1;this.__2=-1;this._03=new Array(_Y2);this._13=new Array(_Y2);const _23=[_L2._S2,_L2._T2];const _33=[_L2._U2,
_L2._V2];for(let _43=0;_43<_Y2;++_43){this._03[_43]=new Array(_L2._M2);this._13[_43]=new Array(_L2._N2);for(let _53=0;_53<_L2._M2;++_53)this._03[_43][_53]=new _z2(_23[_43%_23.length][_53]);for(let _53=0;_53<_L2._N2;++_53)this._13[_43][_53]=new _K2(_33[_43%_33.length][_53]);}this._63(0.5);this._I2(0.5);for(let _43=0;_43<_Y2;++_43)for(let _53=0;_53<_L2._N2;++_53)this._13[_43][_53]._G2(0.5);}process(_73,_83,parameters){const input=_73[0];const output=_83[0];const bypass=parameters.bypass;const size=parameters.size;
const damp=parameters.damp;const mix=parameters.mix;for(let _43=0;_43<input.length;++_43){const _93=input[_43];const _a3=output[_43];for(let _b3=0;_b3<_93.length;++_b3){const _b3=(size[_b3]!==undefined)?size[_b3]:size[0];const _c3=(damp[_b3]!==undefined)?damp[_b3]:damp[0];this._63(_b3);this._I2(_c3);_a3[_b3]=_93[_b3];let out=0;const _d3=_93[_b3]*_L2._O2;for(let _53=0;_53<_L2._M2;++_53)out+=this._03[_43][_53].process(_d3);for(let _53=0;_53<_L2._N2;++_53)out=this._13[_43][_53].process(out);const _e3=(bypass[_b3]!==undefined)?bypass[_b3]:bypass[0];
if(_e3>0.0){continue;}const _f3=(mix[_b3]!==undefined)?mix[_b3]:mix[0];_a3[_b3]*=(1-_f3);_a3[_b3]+=(out*_f3);}}return this._g3;}_63(_A2){if(_A2===this._Z2)return;const size=(_A2*_L2._Q2)+_L2._R2;for(let _43=0;_43<this._03.length;++_43)for(let _53=0;_53<_L2._M2;++_53)this._03[_43][_53]._G2(size);this._Z2=_A2;}_I2(_J2){if(_J2===this.__2)return;const damp=_J2*_L2._P2;for(let _43=0;_43<this._03.length;++_43)for(let _53=0;_53<_L2._M2;++_53)this._03[_43][_53]._I2(damp);this.__2=_J2;}}registerProcessor("reverb1-processor",
_L2);class _h3 extends AudioWorkletProcessor{static get parameterDescriptors(){return [];}constructor(){super();this._X2();}process(_i3,_j3,_k3){const input=_i3[0];const _l3=_j3[0];const _m3=_j3[1];for(let _43=0;_43<input.length;++_43){const _93=input[_43];const _n3=_l3[_43];const _o3=_m3[_43];for(let _b3=0;_b3<_93.length;++_b3){_n3[_b3]=_93[_b3];_o3[_b3]=_93[_b3];}}return this._g3;}}class _p3 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,
minValue:0,maxValue:1}];}constructor(){super();this._X2();}process(_i3,_j3,_k3){const _q3=_i3[0];const _r3=_i3[1];const output=_j3[0];const bypass=_k3.bypass;for(let _43=0;_43<_r3.length;++_43){const _s3=_q3[_43];const _t3=_r3[_43];const _a3=output[_43];for(let _b3=0;_b3<_s3.length;++_b3){const _e3=(bypass[_b3]!==undefined)?bypass[_b3]:bypass[0];if(_e3>0){_a3[_b3]=_t3[_b3];}else {_a3[_b3]=_s3[_b3];}}}return this._g3;}}registerProcessor("eq-input",_h3);registerProcessor("eq-output",_p3);class _u3 extends AudioWorkletProcessor{
static get parameterDescriptors(){const _v3=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"cutoff",automationRate:"a-rate",defaultValue:Math.min(500.0,_v3),minValue:10.0,maxValue:_v3},{name:"q",automationRate:"a-rate",defaultValue:1.5,minValue:1.0,maxValue:100.0}];}constructor(_W2){super();this._X2();const _Y2=_W2.outputChannelCount[0];this._w3=0;this._x3=0;this._y3=0;this._z3=0;this._A3=0;this._B3=new Float32Array(_Y2);this._C3=new Float32Array(_Y2);
this._D3=new Float32Array(_Y2);this._E3=new Float32Array(_Y2);this._F3=-1;this._G3=-1;}process(_73,_83,parameters){const input=_73[0];const output=_83[0];const bypass=parameters.bypass;const cutoff=parameters.cutoff;const q=parameters.q;const _H3=(cutoff.length===1&&q.length===1);if(_H3)this._I3(cutoff[0],q[0]);for(let _43=0;_43<input.length;++_43){const _93=input[_43];const _a3=output[_43];for(let _b3=0;_b3<_93.length;++_b3){if(_H3===!1){const _43=(cutoff[_b3]!==undefined)?cutoff[_b3]:cutoff[0];const _J3=(q[_b3]!==undefined)?q[_b3]:q[0];
this._I3(_43,_J3);}const _K3=this._y3*_93[_b3]+this._z3*this._B3[_43]+this._A3*this._C3[_43]-this._w3*this._D3[_43]-this._x3*this._E3[_43];this._C3[_43]=this._B3[_43];this._B3[_43]=_93[_b3];this._E3[_43]=this._D3[_43];this._D3[_43]=_K3;const _e3=(bypass[_b3]!==undefined)?bypass[_b3]:bypass[0];_a3[_b3]=(_e3>0)?_93[_b3]:_K3;}}return this._g3;}_I3(_L3,_M3){if(_L3===this._F3&&_M3===this._G3)return;const _N3=2*Math.PI*_L3/sampleRate;const alpha=Math.sin(_N3)/(2*_M3);const _O3=Math.cos(_N3);const _P3=1+alpha;
const _w3=-2*_O3;const _x3=1-alpha;const _y3=(1-_O3)/2;const _z3=1-_O3;const _A3=(1-_O3)/2;this._w3=_w3/_P3;this._x3=_x3/_P3;this._y3=_y3/_P3;this._z3=_z3/_P3;this._A3=_A3/_P3;this._F3=_L3;this._G3=_M3;}}registerProcessor("lpf2-processor",_u3);class _Q3 extends AudioWorkletProcessor{static get parameterDescriptors(){const _R3=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"freq",automationRate:"a-rate",defaultValue:Math.min(1500.0,
_R3),minValue:10.0,maxValue:_R3},{name:"q",automationRate:"a-rate",defaultValue:1.0,minValue:1.0,maxValue:100.0},{name:"gain",automationRate:"a-rate",defaultValue:1e-2,minValue:1e-6}];}constructor(_W2){super();this._X2();const _Y2=_W2.outputChannelCount[0];this._w3=0;this._x3=0;this._y3=0;this._z3=0;this._A3=0;this._B3=new Float32Array(_Y2);this._C3=new Float32Array(_Y2);this._D3=new Float32Array(_Y2);this._E3=new Float32Array(_Y2);this._S3=-1;this._G3=-1;this._T3=-1;}process(_73,_83,parameters){const input=_73[0];
const output=_83[0];const bypass=parameters.bypass;const freq=parameters.freq;const q=parameters.q;const gain=parameters.gain;const _H3=(freq.length===1&&q.length===1&&gain.length===1);if(_H3)this._I3(freq[0],q[0],gain[0]);for(let _43=0;_43<input.length;++_43){const _93=input[_43];const _a3=output[_43];for(let _b3=0;_b3<_93.length;++_b3){if(_H3===!1){const _U3=(freq[_b3]!==undefined)?freq[_b3]:freq[0];const _J3=(q[_b3]!==undefined)?q[_b3]:q[0];const _V3=(gain[_b3]!==undefined)?gain[_b3]:gain[0];this._I3(_U3,
_J3,_V3);}const _K3=this._y3*_93[_b3]+this._z3*this._B3[_43]+this._A3*this._C3[_43]-this._w3*this._D3[_43]-this._x3*this._E3[_43];this._C3[_43]=this._B3[_43];this._B3[_43]=_93[_b3];this._E3[_43]=this._D3[_43];this._D3[_43]=_K3;const _e3=(bypass[_b3]!==undefined)?bypass[_b3]:bypass[0];_a3[_b3]=(_e3>0)?_93[_b3]:_K3;}}return this._g3;}_I3(_W3,_M3,_X3){if(_W3===this._S3&&_M3===this._G3&&_X3===this._T3)return;const _N3=2*Math.PI*_W3/sampleRate;const _O3=Math.cos(_N3);const _Y3=Math.sqrt(_X3);const alpha=Math.sin(_N3)/(2*_M3);
const _Z3=alpha/_Y3;const __3=alpha*_Y3;const _P3=1+_Z3;const _w3=-2*_O3;const _x3=1-_Z3;const _y3=1+__3;const _z3=_w3;const _A3=1-__3;this._w3=_w3/_P3;this._x3=_x3/_P3;this._y3=_y3/_P3;this._z3=_z3/_P3;this._A3=_A3/_P3;this._S3=_W3;this._G3=_M3;this._T3=_X3;}}registerProcessor("peak-eq-processor",_Q3);class _04 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"gain",automationRate:"a-rate",defaultValue:0.5,
minValue:0.0}];}constructor(){super();this._X2();}process(_73,_83,parameters){const input=_73[0];const output=_83[0];const bypass=parameters.bypass;const gain=parameters.gain;for(let _43=0;_43<input.length;++_43){const _93=input[_43];const _a3=output[_43];for(let _b3=0;_b3<_93.length;++_b3){_a3[_b3]=_93[_b3];const _e3=(bypass[_b3]!==undefined)?bypass[_b3]:bypass[0];if(_e3>0.0){continue;}const _V3=(gain[_b3]!==undefined)?gain[_b3]:gain[0];_a3[_b3]*=_V3;}}return this._g3;}}registerProcessor("gain-processor",
_04);class _14 extends AudioWorkletProcessor{static get parameterDescriptors(){const _v3=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"cutoff",automationRate:"a-rate",defaultValue:Math.min(1500.0,_v3),minValue:10.0,maxValue:_v3},{name:"q",automationRate:"a-rate",defaultValue:1.5,minValue:1.0,maxValue:100.0}];}constructor(_W2){super();this._X2();const _Y2=_W2.outputChannelCount[0];this._w3=0;this._x3=0;this._y3=0;this._z3=0;this._A3=0;
this._B3=new Float32Array(_Y2);this._C3=new Float32Array(_Y2);this._D3=new Float32Array(_Y2);this._E3=new Float32Array(_Y2);this._F3=-1;this._G3=-1;}process(_73,_83,parameters){const input=_73[0];const output=_83[0];const bypass=parameters.bypass;const cutoff=parameters.cutoff;const q=parameters.q;const _H3=(cutoff.length===1&&q.length===1);if(_H3)this._I3(cutoff[0],q[0]);for(let _43=0;_43<input.length;++_43){const _93=input[_43];const _a3=output[_43];for(let _b3=0;_b3<_93.length;++_b3){if(_H3===!1){const _43=(cutoff[_b3]!==undefined)?cutoff[_b3]:cutoff[0];
const _J3=(q[_b3]!==undefined)?q[_b3]:q[0];this._I3(_43,_J3);}const _K3=this._y3*_93[_b3]+this._z3*this._B3[_43]+this._A3*this._C3[_43]-this._w3*this._D3[_43]-this._x3*this._E3[_43];this._C3[_43]=this._B3[_43];this._B3[_43]=_93[_b3];this._E3[_43]=this._D3[_43];this._D3[_43]=_K3;const _e3=(bypass[_b3]!==undefined)?bypass[_b3]:bypass[0];_a3[_b3]=(_e3>0)?_93[_b3]:_K3;}}return this._g3;}_I3(_L3,_M3){if(_L3===this._F3&&_M3===this._G3)return;const _N3=2*Math.PI*_L3/sampleRate;const alpha=Math.sin(_N3)/(2*_M3);
const _O3=Math.cos(_N3);const _P3=1+alpha;const _w3=-2*_O3;const _x3=1-alpha;const _y3=(1+_O3)/2;const _z3=-1-_O3;const _A3=(1+_O3)/2;this._w3=_w3/_P3;this._x3=_x3/_P3;this._y3=_y3/_P3;this._z3=_z3/_P3;this._A3=_A3/_P3;this._F3=_L3;this._G3=_M3;}}registerProcessor("hpf2-processor",_14);class _24 extends AudioWorkletProcessor{static get parameterDescriptors(){const _R3=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"freq",automationRate:"a-rate",
defaultValue:Math.min(5000.0,_R3),minValue:10.0,maxValue:_R3},{name:"q",automationRate:"a-rate",defaultValue:1.0,minValue:1.0,maxValue:100.0},{name:"gain",automationRate:"a-rate",defaultValue:1e-2,minValue:1e-6}];}constructor(_W2){super();this._X2();const _Y2=_W2.outputChannelCount[0];this._w3=0;this._x3=0;this._y3=0;this._z3=0;this._A3=0;this._B3=new Float32Array(_Y2);this._C3=new Float32Array(_Y2);this._D3=new Float32Array(_Y2);this._E3=new Float32Array(_Y2);this._S3=-1;this._G3=-1;this._T3=-1;}process(_73,
_83,parameters){const input=_73[0];const output=_83[0];const bypass=parameters.bypass;const freq=parameters.freq;const q=parameters.q;const gain=parameters.gain;const _H3=(freq.length===1&&q.length===1&&gain.length===1);if(_H3)this._I3(freq[0],q[0],gain[0]);for(let _43=0;_43<input.length;++_43){const _93=input[_43];const _a3=output[_43];for(let _b3=0;_b3<_93.length;++_b3){if(_H3===!1){const _U3=(freq[_b3]!==undefined)?freq[_b3]:freq[0];const _J3=(q[_b3]!==undefined)?q[_b3]:q[0];const _V3=(gain[_b3]!==undefined)?gain[_b3]:gain[0];
this._I3(_U3,_J3,_V3);}const _K3=this._y3*_93[_b3]+this._z3*this._B3[_43]+this._A3*this._C3[_43]-this._w3*this._D3[_43]-this._x3*this._E3[_43];this._C3[_43]=this._B3[_43];this._B3[_43]=_93[_b3];this._E3[_43]=this._D3[_43];this._D3[_43]=_K3;const _e3=(bypass[_b3]!==undefined)?bypass[_b3]:bypass[0];_a3[_b3]=(_e3>0)?_93[_b3]:_K3;}}return this._g3;}_I3(_W3,_M3,_X3){if(_W3===this._S3&&_M3===this._G3&&_X3===this._T3)return;const _N3=2*Math.PI*_W3/sampleRate;const _O3=Math.cos(_N3);const _Y3=Math.sqrt(_X3);const _34=_Y3+1;
const _44=_Y3-1;const _54=_34*_O3;const _64=_44*_O3;const _74=_34-_64;const _84=_34+_64;const alpha=Math.sin(_N3)/(2*_M3);const _94=(2*Math.sqrt(_Y3)*alpha);const _P3=_74+_94;const _w3=2*(_44-_54);const _x3=_74-_94;const _y3=_Y3*(_84+_94);const _z3=-2*_Y3*(_44+_54);const _A3=_Y3*(_84-_94);this._w3=_w3/_P3;this._x3=_x3/_P3;this._y3=_y3/_P3;this._z3=_z3/_P3;this._A3=_A3/_P3;this._S3=_W3;this._G3=_M3;this._T3=_X3;}}registerProcessor("hi-shelf-processor",_24);function _a4(){}_a4._b4={_c4:0,_d4:1,_e4:2,_f4:3,_g4:4,
_h4:5};_a4._i4=function(_j4){return 1.0-_j4;};_a4._k4=function(_j4){return _j4;};_a4._l4=function(_j4){return 0.5*(Math.sin((_j4*2.0*Math.PI)-(Math.PI/2.0))+1.0);};_a4._m4=function(_j4){if(_j4<0.5){return 0.0;}return 1.0;};_a4._n4=function(_j4){if(_j4<0.5){return 2.0*_j4;}return 2.0-(2.0*_j4);};_a4._o4=[_a4._i4,_a4._k4,_a4._l4,_a4._m4,_a4._n4];_p4._q4=512;_p4._r4=1.0/_p4._q4;function _p4(_s4){this.data=new Float32Array(_p4._q4);for(let _53=0;_53<_p4._q4;++_53){this.data[_53]=_s4(_53*_p4._r4);}}_p4.prototype._t4=function(_j4){
_j4=Math.max(0.0,_j4);_j4=Math.min(_j4,1.0);const _u4=_j4*_p4._q4;const _v4=~~_u4;const _w4=_u4-_v4;let _x4=_v4;let _y4=_x4+1;if(_x4>=_p4._q4){_x4-=_p4._q4;}if(_y4>=_p4._q4){_y4-=_p4._q4;}const _z4=this.data[_x4];const _A4=this.data[_y4];return _z4+(_A4-_z4)*_w4;};;_B4._C4=[];_B4._D4=!1;_B4._E4=0.0;_B4._R3=20.0;function _B4(){this._F4=48000;this.shape=_a4._b4._e4;this.freq=1.0;this._G4=0.0;this._r4=0.0;this._H4=0.0;if(_B4._D4==true){return;}for(let _53=0;_53<_a4._b4._h4;++_53){_B4._C4[_53]=new _p4(_a4._o4[_53]);
}_B4._D4=true;}_B4._I4=function(){return(_B4._D4==!0);};_B4.prototype._J4=function(_K4){this._F4=_K4;this._L4();};;_B4.prototype._M4=function(_W3){_W3=Math.max(_B4._E4,_W3);_W3=Math.min(_W3,_B4._R3);this.freq=_W3;this._L4();};;_B4.prototype._N4=function(_O4){_O4=Math.max(0.0,_O4);_O4=Math.min(_O4,1.0);const _P4=_O4-this._H4;this._H4=_O4;this._G4+=_P4;while(this._G4>=1.0){this._G4-=1.0;}while(this._G4<0.0){this._G4+=1.0;}};;_B4.prototype._Q4=function(_R4){_R4=Math.max(0,_R4);_R4=Math.min(_R4,_a4._b4._h4-1);
this.shape=_R4;};;_B4.prototype._t4=function(){const _S4=_B4._C4[this.shape]._t4(this._G4);this._G4+=this._r4;while(this._G4>=1.0){this._G4-=1.0;}return _S4;};;_B4.prototype._L4=function(){this._r4=this.freq/this._F4;};;class _T4 extends AudioWorkletProcessor{static _U4=5.0;static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"time",automationRate:"a-rate",defaultValue:0.2,minValue:0.0,maxValue:_T4._U4},{name:"feedback",automationRate:"a-rate",
defaultValue:0.5,minValue:0.0,maxValue:1.0},{name:"mix",automationRate:"a-rate",defaultValue:0.35,minValue:0.0,maxValue:1.0}];}constructor(_W2){super();this._X2();const _Y2=_W2.outputChannelCount[0];const _V4=(_T4._U4*sampleRate)+1;this.buffer=new Array(_Y2);this._W4=new Uint32Array(_Y2);for(let _43=0;_43<_Y2;++_43)this.buffer[_43]=new Float32Array(_V4);}process(_73,_83,parameters){const input=_73[0];const output=_83[0];const bypass=parameters.bypass;const time=parameters.time;const feedback=parameters.feedback;
const mix=parameters.mix;for(let _43=0;_43<input.length;++_43){const _93=input[_43];const _a3=output[_43];for(let _b3=0;_b3<_93.length;++_b3){_a3[_b3]=_93[_b3];const _X4=(time[_b3]!==undefined)?time[_b3]:time[0];const _Y4=this._t4(_43,_X4);const _U3=(feedback[_b3]!==undefined)?feedback[_b3]:feedback[0];const _Z4=_93[_b3]+(_Y4*_U3);this.write(_43,_Z4);const _e3=(bypass[_b3]!==undefined)?bypass[_b3]:bypass[0];if(_e3>0.0){continue;}const _f3=(mix[_b3]!==undefined)?mix[_b3]:mix[0];_a3[_b3]*=(1-_f3);_a3[_b3]+=(_Y4*_f3);
}}return this._g3;}_t4(__4,_05){const _15=_05*sampleRate;let _x4=(this._W4[__4]-~~_15);let _y4=(_x4-1);while(_x4<0)_x4+=this.buffer[__4].length;while(_y4<0)_y4+=this.buffer[__4].length;const _25=_15-~~_15;const _z4=this.buffer[__4][_x4];const _A4=this.buffer[__4][_y4];return _z4+(_A4-_z4)*_25;}write(__4,_F2){++this._W4[__4];this._W4[__4]%=this.buffer[__4].length;this.buffer[__4][this._W4[__4]]=_F2;}}registerProcessor("delay-processor",_T4);AudioWorkletProcessor.prototype._X2=function(){this._g3=true;this.port.onmessage=(_35)=>{
if(_35.data==="kill")this._g3=false;};};;class _45 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1}];}constructor(){super();this._X2();}process(_73,_83,parameters){const input=_73[0];const bypass=parameters.bypass;for(let _43=0;_43<input.length;++_43){const _93=input[_43];for(let _b3=0;_b3<_93.length;++_b3){const _e3=(bypass[_b3]!==undefined)?bypass[_b3]:bypass[0];_83[_e3][_43][_b3]=_93[_b3];}}return this._g3;
}}class _55 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"gain",automationRate:"a-rate",defaultValue:1,minValue:0}];}constructor(){super();this._X2();}process(_73,_83,parameters){const _q3=_73[0];const _r3=_73[1];const output=_83[0];const gain=parameters.gain;for(let _43=0;_43<_r3.length;++_43){const _93=_r3[_43];const _a3=output[_43];for(let _b3=0;_b3<_93.length;++_b3)_a3[_b3]=_93[_b3];}for(let _43=0;_43<_q3.length;++_43){const _93=_q3[_43];const _a3=output[_43];for(let _b3=0;_b3<_93.length;
++_b3){const _V3=(gain[_b3]!==undefined)?gain[_b3]:gain[0];_a3[_b3]+=_93[_b3]*_V3;}}return this._g3;}}registerProcessor("audio-bus-input",_45);registerProcessor("audio-bus-output",_55);class _65 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"gain",automationRate:"a-rate",defaultValue:1.0,minValue:0.0},{name:"factor",automationRate:"a-rate",defaultValue:20,minValue:1,maxValue:100},{name:"resolution",
automationRate:"a-rate",defaultValue:8,minValue:2,maxValue:16},{name:"mix",automationRate:"a-rate",defaultValue:0.8,minValue:0.0,maxValue:1.0}];}static _75=[undefined,undefined,2,4,8,16,32,64,128,256,512,1024,2048,4096,8192,16384,32768];constructor(_W2){super();this._X2();const _Y2=_W2.outputChannelCount[0];this._85=new Float32Array(_Y2);this._95=new Uint32Array(_Y2);}process(_73,_83,parameters){const input=_73[0];const output=_83[0];const bypass=parameters.bypass;const gain=parameters.gain;const factor=parameters.factor;
const resolution=parameters.resolution;const mix=parameters.mix;for(let _43=0;_43<input.length;++_43){const _93=input[_43];const _a3=output[_43];for(let _b3=0;_b3<_93.length;++_b3){_a3[_b3]=_93[_b3];if(this._95[_43]===0)this._85[_43]=_93[_b3];const _U3=(factor[_b3]!==undefined)?factor[_b3]:factor[0];++this._95[_43];this._95[_43]%=_U3;const _e3=(bypass[_b3]!==undefined)?bypass[_b3]:bypass[0];if(_e3>0.0){continue;}let _d3=this._85[_43];const _V3=(gain[_b3]!==undefined)?gain[_b3]:gain[0];_d3*=_V3;_d3=Math.max(Math.min(_d3,
1.0),-1.0);const _a5=(resolution[_b3]!==undefined)?resolution[_b3]:resolution[0];const max=(_d3>0.0)?_65._75[_a5]-1:_65._75[_a5];_d3=Math.round(_d3*max)/max;const _f3=(mix[_b3]!==undefined)?mix[_b3]:mix[0];_a3[_b3]*=(1.0-_f3);_a3[_b3]+=(_d3*_f3);}}return this._g3;}}registerProcessor("bitcrusher-processor",_65);class _b5 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"rate",automationRate:"a-rate",defaultValue:5.0,
minValue:0.0,maxValue:20.0},{name:"intensity",automationRate:"a-rate",defaultValue:1.0,minValue:0.0,maxValue:1.0},{name:"offset",automationRate:"a-rate",defaultValue:0.0,minValue:0.0,maxValue:1.0},{name:"shape",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:4}];}constructor(_W2){super();this._X2();const _Y2=_W2.outputChannelCount[0];this._c5=new Array(_Y2).fill(1.0);this._d5=new Array(_Y2).fill(0.0);this._e5=new Array(_Y2).fill(_a4._b4._c4);this._f5=new Array(_Y2);for(let _43=0;_43<_Y2;++_43){
this._f5[_43]=new _B4();this._f5[_43]._J4(sampleRate);this._f5[_43]._M4(this._c5[_43]);this._f5[_43]._Q4(this._e5[_43]);if(_43%2===1){this._f5[_43]._N4(this._d5[_43]);}}}process(_73,_83,parameters){const input=_73[0];const output=_83[0];const bypass=parameters.bypass;const rate=parameters.rate;const intensity=parameters.intensity;const offset=parameters.offset;const shape=parameters.shape;for(let _43=0;_43<input.length;++_43){const _93=input[_43];const _a3=output[_43];for(let _b3=0;_b3<_93.length;++_b3){_a3[_b3]=_93[_b3];
const _a5=(rate[_b3]!==undefined)?rate[_b3]:rate[0];const _g5=(offset[_b3]!==undefined)?offset[_b3]:offset[0];const _h5=(shape[_b3]!==undefined)?shape[_b3]:shape[0];this._i5(_43,_a5,_g5,_h5);const _j5=this._f5[_43]._t4();const _e3=(bypass[_b3]!==undefined)?bypass[_b3]:bypass[0];if(_e3>0.0){continue;}const _53=(intensity[_b3]!==undefined)?intensity[_b3]:intensity[0];const out=_93[_b3]*_j5*_53;_a3[_b3]*=(1.0-_53);_a3[_b3]+=out;}}return this._g3;}_i5(__4,_k5,_O4,_R4){if(_k5!==this._c5[__4]){this._f5[__4]._M4(_k5);
this._c5[__4]=_k5;}if(_O4!==this._d5[__4]){if(__4%2===1){this._f5[__4]._N4(_O4);}this._d5[__4]=_O4;}if(_R4!==this._e5[__4]){this._f5[__4]._Q4(_R4);this._e5[__4]=_R4;}}}registerProcessor("tremolo-processor",_b5);class _l5{constructor(_05=1e-3){this.setTime(_05);}setTime(_05){this._m5=Math.exp(-1/(_05*sampleRate));}process(_n5,_o5){return _n5+this._m5*(_o5-_n5);}}class _p5{constructor(_q5,_r5){this._s5=new _l5(_q5);this._t5=new _l5(_r5);this._u5=_q5;this._v5=_r5;}_w5(_05){if(_05===this._u5)return;this._s5.setTime(_05);
this._u5=_05;}_x5(_05){if(_05===this._v5)return;this._t5.setTime(_05);this._v5=_05;}process(_n5,_o5){if(_n5>_o5)return this._s5.process(_n5,_o5);else return this._t5.process(_n5,_o5);}}class _y5 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"ingain",automationRate:"a-rate",defaultValue:1,minValue:0},{name:"threshold",automationRate:"a-rate",defaultValue:0.125,minValue:1e-3,maxValue:1},{name:"ratio",
automationRate:"a-rate",defaultValue:4,minValue:1},{name:"attack",automationRate:"a-rate",defaultValue:0.05,minValue:1e-3,maxValue:1e-1},{name:"release",automationRate:"a-rate",defaultValue:0.25,minValue:1e-2,maxValue:1},{name:"outgain",automationRate:"a-rate",defaultValue:1,minValue:0}];}constructor(_z5){super();this._X2();const _s5=_y5.parameterDescriptors.find(_A5=>_A5.name==="attack");const _t5=_y5.parameterDescriptors.find(_A5=>_A5.name==="release");this._B5=new _p5(_s5.defaultValue,_t5.defaultValue);
this._C5=0;}process(_D5,_E5,_F5){const input=_D5[0];const output=_E5[0];const bypass=_F5.bypass;const ingain=_F5.ingain;const outgain=_F5.outgain;const threshold=_F5.threshold;const ratio=_F5.ratio;const attack=_F5.attack;const release=_F5.release;if(input.length===0)return this._g3;for(let _b3=0;_b3<input[0].length;++_b3){let _G5=input.map(_H5=>_H5[_b3]);output.forEach((_H5,_I5)=>{_H5[_b3]=_G5[_I5];});const _J5=(ingain[_b3]!==undefined)?ingain[_b3]:ingain[0];_G5=_G5.map(_K5=>_K5*=_J5);const rect=_G5.map(_K5=>Math.abs(_K5));
const max=Math.max(...rect);const _L5=_M5(max);const _X4=(threshold[_b3]!==undefined)?threshold[_b3]:threshold[0];const _N5=_M5(_X4);const _O5=Math.max(0,_L5-_N5);const _s5=(attack[_b3]!==undefined)?attack[_b3]:attack[0];const _t5=(release[_b3]!==undefined)?release[_b3]:release[0];this._B5._w5(_s5);this._B5._x5(_t5);this._C5=this._B5.process(_O5,this._C5);const _e3=(bypass[_b3]!==undefined)?bypass[_b3]:bypass[0];if(_e3>0)continue;const _a5=(ratio[_b3]!==undefined)?ratio[_b3]:ratio[0];const _P5=(this._C5/_a5)-this._C5;
const _V3=_Q5(_P5);_G5=_G5.map(_K5=>_K5*=_V3);const _R5=(outgain[_b3]!==undefined)?outgain[_b3]:outgain[0];_G5=_G5.map(_K5=>_K5*=_R5);output.forEach((_H5,_I5)=>{_H5[_b3]=_G5[_I5];});}return this._g3;}}function _M5(_S5){return 20*Math.log10(_S5);}function _Q5(_S5){return Math.pow(10,_S5/20);}registerProcessor("compressor-processor",_y5);class _T5 extends AudioWorkletProcessor{static get parameterDescriptors(){const _R3=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,
minValue:0,maxValue:1},{name:"freq",automationRate:"a-rate",defaultValue:Math.min(500.0,_R3),minValue:10.0,maxValue:_R3},{name:"q",automationRate:"a-rate",defaultValue:1.0,minValue:1.0,maxValue:100.0},{name:"gain",automationRate:"a-rate",defaultValue:1e-2,minValue:1e-6}];}constructor(_W2){super();this._X2();const _Y2=_W2.outputChannelCount[0];this._w3=0;this._x3=0;this._y3=0;this._z3=0;this._A3=0;this._B3=new Float32Array(_Y2);this._C3=new Float32Array(_Y2);this._D3=new Float32Array(_Y2);this._E3=new Float32Array(_Y2);
this._S3=-1;this._G3=-1;this._T3=-1;}process(_73,_83,parameters){const input=_73[0];const output=_83[0];const bypass=parameters.bypass;const freq=parameters.freq;const q=parameters.q;const gain=parameters.gain;const _H3=(freq.length===1&&q.length===1&&gain.length===1);if(_H3)this._I3(freq[0],q[0],gain[0]);for(let _43=0;_43<input.length;++_43){const _93=input[_43];const _a3=output[_43];for(let _b3=0;_b3<_93.length;++_b3){if(_H3===!1){const _U3=(freq[_b3]!==undefined)?freq[_b3]:freq[0];const _J3=(q[_b3]!==undefined)?q[_b3]:q[0];
const _V3=(gain[_b3]!==undefined)?gain[_b3]:gain[0];this._I3(_U3,_J3,_V3);}const _K3=this._y3*_93[_b3]+this._z3*this._B3[_43]+this._A3*this._C3[_43]-this._w3*this._D3[_43]-this._x3*this._E3[_43];this._C3[_43]=this._B3[_43];this._B3[_43]=_93[_b3];this._E3[_43]=this._D3[_43];this._D3[_43]=_K3;const _e3=(bypass[_b3]!==undefined)?bypass[_b3]:bypass[0];_a3[_b3]=(_e3>0)?_93[_b3]:_K3;}}return this._g3;}_I3(_W3,_M3,_X3){if(_W3===this._S3&&_M3===this._G3&&_X3===this._T3)return;const _N3=2*Math.PI*_W3/sampleRate;
const _O3=Math.cos(_N3);const _Y3=Math.sqrt(_X3);const _34=_Y3+1;const _44=_Y3-1;const _54=_34*_O3;const _64=_44*_O3;const _74=_34-_64;const _84=_34+_64;const alpha=Math.sin(_N3)/(2*_M3);const _94=(2*Math.sqrt(_Y3)*alpha);const _P3=_84+_94;const _w3=-2*(_44+_54);const _x3=_84-_94;const _y3=_Y3*(_74+_94);const _z3=2*_Y3*(_44-_54);const _A3=_Y3*(_74-_94);this._w3=_w3/_P3;this._x3=_x3/_P3;this._y3=_y3/_P3;this._z3=_z3/_P3;this._A3=_A3/_P3;this._S3=_W3;this._G3=_M3;this._T3=_X3;}}registerProcessor("lo-shelf-processor",
_T5);