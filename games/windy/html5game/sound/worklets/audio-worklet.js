class _B1{constructor(_C1){this._D1=0;this._E1=0;this.feedback=0;this._F1=0;this.buffer=new Float32Array(_C1);this._G1=0;}process(_H1){const out=this.buffer[this._G1];this._F1=(this._F1*this._D1)+(out*this._E1);this.buffer[this._G1]=_H1+(this._F1*this.feedback);++this._G1;this._G1%=this.buffer.length;return out;}_I1(_J1){this.feedback=Math.min(Math.max(0,_J1),1);}_K1(_L1){this._D1=Math.min(Math.max(0,_L1),1);this._E1=1-this._D1;}}class _M1{constructor(_C1){this.feedback=0;this.buffer=new Float32Array(_C1);
this._G1=0;}process(_H1){const out=this.buffer[this._G1];this.buffer[this._G1]=_H1+(out*this.feedback);++this._G1;this._G1%=this.buffer.length;return(out-_H1);}_I1(_J1){this.feedback=Math.min(Math.max(0,_J1),1);}}class _N1 extends AudioWorkletProcessor{static _O1=8;static _P1=4;static _Q1=0.015;static _R1=0.4;static _S1=0.28;static _T1=0.7;static _U1=[1116,1188,1277,1356,1422,1491,1557,1617];static _V1=[1139,1211,1300,1379,1445,1514,1580,1640];static _W1=[556,441,341,225];static _X1=[579,464,364,248];static get parameterDescriptors(){
return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"size",automationRate:"a-rate",defaultValue:0.7,minValue:0.0,maxValue:1.0},{name:"damp",automationRate:"a-rate",defaultValue:0.1,minValue:0.0,maxValue:1.0},{name:"mix",automationRate:"a-rate",defaultValue:0.35,minValue:0.0,maxValue:1.0}];}constructor(_Y1){super();this._Z1();const __1=_Y1.outputChannelCount[0];this._02=-1;this._12=-1;this._22=new Array(__1);this._32=new Array(__1);const _42=[_N1._U1,_N1._V1];const _52=[_N1._W1,
_N1._X1];for(let _62=0;_62<__1;++_62){this._22[_62]=new Array(_N1._O1);this._32[_62]=new Array(_N1._P1);for(let _72=0;_72<_N1._O1;++_72)this._22[_62][_72]=new _B1(_42[_62%_42.length][_72]);for(let _72=0;_72<_N1._P1;++_72)this._32[_62][_72]=new _M1(_52[_62%_52.length][_72]);}this._82(0.5);this._K1(0.5);for(let _62=0;_62<__1;++_62)for(let _72=0;_72<_N1._P1;++_72)this._32[_62][_72]._I1(0.5);}process(_92,_a2,parameters){const input=_92[0];const output=_a2[0];const bypass=parameters.bypass;const size=parameters.size;
const damp=parameters.damp;const mix=parameters.mix;for(let _62=0;_62<input.length;++_62){const _b2=input[_62];const _c2=output[_62];for(let _d2=0;_d2<_b2.length;++_d2){const _d2=(size[_d2]!==undefined)?size[_d2]:size[0];const _e2=(damp[_d2]!==undefined)?damp[_d2]:damp[0];this._82(_d2);this._K1(_e2);_c2[_d2]=_b2[_d2];let out=0;const _f2=_b2[_d2]*_N1._Q1;for(let _72=0;_72<_N1._O1;++_72)out+=this._22[_62][_72].process(_f2);for(let _72=0;_72<_N1._P1;++_72)out=this._32[_62][_72].process(out);const _g2=(bypass[_d2]!==undefined)?bypass[_d2]:bypass[0];
if(_g2>0.0){continue;}const _h2=(mix[_d2]!==undefined)?mix[_d2]:mix[0];_c2[_d2]*=(1-_h2);_c2[_d2]+=(out*_h2);}}return this._i2;}_82(_C1){if(_C1===this._02)return;const size=(_C1*_N1._S1)+_N1._T1;for(let _62=0;_62<this._22.length;++_62)for(let _72=0;_72<_N1._O1;++_72)this._22[_62][_72]._I1(size);this._02=_C1;}_K1(_L1){if(_L1===this._12)return;const damp=_L1*_N1._R1;for(let _62=0;_62<this._22.length;++_62)for(let _72=0;_72<_N1._O1;++_72)this._22[_62][_72]._K1(damp);this._12=_L1;}}registerProcessor("reverb1-processor",
_N1);class _j2 extends AudioWorkletProcessor{static get parameterDescriptors(){return [];}constructor(){super();this._Z1();}process(_k2,_l2,_m2){const input=_k2[0];const _n2=_l2[0];const _o2=_l2[1];for(let _62=0;_62<input.length;++_62){const _b2=input[_62];const _p2=_n2[_62];const _q2=_o2[_62];for(let _d2=0;_d2<_b2.length;++_d2){_p2[_d2]=_b2[_d2];_q2[_d2]=_b2[_d2];}}return this._i2;}}class _r2 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,
minValue:0,maxValue:1}];}constructor(){super();this._Z1();}process(_k2,_l2,_m2){const _s2=_k2[0];const _t2=_k2[1];const output=_l2[0];const bypass=_m2.bypass;for(let _62=0;_62<_t2.length;++_62){const _u2=_s2[_62];const _v2=_t2[_62];const _c2=output[_62];for(let _d2=0;_d2<_u2.length;++_d2){const _g2=(bypass[_d2]!==undefined)?bypass[_d2]:bypass[0];if(_g2>0){_c2[_d2]=_v2[_d2];}else {_c2[_d2]=_u2[_d2];}}}return this._i2;}}registerProcessor("eq-input",_j2);registerProcessor("eq-output",_r2);class _w2 extends AudioWorkletProcessor{
static get parameterDescriptors(){const _x2=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"cutoff",automationRate:"a-rate",defaultValue:Math.min(500.0,_x2),minValue:10.0,maxValue:_x2},{name:"q",automationRate:"a-rate",defaultValue:1.5,minValue:1.0,maxValue:100.0}];}constructor(_Y1){super();this._Z1();const __1=_Y1.outputChannelCount[0];this._y2=0;this._z2=0;this._A2=0;this._B2=0;this._C2=0;this._D2=new Float32Array(__1);this._E2=new Float32Array(__1);
this._F2=new Float32Array(__1);this._G2=new Float32Array(__1);this._H2=-1;this._I2=-1;}process(_92,_a2,parameters){const input=_92[0];const output=_a2[0];const bypass=parameters.bypass;const cutoff=parameters.cutoff;const q=parameters.q;const _J2=(cutoff.length===1&&q.length===1);if(_J2)this._K2(cutoff[0],q[0]);for(let _62=0;_62<input.length;++_62){const _b2=input[_62];const _c2=output[_62];for(let _d2=0;_d2<_b2.length;++_d2){if(_J2===!1){const _62=(cutoff[_d2]!==undefined)?cutoff[_d2]:cutoff[0];const _L2=(q[_d2]!==undefined)?q[_d2]:q[0];
this._K2(_62,_L2);}const _M2=this._A2*_b2[_d2]+this._B2*this._D2[_62]+this._C2*this._E2[_62]-this._y2*this._F2[_62]-this._z2*this._G2[_62];this._E2[_62]=this._D2[_62];this._D2[_62]=_b2[_d2];this._G2[_62]=this._F2[_62];this._F2[_62]=_M2;const _g2=(bypass[_d2]!==undefined)?bypass[_d2]:bypass[0];_c2[_d2]=(_g2>0)?_b2[_d2]:_M2;}}return this._i2;}_K2(_N2,_O2){if(_N2===this._H2&&_O2===this._I2)return;const _P2=2*Math.PI*_N2/sampleRate;const alpha=Math.sin(_P2)/(2*_O2);const _Q2=Math.cos(_P2);const _R2=1+alpha;
const _y2=-2*_Q2;const _z2=1-alpha;const _A2=(1-_Q2)/2;const _B2=1-_Q2;const _C2=(1-_Q2)/2;this._y2=_y2/_R2;this._z2=_z2/_R2;this._A2=_A2/_R2;this._B2=_B2/_R2;this._C2=_C2/_R2;this._H2=_N2;this._I2=_O2;}}registerProcessor("lpf2-processor",_w2);class _S2 extends AudioWorkletProcessor{static get parameterDescriptors(){const _T2=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"freq",automationRate:"a-rate",defaultValue:Math.min(1500.0,
_T2),minValue:10.0,maxValue:_T2},{name:"q",automationRate:"a-rate",defaultValue:1.0,minValue:1.0,maxValue:100.0},{name:"gain",automationRate:"a-rate",defaultValue:1e-2,minValue:1e-6}];}constructor(_Y1){super();this._Z1();const __1=_Y1.outputChannelCount[0];this._y2=0;this._z2=0;this._A2=0;this._B2=0;this._C2=0;this._D2=new Float32Array(__1);this._E2=new Float32Array(__1);this._F2=new Float32Array(__1);this._G2=new Float32Array(__1);this._U2=-1;this._I2=-1;this._V2=-1;}process(_92,_a2,parameters){const input=_92[0];
const output=_a2[0];const bypass=parameters.bypass;const freq=parameters.freq;const q=parameters.q;const gain=parameters.gain;const _J2=(freq.length===1&&q.length===1&&gain.length===1);if(_J2)this._K2(freq[0],q[0],gain[0]);for(let _62=0;_62<input.length;++_62){const _b2=input[_62];const _c2=output[_62];for(let _d2=0;_d2<_b2.length;++_d2){if(_J2===!1){const _W2=(freq[_d2]!==undefined)?freq[_d2]:freq[0];const _L2=(q[_d2]!==undefined)?q[_d2]:q[0];const _X2=(gain[_d2]!==undefined)?gain[_d2]:gain[0];this._K2(_W2,
_L2,_X2);}const _M2=this._A2*_b2[_d2]+this._B2*this._D2[_62]+this._C2*this._E2[_62]-this._y2*this._F2[_62]-this._z2*this._G2[_62];this._E2[_62]=this._D2[_62];this._D2[_62]=_b2[_d2];this._G2[_62]=this._F2[_62];this._F2[_62]=_M2;const _g2=(bypass[_d2]!==undefined)?bypass[_d2]:bypass[0];_c2[_d2]=(_g2>0)?_b2[_d2]:_M2;}}return this._i2;}_K2(_Y2,_O2,_Z2){if(_Y2===this._U2&&_O2===this._I2&&_Z2===this._V2)return;const _P2=2*Math.PI*_Y2/sampleRate;const _Q2=Math.cos(_P2);const __2=Math.sqrt(_Z2);const alpha=Math.sin(_P2)/(2*_O2);
const _03=alpha/__2;const _13=alpha*__2;const _R2=1+_03;const _y2=-2*_Q2;const _z2=1-_03;const _A2=1+_13;const _B2=_y2;const _C2=1-_13;this._y2=_y2/_R2;this._z2=_z2/_R2;this._A2=_A2/_R2;this._B2=_B2/_R2;this._C2=_C2/_R2;this._U2=_Y2;this._I2=_O2;this._V2=_Z2;}}registerProcessor("peak-eq-processor",_S2);class _23 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"gain",automationRate:"a-rate",defaultValue:0.5,
minValue:0.0}];}constructor(){super();this._Z1();}process(_92,_a2,parameters){const input=_92[0];const output=_a2[0];const bypass=parameters.bypass;const gain=parameters.gain;for(let _62=0;_62<input.length;++_62){const _b2=input[_62];const _c2=output[_62];for(let _d2=0;_d2<_b2.length;++_d2){_c2[_d2]=_b2[_d2];const _g2=(bypass[_d2]!==undefined)?bypass[_d2]:bypass[0];if(_g2>0.0){continue;}const _X2=(gain[_d2]!==undefined)?gain[_d2]:gain[0];_c2[_d2]*=_X2;}}return this._i2;}}registerProcessor("gain-processor",
_23);class _33 extends AudioWorkletProcessor{static get parameterDescriptors(){const _x2=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"cutoff",automationRate:"a-rate",defaultValue:Math.min(1500.0,_x2),minValue:10.0,maxValue:_x2},{name:"q",automationRate:"a-rate",defaultValue:1.5,minValue:1.0,maxValue:100.0}];}constructor(_Y1){super();this._Z1();const __1=_Y1.outputChannelCount[0];this._y2=0;this._z2=0;this._A2=0;this._B2=0;this._C2=0;
this._D2=new Float32Array(__1);this._E2=new Float32Array(__1);this._F2=new Float32Array(__1);this._G2=new Float32Array(__1);this._H2=-1;this._I2=-1;}process(_92,_a2,parameters){const input=_92[0];const output=_a2[0];const bypass=parameters.bypass;const cutoff=parameters.cutoff;const q=parameters.q;const _J2=(cutoff.length===1&&q.length===1);if(_J2)this._K2(cutoff[0],q[0]);for(let _62=0;_62<input.length;++_62){const _b2=input[_62];const _c2=output[_62];for(let _d2=0;_d2<_b2.length;++_d2){if(_J2===!1){const _62=(cutoff[_d2]!==undefined)?cutoff[_d2]:cutoff[0];
const _L2=(q[_d2]!==undefined)?q[_d2]:q[0];this._K2(_62,_L2);}const _M2=this._A2*_b2[_d2]+this._B2*this._D2[_62]+this._C2*this._E2[_62]-this._y2*this._F2[_62]-this._z2*this._G2[_62];this._E2[_62]=this._D2[_62];this._D2[_62]=_b2[_d2];this._G2[_62]=this._F2[_62];this._F2[_62]=_M2;const _g2=(bypass[_d2]!==undefined)?bypass[_d2]:bypass[0];_c2[_d2]=(_g2>0)?_b2[_d2]:_M2;}}return this._i2;}_K2(_N2,_O2){if(_N2===this._H2&&_O2===this._I2)return;const _P2=2*Math.PI*_N2/sampleRate;const alpha=Math.sin(_P2)/(2*_O2);
const _Q2=Math.cos(_P2);const _R2=1+alpha;const _y2=-2*_Q2;const _z2=1-alpha;const _A2=(1+_Q2)/2;const _B2=-1-_Q2;const _C2=(1+_Q2)/2;this._y2=_y2/_R2;this._z2=_z2/_R2;this._A2=_A2/_R2;this._B2=_B2/_R2;this._C2=_C2/_R2;this._H2=_N2;this._I2=_O2;}}registerProcessor("hpf2-processor",_33);class _43 extends AudioWorkletProcessor{static get parameterDescriptors(){const _T2=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"freq",automationRate:"a-rate",
defaultValue:Math.min(5000.0,_T2),minValue:10.0,maxValue:_T2},{name:"q",automationRate:"a-rate",defaultValue:1.0,minValue:1.0,maxValue:100.0},{name:"gain",automationRate:"a-rate",defaultValue:1e-2,minValue:1e-6}];}constructor(_Y1){super();this._Z1();const __1=_Y1.outputChannelCount[0];this._y2=0;this._z2=0;this._A2=0;this._B2=0;this._C2=0;this._D2=new Float32Array(__1);this._E2=new Float32Array(__1);this._F2=new Float32Array(__1);this._G2=new Float32Array(__1);this._U2=-1;this._I2=-1;this._V2=-1;}process(_92,
_a2,parameters){const input=_92[0];const output=_a2[0];const bypass=parameters.bypass;const freq=parameters.freq;const q=parameters.q;const gain=parameters.gain;const _J2=(freq.length===1&&q.length===1&&gain.length===1);if(_J2)this._K2(freq[0],q[0],gain[0]);for(let _62=0;_62<input.length;++_62){const _b2=input[_62];const _c2=output[_62];for(let _d2=0;_d2<_b2.length;++_d2){if(_J2===!1){const _W2=(freq[_d2]!==undefined)?freq[_d2]:freq[0];const _L2=(q[_d2]!==undefined)?q[_d2]:q[0];const _X2=(gain[_d2]!==undefined)?gain[_d2]:gain[0];
this._K2(_W2,_L2,_X2);}const _M2=this._A2*_b2[_d2]+this._B2*this._D2[_62]+this._C2*this._E2[_62]-this._y2*this._F2[_62]-this._z2*this._G2[_62];this._E2[_62]=this._D2[_62];this._D2[_62]=_b2[_d2];this._G2[_62]=this._F2[_62];this._F2[_62]=_M2;const _g2=(bypass[_d2]!==undefined)?bypass[_d2]:bypass[0];_c2[_d2]=(_g2>0)?_b2[_d2]:_M2;}}return this._i2;}_K2(_Y2,_O2,_Z2){if(_Y2===this._U2&&_O2===this._I2&&_Z2===this._V2)return;const _P2=2*Math.PI*_Y2/sampleRate;const _Q2=Math.cos(_P2);const __2=Math.sqrt(_Z2);const _53=__2+1;
const _63=__2-1;const _73=_53*_Q2;const _83=_63*_Q2;const _93=_53-_83;const _a3=_53+_83;const alpha=Math.sin(_P2)/(2*_O2);const _b3=(2*Math.sqrt(__2)*alpha);const _R2=_93+_b3;const _y2=2*(_63-_73);const _z2=_93-_b3;const _A2=__2*(_a3+_b3);const _B2=-2*__2*(_63+_73);const _C2=__2*(_a3-_b3);this._y2=_y2/_R2;this._z2=_z2/_R2;this._A2=_A2/_R2;this._B2=_B2/_R2;this._C2=_C2/_R2;this._U2=_Y2;this._I2=_O2;this._V2=_Z2;}}registerProcessor("hi-shelf-processor",_43);function _c3(){}_c3._d3={_e3:0,_f3:1,_g3:2,_h3:3,_i3:4,
_j3:5};_c3._k3=function(_l3){return 1.0-_l3;};_c3._m3=function(_l3){return _l3;};_c3._n3=function(_l3){return 0.5*(Math.sin((_l3*2.0*Math.PI)-(Math.PI/2.0))+1.0);};_c3._o3=function(_l3){if(_l3<0.5){return 0.0;}return 1.0;};_c3._p3=function(_l3){if(_l3<0.5){return 2.0*_l3;}return 2.0-(2.0*_l3);};_c3._q3=[_c3._k3,_c3._m3,_c3._n3,_c3._o3,_c3._p3];_r3._s3=512;_r3._t3=1.0/_r3._s3;function _r3(_u3){this.data=new Float32Array(_r3._s3);for(let _72=0;_72<_r3._s3;++_72){this.data[_72]=_u3(_72*_r3._t3);}}_r3.prototype._v3=function(_l3){
_l3=Math.max(0.0,_l3);_l3=Math.min(_l3,1.0);const _w3=_l3*_r3._s3;const _x3=~~_w3;const _y3=_w3-_x3;let _z3=_x3;let _A3=_z3+1;if(_z3>=_r3._s3){_z3-=_r3._s3;}if(_A3>=_r3._s3){_A3-=_r3._s3;}const _B3=this.data[_z3];const _C3=this.data[_A3];return _B3+(_C3-_B3)*_y3;};;_D3._E3=[];_D3._F3=!1;_D3._G3=0.0;_D3._T2=20.0;function _D3(){this._H3=48000;this.shape=_c3._d3._g3;this.freq=1.0;this._I3=0.0;this._t3=0.0;this._J3=0.0;if(_D3._F3==true){return;}for(let _72=0;_72<_c3._d3._j3;++_72){_D3._E3[_72]=new _r3(_c3._q3[_72]);
}_D3._F3=true;}_D3._K3=function(){return(_D3._F3==!0);};_D3.prototype._L3=function(_M3){this._H3=_M3;this._N3();};;_D3.prototype._O3=function(_Y2){_Y2=Math.max(_D3._G3,_Y2);_Y2=Math.min(_Y2,_D3._T2);this.freq=_Y2;this._N3();};;_D3.prototype._P3=function(_Q3){_Q3=Math.max(0.0,_Q3);_Q3=Math.min(_Q3,1.0);const _R3=_Q3-this._J3;this._J3=_Q3;this._I3+=_R3;while(this._I3>=1.0){this._I3-=1.0;}while(this._I3<0.0){this._I3+=1.0;}};;_D3.prototype._S3=function(_T3){_T3=Math.max(0,_T3);_T3=Math.min(_T3,_c3._d3._j3-1);
this.shape=_T3;};;_D3.prototype._v3=function(){const _U3=_D3._E3[this.shape]._v3(this._I3);this._I3+=this._t3;while(this._I3>=1.0){this._I3-=1.0;}return _U3;};;_D3.prototype._N3=function(){this._t3=this.freq/this._H3;};;class _V3 extends AudioWorkletProcessor{static _W3=5.0;static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"time",automationRate:"a-rate",defaultValue:0.2,minValue:0.0,maxValue:_V3._W3},{name:"feedback",automationRate:"a-rate",
defaultValue:0.5,minValue:0.0,maxValue:1.0},{name:"mix",automationRate:"a-rate",defaultValue:0.35,minValue:0.0,maxValue:1.0}];}constructor(_Y1){super();this._Z1();const __1=_Y1.outputChannelCount[0];const _X3=(_V3._W3*sampleRate)+1;this.buffer=new Array(__1);this._Y3=new Uint32Array(__1);for(let _62=0;_62<__1;++_62)this.buffer[_62]=new Float32Array(_X3);}process(_92,_a2,parameters){const input=_92[0];const output=_a2[0];const bypass=parameters.bypass;const time=parameters.time;const feedback=parameters.feedback;
const mix=parameters.mix;for(let _62=0;_62<input.length;++_62){const _b2=input[_62];const _c2=output[_62];for(let _d2=0;_d2<_b2.length;++_d2){_c2[_d2]=_b2[_d2];const _Z3=(time[_d2]!==undefined)?time[_d2]:time[0];const __3=this._v3(_62,_Z3);const _W2=(feedback[_d2]!==undefined)?feedback[_d2]:feedback[0];const _04=_b2[_d2]+(__3*_W2);this.write(_62,_04);const _g2=(bypass[_d2]!==undefined)?bypass[_d2]:bypass[0];if(_g2>0.0){continue;}const _h2=(mix[_d2]!==undefined)?mix[_d2]:mix[0];_c2[_d2]*=(1-_h2);_c2[_d2]+=(__3*_h2);
}}return this._i2;}_v3(_14,_24){const _34=_24*sampleRate;let _z3=(this._Y3[_14]-~~_34);let _A3=(_z3-1);while(_z3<0)_z3+=this.buffer[_14].length;while(_A3<0)_A3+=this.buffer[_14].length;const _44=_34-~~_34;const _B3=this.buffer[_14][_z3];const _C3=this.buffer[_14][_A3];return _B3+(_C3-_B3)*_44;}write(_14,_H1){++this._Y3[_14];this._Y3[_14]%=this.buffer[_14].length;this.buffer[_14][this._Y3[_14]]=_H1;}}registerProcessor("delay-processor",_V3);AudioWorkletProcessor.prototype._Z1=function(){this._i2=true;this.port.onmessage=(_54)=>{
if(_54.data==="kill")this._i2=false;};};;class _64 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1}];}constructor(){super();this._Z1();}process(_92,_a2,parameters){const input=_92[0];const bypass=parameters.bypass;for(let _62=0;_62<input.length;++_62){const _b2=input[_62];for(let _d2=0;_d2<_b2.length;++_d2){const _g2=(bypass[_d2]!==undefined)?bypass[_d2]:bypass[0];_a2[_g2][_62][_d2]=_b2[_d2];}}return this._i2;
}}class _74 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"gain",automationRate:"a-rate",defaultValue:1,minValue:0}];}constructor(){super();this._Z1();}process(_92,_a2,parameters){const _s2=_92[0];const _t2=_92[1];const output=_a2[0];const gain=parameters.gain;for(let _62=0;_62<_t2.length;++_62){const _b2=_t2[_62];const _c2=output[_62];for(let _d2=0;_d2<_b2.length;++_d2)_c2[_d2]=_b2[_d2];}for(let _62=0;_62<_s2.length;++_62){const _b2=_s2[_62];const _c2=output[_62];for(let _d2=0;_d2<_b2.length;
++_d2){const _X2=(gain[_d2]!==undefined)?gain[_d2]:gain[0];_c2[_d2]+=_b2[_d2]*_X2;}}return this._i2;}}registerProcessor("audio-bus-input",_64);registerProcessor("audio-bus-output",_74);class _84 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"gain",automationRate:"a-rate",defaultValue:1.0,minValue:0.0},{name:"factor",automationRate:"a-rate",defaultValue:20,minValue:1,maxValue:100},{name:"resolution",
automationRate:"a-rate",defaultValue:8,minValue:2,maxValue:16},{name:"mix",automationRate:"a-rate",defaultValue:0.8,minValue:0.0,maxValue:1.0}];}static _94=[undefined,undefined,2,4,8,16,32,64,128,256,512,1024,2048,4096,8192,16384,32768];constructor(_Y1){super();this._Z1();const __1=_Y1.outputChannelCount[0];this._a4=new Float32Array(__1);this._b4=new Uint32Array(__1);}process(_92,_a2,parameters){const input=_92[0];const output=_a2[0];const bypass=parameters.bypass;const gain=parameters.gain;const factor=parameters.factor;
const resolution=parameters.resolution;const mix=parameters.mix;for(let _62=0;_62<input.length;++_62){const _b2=input[_62];const _c2=output[_62];for(let _d2=0;_d2<_b2.length;++_d2){_c2[_d2]=_b2[_d2];if(this._b4[_62]===0)this._a4[_62]=_b2[_d2];const _W2=(factor[_d2]!==undefined)?factor[_d2]:factor[0];++this._b4[_62];this._b4[_62]%=_W2;const _g2=(bypass[_d2]!==undefined)?bypass[_d2]:bypass[0];if(_g2>0.0){continue;}let _f2=this._a4[_62];const _X2=(gain[_d2]!==undefined)?gain[_d2]:gain[0];_f2*=_X2;_f2=Math.max(Math.min(_f2,
1.0),-1.0);const _c4=(resolution[_d2]!==undefined)?resolution[_d2]:resolution[0];const max=(_f2>0.0)?_84._94[_c4]-1:_84._94[_c4];_f2=Math.round(_f2*max)/max;const _h2=(mix[_d2]!==undefined)?mix[_d2]:mix[0];_c2[_d2]*=(1.0-_h2);_c2[_d2]+=(_f2*_h2);}}return this._i2;}}registerProcessor("bitcrusher-processor",_84);class _d4 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"rate",automationRate:"a-rate",defaultValue:5.0,
minValue:0.0,maxValue:20.0},{name:"intensity",automationRate:"a-rate",defaultValue:1.0,minValue:0.0,maxValue:1.0},{name:"offset",automationRate:"a-rate",defaultValue:0.0,minValue:0.0,maxValue:1.0},{name:"shape",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:4}];}constructor(_Y1){super();this._Z1();const __1=_Y1.outputChannelCount[0];this._e4=new Array(__1).fill(1.0);this._f4=new Array(__1).fill(0.0);this._g4=new Array(__1).fill(_c3._d3._e3);this._h4=new Array(__1);for(let _62=0;_62<__1;++_62){
this._h4[_62]=new _D3();this._h4[_62]._L3(sampleRate);this._h4[_62]._O3(this._e4[_62]);this._h4[_62]._S3(this._g4[_62]);if(_62%2===1){this._h4[_62]._P3(this._f4[_62]);}}}process(_92,_a2,parameters){const input=_92[0];const output=_a2[0];const bypass=parameters.bypass;const rate=parameters.rate;const intensity=parameters.intensity;const offset=parameters.offset;const shape=parameters.shape;for(let _62=0;_62<input.length;++_62){const _b2=input[_62];const _c2=output[_62];for(let _d2=0;_d2<_b2.length;++_d2){_c2[_d2]=_b2[_d2];
const _c4=(rate[_d2]!==undefined)?rate[_d2]:rate[0];const _i4=(offset[_d2]!==undefined)?offset[_d2]:offset[0];const _j4=(shape[_d2]!==undefined)?shape[_d2]:shape[0];this._k4(_62,_c4,_i4,_j4);const _l4=this._h4[_62]._v3();const _g2=(bypass[_d2]!==undefined)?bypass[_d2]:bypass[0];if(_g2>0.0){continue;}const _72=(intensity[_d2]!==undefined)?intensity[_d2]:intensity[0];const out=_b2[_d2]*_l4*_72;_c2[_d2]*=(1.0-_72);_c2[_d2]+=out;}}return this._i2;}_k4(_14,_m4,_Q3,_T3){if(_m4!==this._e4[_14]){this._h4[_14]._O3(_m4);
this._e4[_14]=_m4;}if(_Q3!==this._f4[_14]){if(_14%2===1){this._h4[_14]._P3(_Q3);}this._f4[_14]=_Q3;}if(_T3!==this._g4[_14]){this._h4[_14]._S3(_T3);this._g4[_14]=_T3;}}}registerProcessor("tremolo-processor",_d4);class _n4{constructor(_24=1e-3){this.setTime(_24);}setTime(_24){this._o4=Math.exp(-1/(_24*sampleRate));}process(_p4,_q4){return _p4+this._o4*(_q4-_p4);}}class _r4{constructor(_s4,_t4){this._u4=new _n4(_s4);this._v4=new _n4(_t4);this._w4=_s4;this._x4=_t4;}_y4(_24){if(_24===this._w4)return;this._u4.setTime(_24);
this._w4=_24;}_z4(_24){if(_24===this._x4)return;this._v4.setTime(_24);this._x4=_24;}process(_p4,_q4){if(_p4>_q4)return this._u4.process(_p4,_q4);else return this._v4.process(_p4,_q4);}}class _A4 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"ingain",automationRate:"a-rate",defaultValue:1,minValue:0},{name:"threshold",automationRate:"a-rate",defaultValue:0.125,minValue:1e-3,maxValue:1},{name:"ratio",
automationRate:"a-rate",defaultValue:4,minValue:1},{name:"attack",automationRate:"a-rate",defaultValue:0.05,minValue:1e-3,maxValue:1e-1},{name:"release",automationRate:"a-rate",defaultValue:0.25,minValue:1e-2,maxValue:1},{name:"outgain",automationRate:"a-rate",defaultValue:1,minValue:0}];}constructor(_B4){super();this._Z1();const _u4=_A4.parameterDescriptors.find(_C4=>_C4.name==="attack");const _v4=_A4.parameterDescriptors.find(_C4=>_C4.name==="release");this._D4=new _r4(_u4.defaultValue,_v4.defaultValue);
this._E4=0;}process(_F4,_G4,_H4){const input=_F4[0];const output=_G4[0];const bypass=_H4.bypass;const ingain=_H4.ingain;const outgain=_H4.outgain;const threshold=_H4.threshold;const ratio=_H4.ratio;const attack=_H4.attack;const release=_H4.release;if(input.length===0)return this._i2;for(let _d2=0;_d2<input[0].length;++_d2){let _I4=input.map(_J4=>_J4[_d2]);output.forEach((_J4,_K4)=>{_J4[_d2]=_I4[_K4];});const _L4=(ingain[_d2]!==undefined)?ingain[_d2]:ingain[0];_I4=_I4.map(_M4=>_M4*=_L4);const rect=_I4.map(_M4=>Math.abs(_M4));
const max=Math.max(...rect);const _N4=_O4(max);const _Z3=(threshold[_d2]!==undefined)?threshold[_d2]:threshold[0];const _P4=_O4(_Z3);const _Q4=Math.max(0,_N4-_P4);const _u4=(attack[_d2]!==undefined)?attack[_d2]:attack[0];const _v4=(release[_d2]!==undefined)?release[_d2]:release[0];this._D4._y4(_u4);this._D4._z4(_v4);this._E4=this._D4.process(_Q4,this._E4);const _g2=(bypass[_d2]!==undefined)?bypass[_d2]:bypass[0];if(_g2>0)continue;const _c4=(ratio[_d2]!==undefined)?ratio[_d2]:ratio[0];const _R4=(this._E4/_c4)-this._E4;
const _X2=_S4(_R4);_I4=_I4.map(_M4=>_M4*=_X2);const _T4=(outgain[_d2]!==undefined)?outgain[_d2]:outgain[0];_I4=_I4.map(_M4=>_M4*=_T4);output.forEach((_J4,_K4)=>{_J4[_d2]=_I4[_K4];});}return this._i2;}}function _O4(_U4){return 20*Math.log10(_U4);}function _S4(_U4){return Math.pow(10,_U4/20);}registerProcessor("compressor-processor",_A4);class _V4 extends AudioWorkletProcessor{static get parameterDescriptors(){const _T2=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,
minValue:0,maxValue:1},{name:"freq",automationRate:"a-rate",defaultValue:Math.min(500.0,_T2),minValue:10.0,maxValue:_T2},{name:"q",automationRate:"a-rate",defaultValue:1.0,minValue:1.0,maxValue:100.0},{name:"gain",automationRate:"a-rate",defaultValue:1e-2,minValue:1e-6}];}constructor(_Y1){super();this._Z1();const __1=_Y1.outputChannelCount[0];this._y2=0;this._z2=0;this._A2=0;this._B2=0;this._C2=0;this._D2=new Float32Array(__1);this._E2=new Float32Array(__1);this._F2=new Float32Array(__1);this._G2=new Float32Array(__1);
this._U2=-1;this._I2=-1;this._V2=-1;}process(_92,_a2,parameters){const input=_92[0];const output=_a2[0];const bypass=parameters.bypass;const freq=parameters.freq;const q=parameters.q;const gain=parameters.gain;const _J2=(freq.length===1&&q.length===1&&gain.length===1);if(_J2)this._K2(freq[0],q[0],gain[0]);for(let _62=0;_62<input.length;++_62){const _b2=input[_62];const _c2=output[_62];for(let _d2=0;_d2<_b2.length;++_d2){if(_J2===!1){const _W2=(freq[_d2]!==undefined)?freq[_d2]:freq[0];const _L2=(q[_d2]!==undefined)?q[_d2]:q[0];
const _X2=(gain[_d2]!==undefined)?gain[_d2]:gain[0];this._K2(_W2,_L2,_X2);}const _M2=this._A2*_b2[_d2]+this._B2*this._D2[_62]+this._C2*this._E2[_62]-this._y2*this._F2[_62]-this._z2*this._G2[_62];this._E2[_62]=this._D2[_62];this._D2[_62]=_b2[_d2];this._G2[_62]=this._F2[_62];this._F2[_62]=_M2;const _g2=(bypass[_d2]!==undefined)?bypass[_d2]:bypass[0];_c2[_d2]=(_g2>0)?_b2[_d2]:_M2;}}return this._i2;}_K2(_Y2,_O2,_Z2){if(_Y2===this._U2&&_O2===this._I2&&_Z2===this._V2)return;const _P2=2*Math.PI*_Y2/sampleRate;
const _Q2=Math.cos(_P2);const __2=Math.sqrt(_Z2);const _53=__2+1;const _63=__2-1;const _73=_53*_Q2;const _83=_63*_Q2;const _93=_53-_83;const _a3=_53+_83;const alpha=Math.sin(_P2)/(2*_O2);const _b3=(2*Math.sqrt(__2)*alpha);const _R2=_a3+_b3;const _y2=-2*(_63+_73);const _z2=_a3-_b3;const _A2=__2*(_93+_b3);const _B2=2*__2*(_63-_73);const _C2=__2*(_93-_b3);this._y2=_y2/_R2;this._z2=_z2/_R2;this._A2=_A2/_R2;this._B2=_B2/_R2;this._C2=_C2/_R2;this._U2=_Y2;this._I2=_O2;this._V2=_Z2;}}registerProcessor("lo-shelf-processor",
_V4);