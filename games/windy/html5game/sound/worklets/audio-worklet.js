class __1{constructor(_02){this._12=0;this._22=0;this.feedback=0;this._32=0;this.buffer=new Float32Array(_02);this._42=0;}process(_52){const out=this.buffer[this._42];this._32=(this._32*this._12)+(out*this._22);this.buffer[this._42]=_52+(this._32*this.feedback);++this._42;this._42%=this.buffer.length;return out;}_62(_72){this.feedback=Math.min(Math.max(0,_72),1);}_82(_92){this._12=Math.min(Math.max(0,_92),1);this._22=1-this._12;}}class _a2{constructor(_02){this.feedback=0;this.buffer=new Float32Array(_02);
this._42=0;}process(_52){const out=this.buffer[this._42];this.buffer[this._42]=_52+(out*this.feedback);++this._42;this._42%=this.buffer.length;return(out-_52);}_62(_72){this.feedback=Math.min(Math.max(0,_72),1);}}class _b2 extends AudioWorkletProcessor{static _c2=8;static _d2=4;static _e2=0.015;static _f2=0.4;static _g2=0.28;static _h2=0.7;static _i2=[1116,1188,1277,1356,1422,1491,1557,1617];static _j2=[1139,1211,1300,1379,1445,1514,1580,1640];static _k2=[556,441,341,225];static _l2=[579,464,364,248];static get parameterDescriptors(){
return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"size",automationRate:"a-rate",defaultValue:0.7,minValue:0.0,maxValue:1.0},{name:"damp",automationRate:"a-rate",defaultValue:0.1,minValue:0.0,maxValue:1.0},{name:"mix",automationRate:"a-rate",defaultValue:0.35,minValue:0.0,maxValue:1.0}];}constructor(_m2){super();this._n2();const _o2=_m2.outputChannelCount[0];this._p2=-1;this._q2=-1;this._r2=new Array(_o2);this._s2=new Array(_o2);const _t2=[_b2._i2,_b2._j2];const _u2=[_b2._k2,
_b2._l2];for(let _v2=0;_v2<_o2;++_v2){this._r2[_v2]=new Array(_b2._c2);this._s2[_v2]=new Array(_b2._d2);for(let _w2=0;_w2<_b2._c2;++_w2)this._r2[_v2][_w2]=new __1(_t2[_v2%_t2.length][_w2]);for(let _w2=0;_w2<_b2._d2;++_w2)this._s2[_v2][_w2]=new _a2(_u2[_v2%_u2.length][_w2]);}this._x2(0.5);this._82(0.5);for(let _v2=0;_v2<_o2;++_v2)for(let _w2=0;_w2<_b2._d2;++_w2)this._s2[_v2][_w2]._62(0.5);}process(_y2,_z2,parameters){const input=_y2[0];const output=_z2[0];const bypass=parameters.bypass;const size=parameters.size;
const damp=parameters.damp;const mix=parameters.mix;for(let _v2=0;_v2<input.length;++_v2){const _A2=input[_v2];const _B2=output[_v2];for(let _C2=0;_C2<_A2.length;++_C2){const _C2=(size[_C2]!==undefined)?size[_C2]:size[0];const _D2=(damp[_C2]!==undefined)?damp[_C2]:damp[0];this._x2(_C2);this._82(_D2);_B2[_C2]=_A2[_C2];let out=0;const _E2=_A2[_C2]*_b2._e2;for(let _w2=0;_w2<_b2._c2;++_w2)out+=this._r2[_v2][_w2].process(_E2);for(let _w2=0;_w2<_b2._d2;++_w2)out=this._s2[_v2][_w2].process(out);const _F2=(bypass[_C2]!==undefined)?bypass[_C2]:bypass[0];
if(_F2>0.0){continue;}const _G2=(mix[_C2]!==undefined)?mix[_C2]:mix[0];_B2[_C2]*=(1-_G2);_B2[_C2]+=(out*_G2);}}return this._H2;}_x2(_02){if(_02===this._p2)return;const size=(_02*_b2._g2)+_b2._h2;for(let _v2=0;_v2<this._r2.length;++_v2)for(let _w2=0;_w2<_b2._c2;++_w2)this._r2[_v2][_w2]._62(size);this._p2=_02;}_82(_92){if(_92===this._q2)return;const damp=_92*_b2._f2;for(let _v2=0;_v2<this._r2.length;++_v2)for(let _w2=0;_w2<_b2._c2;++_w2)this._r2[_v2][_w2]._82(damp);this._q2=_92;}}registerProcessor("reverb1-processor",
_b2);class _I2 extends AudioWorkletProcessor{static get parameterDescriptors(){return [];}constructor(){super();this._n2();}process(_J2,_K2,_L2){const input=_J2[0];const _M2=_K2[0];const _N2=_K2[1];for(let _v2=0;_v2<input.length;++_v2){const _A2=input[_v2];const _O2=_M2[_v2];const _P2=_N2[_v2];for(let _C2=0;_C2<_A2.length;++_C2){_O2[_C2]=_A2[_C2];_P2[_C2]=_A2[_C2];}}return this._H2;}}class _Q2 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,
minValue:0,maxValue:1}];}constructor(){super();this._n2();}process(_J2,_K2,_L2){const _R2=_J2[0];const _S2=_J2[1];const output=_K2[0];const bypass=_L2.bypass;for(let _v2=0;_v2<_S2.length;++_v2){const _T2=_R2[_v2];const _U2=_S2[_v2];const _B2=output[_v2];for(let _C2=0;_C2<_T2.length;++_C2){const _F2=(bypass[_C2]!==undefined)?bypass[_C2]:bypass[0];if(_F2>0){_B2[_C2]=_U2[_C2];}else {_B2[_C2]=_T2[_C2];}}}return this._H2;}}registerProcessor("eq-input",_I2);registerProcessor("eq-output",_Q2);class _V2 extends AudioWorkletProcessor{
static get parameterDescriptors(){const _W2=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"cutoff",automationRate:"a-rate",defaultValue:Math.min(500.0,_W2),minValue:10.0,maxValue:_W2},{name:"q",automationRate:"a-rate",defaultValue:1.5,minValue:1.0,maxValue:100.0}];}constructor(_m2){super();this._n2();const _o2=_m2.outputChannelCount[0];this._X2=0;this._Y2=0;this._Z2=0;this.__2=0;this._03=0;this._13=new Float32Array(_o2);this._23=new Float32Array(_o2);
this._33=new Float32Array(_o2);this._43=new Float32Array(_o2);this._53=-1;this._63=-1;}process(_y2,_z2,parameters){const input=_y2[0];const output=_z2[0];const bypass=parameters.bypass;const cutoff=parameters.cutoff;const q=parameters.q;const _73=(cutoff.length===1&&q.length===1);if(_73)this._83(cutoff[0],q[0]);for(let _v2=0;_v2<input.length;++_v2){const _A2=input[_v2];const _B2=output[_v2];for(let _C2=0;_C2<_A2.length;++_C2){if(_73===!1){const _v2=(cutoff[_C2]!==undefined)?cutoff[_C2]:cutoff[0];const _93=(q[_C2]!==undefined)?q[_C2]:q[0];
this._83(_v2,_93);}const _a3=this._Z2*_A2[_C2]+this.__2*this._13[_v2]+this._03*this._23[_v2]-this._X2*this._33[_v2]-this._Y2*this._43[_v2];this._23[_v2]=this._13[_v2];this._13[_v2]=_A2[_C2];this._43[_v2]=this._33[_v2];this._33[_v2]=_a3;const _F2=(bypass[_C2]!==undefined)?bypass[_C2]:bypass[0];_B2[_C2]=(_F2>0)?_A2[_C2]:_a3;}}return this._H2;}_83(_b3,_c3){if(_b3===this._53&&_c3===this._63)return;const _d3=2*Math.PI*_b3/sampleRate;const alpha=Math.sin(_d3)/(2*_c3);const _e3=Math.cos(_d3);const _f3=1+alpha;
const _X2=-2*_e3;const _Y2=1-alpha;const _Z2=(1-_e3)/2;const __2=1-_e3;const _03=(1-_e3)/2;this._X2=_X2/_f3;this._Y2=_Y2/_f3;this._Z2=_Z2/_f3;this.__2=__2/_f3;this._03=_03/_f3;this._53=_b3;this._63=_c3;}}registerProcessor("lpf2-processor",_V2);class _g3 extends AudioWorkletProcessor{static get parameterDescriptors(){const _h3=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"freq",automationRate:"a-rate",defaultValue:Math.min(1500.0,
_h3),minValue:10.0,maxValue:_h3},{name:"q",automationRate:"a-rate",defaultValue:1.0,minValue:1.0,maxValue:100.0},{name:"gain",automationRate:"a-rate",defaultValue:1e-2,minValue:1e-6}];}constructor(_m2){super();this._n2();const _o2=_m2.outputChannelCount[0];this._X2=0;this._Y2=0;this._Z2=0;this.__2=0;this._03=0;this._13=new Float32Array(_o2);this._23=new Float32Array(_o2);this._33=new Float32Array(_o2);this._43=new Float32Array(_o2);this._i3=-1;this._63=-1;this._j3=-1;}process(_y2,_z2,parameters){const input=_y2[0];
const output=_z2[0];const bypass=parameters.bypass;const freq=parameters.freq;const q=parameters.q;const gain=parameters.gain;const _73=(freq.length===1&&q.length===1&&gain.length===1);if(_73)this._83(freq[0],q[0],gain[0]);for(let _v2=0;_v2<input.length;++_v2){const _A2=input[_v2];const _B2=output[_v2];for(let _C2=0;_C2<_A2.length;++_C2){if(_73===!1){const _k3=(freq[_C2]!==undefined)?freq[_C2]:freq[0];const _93=(q[_C2]!==undefined)?q[_C2]:q[0];const _l3=(gain[_C2]!==undefined)?gain[_C2]:gain[0];this._83(_k3,
_93,_l3);}const _a3=this._Z2*_A2[_C2]+this.__2*this._13[_v2]+this._03*this._23[_v2]-this._X2*this._33[_v2]-this._Y2*this._43[_v2];this._23[_v2]=this._13[_v2];this._13[_v2]=_A2[_C2];this._43[_v2]=this._33[_v2];this._33[_v2]=_a3;const _F2=(bypass[_C2]!==undefined)?bypass[_C2]:bypass[0];_B2[_C2]=(_F2>0)?_A2[_C2]:_a3;}}return this._H2;}_83(_m3,_c3,_n3){if(_m3===this._i3&&_c3===this._63&&_n3===this._j3)return;const _d3=2*Math.PI*_m3/sampleRate;const _e3=Math.cos(_d3);const _o3=Math.sqrt(_n3);const alpha=Math.sin(_d3)/(2*_c3);
const _p3=alpha/_o3;const _q3=alpha*_o3;const _f3=1+_p3;const _X2=-2*_e3;const _Y2=1-_p3;const _Z2=1+_q3;const __2=_X2;const _03=1-_q3;this._X2=_X2/_f3;this._Y2=_Y2/_f3;this._Z2=_Z2/_f3;this.__2=__2/_f3;this._03=_03/_f3;this._i3=_m3;this._63=_c3;this._j3=_n3;}}registerProcessor("peak-eq-processor",_g3);class _r3 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"gain",automationRate:"a-rate",defaultValue:0.5,
minValue:0.0}];}constructor(){super();this._n2();}process(_y2,_z2,parameters){const input=_y2[0];const output=_z2[0];const bypass=parameters.bypass;const gain=parameters.gain;for(let _v2=0;_v2<input.length;++_v2){const _A2=input[_v2];const _B2=output[_v2];for(let _C2=0;_C2<_A2.length;++_C2){_B2[_C2]=_A2[_C2];const _F2=(bypass[_C2]!==undefined)?bypass[_C2]:bypass[0];if(_F2>0.0){continue;}const _l3=(gain[_C2]!==undefined)?gain[_C2]:gain[0];_B2[_C2]*=_l3;}}return this._H2;}}registerProcessor("gain-processor",
_r3);class _s3 extends AudioWorkletProcessor{static get parameterDescriptors(){const _W2=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"cutoff",automationRate:"a-rate",defaultValue:Math.min(1500.0,_W2),minValue:10.0,maxValue:_W2},{name:"q",automationRate:"a-rate",defaultValue:1.5,minValue:1.0,maxValue:100.0}];}constructor(_m2){super();this._n2();const _o2=_m2.outputChannelCount[0];this._X2=0;this._Y2=0;this._Z2=0;this.__2=0;this._03=0;
this._13=new Float32Array(_o2);this._23=new Float32Array(_o2);this._33=new Float32Array(_o2);this._43=new Float32Array(_o2);this._53=-1;this._63=-1;}process(_y2,_z2,parameters){const input=_y2[0];const output=_z2[0];const bypass=parameters.bypass;const cutoff=parameters.cutoff;const q=parameters.q;const _73=(cutoff.length===1&&q.length===1);if(_73)this._83(cutoff[0],q[0]);for(let _v2=0;_v2<input.length;++_v2){const _A2=input[_v2];const _B2=output[_v2];for(let _C2=0;_C2<_A2.length;++_C2){if(_73===!1){const _v2=(cutoff[_C2]!==undefined)?cutoff[_C2]:cutoff[0];
const _93=(q[_C2]!==undefined)?q[_C2]:q[0];this._83(_v2,_93);}const _a3=this._Z2*_A2[_C2]+this.__2*this._13[_v2]+this._03*this._23[_v2]-this._X2*this._33[_v2]-this._Y2*this._43[_v2];this._23[_v2]=this._13[_v2];this._13[_v2]=_A2[_C2];this._43[_v2]=this._33[_v2];this._33[_v2]=_a3;const _F2=(bypass[_C2]!==undefined)?bypass[_C2]:bypass[0];_B2[_C2]=(_F2>0)?_A2[_C2]:_a3;}}return this._H2;}_83(_b3,_c3){if(_b3===this._53&&_c3===this._63)return;const _d3=2*Math.PI*_b3/sampleRate;const alpha=Math.sin(_d3)/(2*_c3);
const _e3=Math.cos(_d3);const _f3=1+alpha;const _X2=-2*_e3;const _Y2=1-alpha;const _Z2=(1+_e3)/2;const __2=-1-_e3;const _03=(1+_e3)/2;this._X2=_X2/_f3;this._Y2=_Y2/_f3;this._Z2=_Z2/_f3;this.__2=__2/_f3;this._03=_03/_f3;this._53=_b3;this._63=_c3;}}registerProcessor("hpf2-processor",_s3);class _t3 extends AudioWorkletProcessor{static get parameterDescriptors(){const _h3=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"freq",automationRate:"a-rate",
defaultValue:Math.min(5000.0,_h3),minValue:10.0,maxValue:_h3},{name:"q",automationRate:"a-rate",defaultValue:1.0,minValue:1.0,maxValue:100.0},{name:"gain",automationRate:"a-rate",defaultValue:1e-2,minValue:1e-6}];}constructor(_m2){super();this._n2();const _o2=_m2.outputChannelCount[0];this._X2=0;this._Y2=0;this._Z2=0;this.__2=0;this._03=0;this._13=new Float32Array(_o2);this._23=new Float32Array(_o2);this._33=new Float32Array(_o2);this._43=new Float32Array(_o2);this._i3=-1;this._63=-1;this._j3=-1;}process(_y2,
_z2,parameters){const input=_y2[0];const output=_z2[0];const bypass=parameters.bypass;const freq=parameters.freq;const q=parameters.q;const gain=parameters.gain;const _73=(freq.length===1&&q.length===1&&gain.length===1);if(_73)this._83(freq[0],q[0],gain[0]);for(let _v2=0;_v2<input.length;++_v2){const _A2=input[_v2];const _B2=output[_v2];for(let _C2=0;_C2<_A2.length;++_C2){if(_73===!1){const _k3=(freq[_C2]!==undefined)?freq[_C2]:freq[0];const _93=(q[_C2]!==undefined)?q[_C2]:q[0];const _l3=(gain[_C2]!==undefined)?gain[_C2]:gain[0];
this._83(_k3,_93,_l3);}const _a3=this._Z2*_A2[_C2]+this.__2*this._13[_v2]+this._03*this._23[_v2]-this._X2*this._33[_v2]-this._Y2*this._43[_v2];this._23[_v2]=this._13[_v2];this._13[_v2]=_A2[_C2];this._43[_v2]=this._33[_v2];this._33[_v2]=_a3;const _F2=(bypass[_C2]!==undefined)?bypass[_C2]:bypass[0];_B2[_C2]=(_F2>0)?_A2[_C2]:_a3;}}return this._H2;}_83(_m3,_c3,_n3){if(_m3===this._i3&&_c3===this._63&&_n3===this._j3)return;const _d3=2*Math.PI*_m3/sampleRate;const _e3=Math.cos(_d3);const _o3=Math.sqrt(_n3);const _u3=_o3+1;
const _v3=_o3-1;const _w3=_u3*_e3;const _x3=_v3*_e3;const _y3=_u3-_x3;const _z3=_u3+_x3;const alpha=Math.sin(_d3)/(2*_c3);const _A3=(2*Math.sqrt(_o3)*alpha);const _f3=_y3+_A3;const _X2=2*(_v3-_w3);const _Y2=_y3-_A3;const _Z2=_o3*(_z3+_A3);const __2=-2*_o3*(_v3+_w3);const _03=_o3*(_z3-_A3);this._X2=_X2/_f3;this._Y2=_Y2/_f3;this._Z2=_Z2/_f3;this.__2=__2/_f3;this._03=_03/_f3;this._i3=_m3;this._63=_c3;this._j3=_n3;}}registerProcessor("hi-shelf-processor",_t3);function _B3(){}_B3._C3={_D3:0,_E3:1,_F3:2,_G3:3,_H3:4,
_I3:5};_B3._J3=function(_K3){return 1.0-_K3;};_B3._L3=function(_K3){return _K3;};_B3._M3=function(_K3){return 0.5*(Math.sin((_K3*2.0*Math.PI)-(Math.PI/2.0))+1.0);};_B3._N3=function(_K3){if(_K3<0.5){return 0.0;}return 1.0;};_B3._O3=function(_K3){if(_K3<0.5){return 2.0*_K3;}return 2.0-(2.0*_K3);};_B3._P3=[_B3._J3,_B3._L3,_B3._M3,_B3._N3,_B3._O3];_Q3._R3=512;_Q3._S3=1.0/_Q3._R3;function _Q3(_T3){this.data=new Float32Array(_Q3._R3);for(let _w2=0;_w2<_Q3._R3;++_w2){this.data[_w2]=_T3(_w2*_Q3._S3);}}_Q3.prototype._U3=function(_K3){
_K3=Math.max(0.0,_K3);_K3=Math.min(_K3,1.0);const _V3=_K3*_Q3._R3;const _W3=~~_V3;const _X3=_V3-_W3;let _Y3=_W3;let _Z3=_Y3+1;if(_Y3>=_Q3._R3){_Y3-=_Q3._R3;}if(_Z3>=_Q3._R3){_Z3-=_Q3._R3;}const __3=this.data[_Y3];const _04=this.data[_Z3];return __3+(_04-__3)*_X3;};;_14._24=[];_14._34=!1;_14._44=0.0;_14._h3=20.0;function _14(){this._54=48000;this.shape=_B3._C3._F3;this.freq=1.0;this._64=0.0;this._S3=0.0;this._74=0.0;if(_14._34==true){return;}for(let _w2=0;_w2<_B3._C3._I3;++_w2){_14._24[_w2]=new _Q3(_B3._P3[_w2]);
}_14._34=true;}_14._84=function(){return(_14._34==!0);};_14.prototype._94=function(_a4){this._54=_a4;this._b4();};;_14.prototype._c4=function(_m3){_m3=Math.max(_14._44,_m3);_m3=Math.min(_m3,_14._h3);this.freq=_m3;this._b4();};;_14.prototype._d4=function(_e4){_e4=Math.max(0.0,_e4);_e4=Math.min(_e4,1.0);const _f4=_e4-this._74;this._74=_e4;this._64+=_f4;while(this._64>=1.0){this._64-=1.0;}while(this._64<0.0){this._64+=1.0;}};;_14.prototype._g4=function(_h4){_h4=Math.max(0,_h4);_h4=Math.min(_h4,_B3._C3._I3-1);
this.shape=_h4;};;_14.prototype._U3=function(){const _i4=_14._24[this.shape]._U3(this._64);this._64+=this._S3;while(this._64>=1.0){this._64-=1.0;}return _i4;};;_14.prototype._b4=function(){this._S3=this.freq/this._54;};;class _j4 extends AudioWorkletProcessor{static _k4=5.0;static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"time",automationRate:"a-rate",defaultValue:0.2,minValue:0.0,maxValue:_j4._k4},{name:"feedback",automationRate:"a-rate",
defaultValue:0.5,minValue:0.0,maxValue:1.0},{name:"mix",automationRate:"a-rate",defaultValue:0.35,minValue:0.0,maxValue:1.0}];}constructor(_m2){super();this._n2();const _o2=_m2.outputChannelCount[0];const _l4=(_j4._k4*sampleRate)+1;this.buffer=new Array(_o2);this._m4=new Uint32Array(_o2);for(let _v2=0;_v2<_o2;++_v2)this.buffer[_v2]=new Float32Array(_l4);}process(_y2,_z2,parameters){const input=_y2[0];const output=_z2[0];const bypass=parameters.bypass;const time=parameters.time;const feedback=parameters.feedback;
const mix=parameters.mix;for(let _v2=0;_v2<input.length;++_v2){const _A2=input[_v2];const _B2=output[_v2];for(let _C2=0;_C2<_A2.length;++_C2){_B2[_C2]=_A2[_C2];const _n4=(time[_C2]!==undefined)?time[_C2]:time[0];const _o4=this._U3(_v2,_n4);const _k3=(feedback[_C2]!==undefined)?feedback[_C2]:feedback[0];const _p4=_A2[_C2]+(_o4*_k3);this.write(_v2,_p4);const _F2=(bypass[_C2]!==undefined)?bypass[_C2]:bypass[0];if(_F2>0.0){continue;}const _G2=(mix[_C2]!==undefined)?mix[_C2]:mix[0];_B2[_C2]*=(1-_G2);_B2[_C2]+=(_o4*_G2);
}}return this._H2;}_U3(_q4,_r4){const _s4=_r4*sampleRate;let _Y3=(this._m4[_q4]-~~_s4);let _Z3=(_Y3-1);while(_Y3<0)_Y3+=this.buffer[_q4].length;while(_Z3<0)_Z3+=this.buffer[_q4].length;const _t4=_s4-~~_s4;const __3=this.buffer[_q4][_Y3];const _04=this.buffer[_q4][_Z3];return __3+(_04-__3)*_t4;}write(_q4,_52){++this._m4[_q4];this._m4[_q4]%=this.buffer[_q4].length;this.buffer[_q4][this._m4[_q4]]=_52;}}registerProcessor("delay-processor",_j4);AudioWorkletProcessor.prototype._n2=function(){this._H2=true;this.port.onmessage=(_u4)=>{
if(_u4.data==="kill")this._H2=false;};};;class _v4 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1}];}constructor(){super();this._n2();}process(_y2,_z2,parameters){const input=_y2[0];const bypass=parameters.bypass;for(let _v2=0;_v2<input.length;++_v2){const _A2=input[_v2];for(let _C2=0;_C2<_A2.length;++_C2){const _F2=(bypass[_C2]!==undefined)?bypass[_C2]:bypass[0];_z2[_F2][_v2][_C2]=_A2[_C2];}}return this._H2;
}}class _w4 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"gain",automationRate:"a-rate",defaultValue:1,minValue:0}];}constructor(){super();this._n2();}process(_y2,_z2,parameters){const _R2=_y2[0];const _S2=_y2[1];const output=_z2[0];const gain=parameters.gain;for(let _v2=0;_v2<_S2.length;++_v2){const _A2=_S2[_v2];const _B2=output[_v2];for(let _C2=0;_C2<_A2.length;++_C2)_B2[_C2]=_A2[_C2];}for(let _v2=0;_v2<_R2.length;++_v2){const _A2=_R2[_v2];const _B2=output[_v2];for(let _C2=0;_C2<_A2.length;
++_C2){const _l3=(gain[_C2]!==undefined)?gain[_C2]:gain[0];_B2[_C2]+=_A2[_C2]*_l3;}}return this._H2;}}registerProcessor("audio-bus-input",_v4);registerProcessor("audio-bus-output",_w4);class _x4 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"gain",automationRate:"a-rate",defaultValue:1.0,minValue:0.0},{name:"factor",automationRate:"a-rate",defaultValue:20,minValue:1,maxValue:100},{name:"resolution",
automationRate:"a-rate",defaultValue:8,minValue:2,maxValue:16},{name:"mix",automationRate:"a-rate",defaultValue:0.8,minValue:0.0,maxValue:1.0}];}static _y4=[undefined,undefined,2,4,8,16,32,64,128,256,512,1024,2048,4096,8192,16384,32768];constructor(_m2){super();this._n2();const _o2=_m2.outputChannelCount[0];this._z4=new Float32Array(_o2);this._A4=new Uint32Array(_o2);}process(_y2,_z2,parameters){const input=_y2[0];const output=_z2[0];const bypass=parameters.bypass;const gain=parameters.gain;const factor=parameters.factor;
const resolution=parameters.resolution;const mix=parameters.mix;for(let _v2=0;_v2<input.length;++_v2){const _A2=input[_v2];const _B2=output[_v2];for(let _C2=0;_C2<_A2.length;++_C2){_B2[_C2]=_A2[_C2];if(this._A4[_v2]===0)this._z4[_v2]=_A2[_C2];const _k3=(factor[_C2]!==undefined)?factor[_C2]:factor[0];++this._A4[_v2];this._A4[_v2]%=_k3;const _F2=(bypass[_C2]!==undefined)?bypass[_C2]:bypass[0];if(_F2>0.0){continue;}let _E2=this._z4[_v2];const _l3=(gain[_C2]!==undefined)?gain[_C2]:gain[0];_E2*=_l3;_E2=Math.max(Math.min(_E2,
1.0),-1.0);const _B4=(resolution[_C2]!==undefined)?resolution[_C2]:resolution[0];const max=(_E2>0.0)?_x4._y4[_B4]-1:_x4._y4[_B4];_E2=Math.round(_E2*max)/max;const _G2=(mix[_C2]!==undefined)?mix[_C2]:mix[0];_B2[_C2]*=(1.0-_G2);_B2[_C2]+=(_E2*_G2);}}return this._H2;}}registerProcessor("bitcrusher-processor",_x4);class _C4 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"rate",automationRate:"a-rate",defaultValue:5.0,
minValue:0.0,maxValue:20.0},{name:"intensity",automationRate:"a-rate",defaultValue:1.0,minValue:0.0,maxValue:1.0},{name:"offset",automationRate:"a-rate",defaultValue:0.0,minValue:0.0,maxValue:1.0},{name:"shape",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:4}];}constructor(_m2){super();this._n2();const _o2=_m2.outputChannelCount[0];this._D4=new Array(_o2).fill(1.0);this._E4=new Array(_o2).fill(0.0);this._F4=new Array(_o2).fill(_B3._C3._D3);this._G4=new Array(_o2);for(let _v2=0;_v2<_o2;++_v2){
this._G4[_v2]=new _14();this._G4[_v2]._94(sampleRate);this._G4[_v2]._c4(this._D4[_v2]);this._G4[_v2]._g4(this._F4[_v2]);if(_v2%2===1){this._G4[_v2]._d4(this._E4[_v2]);}}}process(_y2,_z2,parameters){const input=_y2[0];const output=_z2[0];const bypass=parameters.bypass;const rate=parameters.rate;const intensity=parameters.intensity;const offset=parameters.offset;const shape=parameters.shape;for(let _v2=0;_v2<input.length;++_v2){const _A2=input[_v2];const _B2=output[_v2];for(let _C2=0;_C2<_A2.length;++_C2){_B2[_C2]=_A2[_C2];
const _B4=(rate[_C2]!==undefined)?rate[_C2]:rate[0];const _H4=(offset[_C2]!==undefined)?offset[_C2]:offset[0];const _I4=(shape[_C2]!==undefined)?shape[_C2]:shape[0];this._J4(_v2,_B4,_H4,_I4);const _K4=this._G4[_v2]._U3();const _F2=(bypass[_C2]!==undefined)?bypass[_C2]:bypass[0];if(_F2>0.0){continue;}const _w2=(intensity[_C2]!==undefined)?intensity[_C2]:intensity[0];const out=_A2[_C2]*_K4*_w2;_B2[_C2]*=(1.0-_w2);_B2[_C2]+=out;}}return this._H2;}_J4(_q4,_L4,_e4,_h4){if(_L4!==this._D4[_q4]){this._G4[_q4]._c4(_L4);
this._D4[_q4]=_L4;}if(_e4!==this._E4[_q4]){if(_q4%2===1){this._G4[_q4]._d4(_e4);}this._E4[_q4]=_e4;}if(_h4!==this._F4[_q4]){this._G4[_q4]._g4(_h4);this._F4[_q4]=_h4;}}}registerProcessor("tremolo-processor",_C4);class _M4{constructor(_r4=1e-3){this.setTime(_r4);}setTime(_r4){this._N4=Math.exp(-1/(_r4*sampleRate));}process(_O4,_P4){return _O4+this._N4*(_P4-_O4);}}class _Q4{constructor(_R4,_S4){this._T4=new _M4(_R4);this._U4=new _M4(_S4);this._V4=_R4;this._W4=_S4;}_X4(_r4){if(_r4===this._V4)return;this._T4.setTime(_r4);
this._V4=_r4;}_Y4(_r4){if(_r4===this._W4)return;this._U4.setTime(_r4);this._W4=_r4;}process(_O4,_P4){if(_O4>_P4)return this._T4.process(_O4,_P4);else return this._U4.process(_O4,_P4);}}class _Z4 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"ingain",automationRate:"a-rate",defaultValue:1,minValue:0},{name:"threshold",automationRate:"a-rate",defaultValue:0.125,minValue:1e-3,maxValue:1},{name:"ratio",
automationRate:"a-rate",defaultValue:4,minValue:1},{name:"attack",automationRate:"a-rate",defaultValue:0.05,minValue:1e-3,maxValue:1e-1},{name:"release",automationRate:"a-rate",defaultValue:0.25,minValue:1e-2,maxValue:1},{name:"outgain",automationRate:"a-rate",defaultValue:1,minValue:0}];}constructor(__4){super();this._n2();const _T4=_Z4.parameterDescriptors.find(_05=>_05.name==="attack");const _U4=_Z4.parameterDescriptors.find(_05=>_05.name==="release");this._15=new _Q4(_T4.defaultValue,_U4.defaultValue);
this._25=0;}process(_35,_45,_55){const input=_35[0];const output=_45[0];const bypass=_55.bypass;const ingain=_55.ingain;const outgain=_55.outgain;const threshold=_55.threshold;const ratio=_55.ratio;const attack=_55.attack;const release=_55.release;if(input.length===0)return this._H2;for(let _C2=0;_C2<input[0].length;++_C2){let _65=input.map(_75=>_75[_C2]);output.forEach((_75,_85)=>{_75[_C2]=_65[_85];});const _95=(ingain[_C2]!==undefined)?ingain[_C2]:ingain[0];_65=_65.map(_a5=>_a5*=_95);const rect=_65.map(_a5=>Math.abs(_a5));
const max=Math.max(...rect);const _b5=_c5(max);const _n4=(threshold[_C2]!==undefined)?threshold[_C2]:threshold[0];const _d5=_c5(_n4);const _e5=Math.max(0,_b5-_d5);const _T4=(attack[_C2]!==undefined)?attack[_C2]:attack[0];const _U4=(release[_C2]!==undefined)?release[_C2]:release[0];this._15._X4(_T4);this._15._Y4(_U4);this._25=this._15.process(_e5,this._25);const _F2=(bypass[_C2]!==undefined)?bypass[_C2]:bypass[0];if(_F2>0)continue;const _B4=(ratio[_C2]!==undefined)?ratio[_C2]:ratio[0];const _f5=(this._25/_B4)-this._25;
const _l3=_g5(_f5);_65=_65.map(_a5=>_a5*=_l3);const _h5=(outgain[_C2]!==undefined)?outgain[_C2]:outgain[0];_65=_65.map(_a5=>_a5*=_h5);output.forEach((_75,_85)=>{_75[_C2]=_65[_85];});}return this._H2;}}function _c5(_i5){return 20*Math.log10(_i5);}function _g5(_i5){return Math.pow(10,_i5/20);}registerProcessor("compressor-processor",_Z4);class _j5 extends AudioWorkletProcessor{static get parameterDescriptors(){const _h3=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,
minValue:0,maxValue:1},{name:"freq",automationRate:"a-rate",defaultValue:Math.min(500.0,_h3),minValue:10.0,maxValue:_h3},{name:"q",automationRate:"a-rate",defaultValue:1.0,minValue:1.0,maxValue:100.0},{name:"gain",automationRate:"a-rate",defaultValue:1e-2,minValue:1e-6}];}constructor(_m2){super();this._n2();const _o2=_m2.outputChannelCount[0];this._X2=0;this._Y2=0;this._Z2=0;this.__2=0;this._03=0;this._13=new Float32Array(_o2);this._23=new Float32Array(_o2);this._33=new Float32Array(_o2);this._43=new Float32Array(_o2);
this._i3=-1;this._63=-1;this._j3=-1;}process(_y2,_z2,parameters){const input=_y2[0];const output=_z2[0];const bypass=parameters.bypass;const freq=parameters.freq;const q=parameters.q;const gain=parameters.gain;const _73=(freq.length===1&&q.length===1&&gain.length===1);if(_73)this._83(freq[0],q[0],gain[0]);for(let _v2=0;_v2<input.length;++_v2){const _A2=input[_v2];const _B2=output[_v2];for(let _C2=0;_C2<_A2.length;++_C2){if(_73===!1){const _k3=(freq[_C2]!==undefined)?freq[_C2]:freq[0];const _93=(q[_C2]!==undefined)?q[_C2]:q[0];
const _l3=(gain[_C2]!==undefined)?gain[_C2]:gain[0];this._83(_k3,_93,_l3);}const _a3=this._Z2*_A2[_C2]+this.__2*this._13[_v2]+this._03*this._23[_v2]-this._X2*this._33[_v2]-this._Y2*this._43[_v2];this._23[_v2]=this._13[_v2];this._13[_v2]=_A2[_C2];this._43[_v2]=this._33[_v2];this._33[_v2]=_a3;const _F2=(bypass[_C2]!==undefined)?bypass[_C2]:bypass[0];_B2[_C2]=(_F2>0)?_A2[_C2]:_a3;}}return this._H2;}_83(_m3,_c3,_n3){if(_m3===this._i3&&_c3===this._63&&_n3===this._j3)return;const _d3=2*Math.PI*_m3/sampleRate;
const _e3=Math.cos(_d3);const _o3=Math.sqrt(_n3);const _u3=_o3+1;const _v3=_o3-1;const _w3=_u3*_e3;const _x3=_v3*_e3;const _y3=_u3-_x3;const _z3=_u3+_x3;const alpha=Math.sin(_d3)/(2*_c3);const _A3=(2*Math.sqrt(_o3)*alpha);const _f3=_z3+_A3;const _X2=-2*(_v3+_w3);const _Y2=_z3-_A3;const _Z2=_o3*(_y3+_A3);const __2=2*_o3*(_v3-_w3);const _03=_o3*(_y3-_A3);this._X2=_X2/_f3;this._Y2=_Y2/_f3;this._Z2=_Z2/_f3;this.__2=__2/_f3;this._03=_03/_f3;this._i3=_m3;this._63=_c3;this._j3=_n3;}}registerProcessor("lo-shelf-processor",
_j5);